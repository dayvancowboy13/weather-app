{"version":3,"file":"main.js","mappings":"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","sources":["webpack://weather-app/./src/style.css","webpack://weather-app/./node_modules/css-loader/dist/runtime/api.js","webpack://weather-app/./node_modules/css-loader/dist/runtime/getUrl.js","webpack://weather-app/./node_modules/css-loader/dist/runtime/sourceMaps.js","webpack://weather-app/./node_modules/style-loader/dist/runtime/injectStylesIntoStyleTag.js","webpack://weather-app/./node_modules/style-loader/dist/runtime/insertBySelector.js","webpack://weather-app/./node_modules/style-loader/dist/runtime/insertStyleElement.js","webpack://weather-app/./node_modules/style-loader/dist/runtime/setAttributesWithoutAttributes.js","webpack://weather-app/./node_modules/style-loader/dist/runtime/styleDomAPI.js","webpack://weather-app/./node_modules/style-loader/dist/runtime/styleTagTransform.js","webpack://weather-app/webpack/bootstrap","webpack://weather-app/webpack/runtime/compat get default export","webpack://weather-app/webpack/runtime/define property getters","webpack://weather-app/webpack/runtime/global","webpack://weather-app/webpack/runtime/hasOwnProperty shorthand","webpack://weather-app/webpack/runtime/publicPath","webpack://weather-app/webpack/runtime/jsonp chunk loading","webpack://weather-app/webpack/runtime/nonce","webpack://weather-app/./src/style.css?7163","webpack://weather-app/./src/WeatherAPI.js","webpack://weather-app/./node_modules/date-fns/locale/en-US/_lib/formatDistance.mjs","webpack://weather-app/./node_modules/date-fns/locale/_lib/buildFormatLongFn.mjs","webpack://weather-app/./node_modules/date-fns/locale/en-US/_lib/formatLong.mjs","webpack://weather-app/./node_modules/date-fns/locale/en-US/_lib/formatRelative.mjs","webpack://weather-app/./node_modules/date-fns/locale/_lib/buildLocalizeFn.mjs","webpack://weather-app/./node_modules/date-fns/locale/en-US/_lib/localize.mjs","webpack://weather-app/./node_modules/date-fns/locale/_lib/buildMatchFn.mjs","webpack://weather-app/./node_modules/date-fns/locale/en-US/_lib/match.mjs","webpack://weather-app/./node_modules/date-fns/locale/_lib/buildMatchPatternFn.mjs","webpack://weather-app/./node_modules/date-fns/locale/en-US.mjs","webpack://weather-app/./node_modules/date-fns/_lib/defaultOptions.mjs","webpack://weather-app/./node_modules/date-fns/constants.mjs","webpack://weather-app/./node_modules/date-fns/toDate.mjs","webpack://weather-app/./node_modules/date-fns/startOfDay.mjs","webpack://weather-app/./node_modules/date-fns/_lib/getTimezoneOffsetInMilliseconds.mjs","webpack://weather-app/./node_modules/date-fns/constructFrom.mjs","webpack://weather-app/./node_modules/date-fns/getDayOfYear.mjs","webpack://weather-app/./node_modules/date-fns/differenceInCalendarDays.mjs","webpack://weather-app/./node_modules/date-fns/startOfYear.mjs","webpack://weather-app/./node_modules/date-fns/startOfWeek.mjs","webpack://weather-app/./node_modules/date-fns/startOfISOWeek.mjs","webpack://weather-app/./node_modules/date-fns/getISOWeekYear.mjs","webpack://weather-app/./node_modules/date-fns/getISOWeek.mjs","webpack://weather-app/./node_modules/date-fns/startOfISOWeekYear.mjs","webpack://weather-app/./node_modules/date-fns/getWeekYear.mjs","webpack://weather-app/./node_modules/date-fns/getWeek.mjs","webpack://weather-app/./node_modules/date-fns/startOfWeekYear.mjs","webpack://weather-app/./node_modules/date-fns/_lib/addLeadingZeros.mjs","webpack://weather-app/./node_modules/date-fns/_lib/format/lightFormatters.mjs","webpack://weather-app/./node_modules/date-fns/_lib/format/formatters.mjs","webpack://weather-app/./node_modules/date-fns/_lib/format/longFormatters.mjs","webpack://weather-app/./node_modules/date-fns/_lib/protectedTokens.mjs","webpack://weather-app/./node_modules/date-fns/isValid.mjs","webpack://weather-app/./node_modules/date-fns/isDate.mjs","webpack://weather-app/./node_modules/date-fns/format.mjs","webpack://weather-app/./node_modules/date-fns/parse/_lib/Setter.mjs","webpack://weather-app/./node_modules/date-fns/transpose.mjs","webpack://weather-app/./node_modules/date-fns/parse/_lib/Parser.mjs","webpack://weather-app/./node_modules/date-fns/parse/_lib/constants.mjs","webpack://weather-app/./node_modules/date-fns/parse/_lib/utils.mjs","webpack://weather-app/./node_modules/date-fns/parse/_lib/parsers/DateParser.mjs","webpack://weather-app/./node_modules/date-fns/addDays.mjs","webpack://weather-app/./node_modules/date-fns/setDay.mjs","webpack://weather-app/./node_modules/date-fns/setISODay.mjs","webpack://weather-app/./node_modules/date-fns/getISODay.mjs","webpack://weather-app/./node_modules/date-fns/parse/_lib/parsers.mjs","webpack://weather-app/./node_modules/date-fns/parse/_lib/parsers/EraParser.mjs","webpack://weather-app/./node_modules/date-fns/parse/_lib/parsers/YearParser.mjs","webpack://weather-app/./node_modules/date-fns/parse/_lib/parsers/LocalWeekYearParser.mjs","webpack://weather-app/./node_modules/date-fns/parse/_lib/parsers/ISOWeekYearParser.mjs","webpack://weather-app/./node_modules/date-fns/parse/_lib/parsers/ExtendedYearParser.mjs","webpack://weather-app/./node_modules/date-fns/parse/_lib/parsers/QuarterParser.mjs","webpack://weather-app/./node_modules/date-fns/parse/_lib/parsers/StandAloneQuarterParser.mjs","webpack://weather-app/./node_modules/date-fns/parse/_lib/parsers/MonthParser.mjs","webpack://weather-app/./node_modules/date-fns/parse/_lib/parsers/StandAloneMonthParser.mjs","webpack://weather-app/./node_modules/date-fns/parse/_lib/parsers/LocalWeekParser.mjs","webpack://weather-app/./node_modules/date-fns/setWeek.mjs","webpack://weather-app/./node_modules/date-fns/parse/_lib/parsers/ISOWeekParser.mjs","webpack://weather-app/./node_modules/date-fns/setISOWeek.mjs","webpack://weather-app/./node_modules/date-fns/parse/_lib/parsers/DayOfYearParser.mjs","webpack://weather-app/./node_modules/date-fns/parse/_lib/parsers/DayParser.mjs","webpack://weather-app/./node_modules/date-fns/parse/_lib/parsers/LocalDayParser.mjs","webpack://weather-app/./node_modules/date-fns/parse/_lib/parsers/StandAloneLocalDayParser.mjs","webpack://weather-app/./node_modules/date-fns/parse/_lib/parsers/ISODayParser.mjs","webpack://weather-app/./node_modules/date-fns/parse/_lib/parsers/AMPMParser.mjs","webpack://weather-app/./node_modules/date-fns/parse/_lib/parsers/AMPMMidnightParser.mjs","webpack://weather-app/./node_modules/date-fns/parse/_lib/parsers/DayPeriodParser.mjs","webpack://weather-app/./node_modules/date-fns/parse/_lib/parsers/Hour1to12Parser.mjs","webpack://weather-app/./node_modules/date-fns/parse/_lib/parsers/Hour0to23Parser.mjs","webpack://weather-app/./node_modules/date-fns/parse/_lib/parsers/Hour0To11Parser.mjs","webpack://weather-app/./node_modules/date-fns/parse/_lib/parsers/Hour1To24Parser.mjs","webpack://weather-app/./node_modules/date-fns/parse/_lib/parsers/MinuteParser.mjs","webpack://weather-app/./node_modules/date-fns/parse/_lib/parsers/SecondParser.mjs","webpack://weather-app/./node_modules/date-fns/parse/_lib/parsers/FractionOfSecondParser.mjs","webpack://weather-app/./node_modules/date-fns/parse/_lib/parsers/ISOTimezoneWithZParser.mjs","webpack://weather-app/./node_modules/date-fns/parse/_lib/parsers/ISOTimezoneParser.mjs","webpack://weather-app/./node_modules/date-fns/parse/_lib/parsers/TimestampSecondsParser.mjs","webpack://weather-app/./node_modules/date-fns/parse/_lib/parsers/TimestampMillisecondsParser.mjs","webpack://weather-app/./node_modules/date-fns/parse.mjs","webpack://weather-app/./node_modules/date-fns/getDefaultOptions.mjs","webpack://weather-app/./src/JSONProcessor.js","webpack://weather-app/./src/DOMController.js"],"sourcesContent":["// Imports\nimport ___CSS_LOADER_API_SOURCEMAP_IMPORT___ from \"../node_modules/css-loader/dist/runtime/sourceMaps.js\";\nimport ___CSS_LOADER_API_IMPORT___ from \"../node_modules/css-loader/dist/runtime/api.js\";\nimport ___CSS_LOADER_GET_URL_IMPORT___ from \"../node_modules/css-loader/dist/runtime/getUrl.js\";\nvar ___CSS_LOADER_URL_IMPORT_0___ = new URL(\"./images/svg icons/find.svg\", import.meta.url);\nvar ___CSS_LOADER_URL_IMPORT_1___ = new URL(\"./images/svg icons/expand_arrow.svg\", import.meta.url);\nvar ___CSS_LOADER_URL_IMPORT_2___ = new URL(\"./images/svg icons/conditions/clear-day.svg\", import.meta.url);\nvar ___CSS_LOADER_URL_IMPORT_3___ = new URL(\"./images/svg icons/conditions/partly-cloudy-day.svg\", import.meta.url);\nvar ___CSS_LOADER_URL_IMPORT_4___ = new URL(\"./images/svg icons/conditions/partly-cloudy-night.svg\", import.meta.url);\nvar ___CSS_LOADER_URL_IMPORT_5___ = new URL(\"./images/svg icons/conditions/clear-night.svg\", import.meta.url);\nvar ___CSS_LOADER_URL_IMPORT_6___ = new URL(\"./images/svg icons/conditions/cloudy.svg\", import.meta.url);\nvar ___CSS_LOADER_URL_IMPORT_7___ = new URL(\"./images/svg icons/conditions/rain.svg\", import.meta.url);\nvar ___CSS_LOADER_URL_IMPORT_8___ = new URL(\"./images/svg icons/conditions/fog.svg\", import.meta.url);\nvar ___CSS_LOADER_URL_IMPORT_9___ = new URL(\"./images/svg icons/conditions/wind.svg\", import.meta.url);\nvar ___CSS_LOADER_URL_IMPORT_10___ = new URL(\"./images/svg icons/conditions/snow.svg\", import.meta.url);\nvar ___CSS_LOADER_EXPORT___ = ___CSS_LOADER_API_IMPORT___(___CSS_LOADER_API_SOURCEMAP_IMPORT___);\nvar ___CSS_LOADER_URL_REPLACEMENT_0___ = ___CSS_LOADER_GET_URL_IMPORT___(___CSS_LOADER_URL_IMPORT_0___);\nvar ___CSS_LOADER_URL_REPLACEMENT_1___ = ___CSS_LOADER_GET_URL_IMPORT___(___CSS_LOADER_URL_IMPORT_1___);\nvar ___CSS_LOADER_URL_REPLACEMENT_2___ = ___CSS_LOADER_GET_URL_IMPORT___(___CSS_LOADER_URL_IMPORT_2___);\nvar ___CSS_LOADER_URL_REPLACEMENT_3___ = ___CSS_LOADER_GET_URL_IMPORT___(___CSS_LOADER_URL_IMPORT_3___);\nvar ___CSS_LOADER_URL_REPLACEMENT_4___ = ___CSS_LOADER_GET_URL_IMPORT___(___CSS_LOADER_URL_IMPORT_4___);\nvar ___CSS_LOADER_URL_REPLACEMENT_5___ = ___CSS_LOADER_GET_URL_IMPORT___(___CSS_LOADER_URL_IMPORT_5___);\nvar ___CSS_LOADER_URL_REPLACEMENT_6___ = ___CSS_LOADER_GET_URL_IMPORT___(___CSS_LOADER_URL_IMPORT_6___);\nvar ___CSS_LOADER_URL_REPLACEMENT_7___ = ___CSS_LOADER_GET_URL_IMPORT___(___CSS_LOADER_URL_IMPORT_7___);\nvar ___CSS_LOADER_URL_REPLACEMENT_8___ = ___CSS_LOADER_GET_URL_IMPORT___(___CSS_LOADER_URL_IMPORT_8___);\nvar ___CSS_LOADER_URL_REPLACEMENT_9___ = ___CSS_LOADER_GET_URL_IMPORT___(___CSS_LOADER_URL_IMPORT_9___);\nvar ___CSS_LOADER_URL_REPLACEMENT_10___ = ___CSS_LOADER_GET_URL_IMPORT___(___CSS_LOADER_URL_IMPORT_10___);\n// Module\n___CSS_LOADER_EXPORT___.push([module.id, `:root {\n    background-color: rgb(238, 244, 249);\n    font-family: 'Segoe UI', Tahoma, Geneva, Verdana, sans-serif;\n    --lightest: rgb(238, 244, 249);\n    --light-blue: rgb(142, 180, 209);\n    --mid-blue: #005fb8;\n    --dark: #002a52;\n\n    /* padding: 5% 10%; */\n\n    display: flex;\n    justify-content: center;\n}\n\nbody {\n    display: flex;\n    flex-direction: column;\n    justify-content: center;\n\n}\n\nheader {\n    display: flex;\n    color: var(--mid-blue);\n    font-size: larger;\n    align-items: center;\n    flex-direction: column;\n}\n\n#city-search {\n    font-size: 1.2em;\n    padding-left: 6px;\n    box-sizing: border-box;\n    border-top: none;\n    border-right: none;\n    border-left: none;\n    border-bottom-color: var(--dark);\n\n    background-color: rgba(0, 0, 0, 0);\n}\n\n#search-container {\n    display: flex;\n}\n\n#submit-search {\n    cursor: pointer;\n    content: url(${___CSS_LOADER_URL_REPLACEMENT_0___});\n    border: none;\n    background: none;\n\n}\n\n#city-search:focus {\n    border-bottom-width: 3px;\n    outline: none;\n    background-color: rgba(0, 0, 0, 10%);\n}\n\n#main-display-container {\n    display: none;\n}\n\n#temp {\n    margin: 7px 0;\n}\n\n[data-unit='f']:after {\n    content: ' °F'\n}\n\n[data-unit='c']:after {\n    content: ' °C'\n}\n\nbutton {\n    cursor: pointer;\n}\n\n#current-conditions {\n    box-sizing: border-box;\n    font-size: 1.1em;\n    background-color: var(--light-blue);\n    margin-top: 10px;\n    padding: 7px 10px 2px 10px;\n    max-width: max-content;\n\n    display: grid;\n    grid-auto-flow: column;\n    grid-template-columns: 1fr;\n    grid-auto-columns: auto;\n    gap: 30px;\n\n    & h2 {\n        margin-top: 0;\n    }\n\n    & p {\n        margin-bottom: 0;\n    }\n}\n\n#current-conditions-main {\n    display: grid;\n    grid-template-rows: auto 60px auto 45px 25px auto;\n    /* grid-template-rows: auto 40px; */\n\n    grid-template-columns: auto 40px;\n\n    & #city {\n        grid-row: 1/2;\n        margin-bottom: 5px\n    }\n\n    & #datetime {\n        grid-row: 2/3;\n        margin: 5px 0;\n    }\n\n    & #temp {\n        grid-row: 3/4;\n    }\n\n    & #hi-low-temp {\n        grid-row: 4/5;\n    }\n\n    & #unit-switch {\n        grid-row: 5/6;\n        justify-self: start;\n    }\n\n    & #conditions {\n        grid-row: 6/7;\n    }\n}\n\n#expand-details-btn {\n    align-self: end;\n    grid-row: 6/7;\n    grid-column: 2/3;\n    cursor: pointer;\n    border: none;\n    content: url(${___CSS_LOADER_URL_REPLACEMENT_1___});\n}\n\n.details-shown {\n    transform: rotate(180deg);\n\n}\n\n#current-conditions-details {\n    justify-items: end;\n    text-align: center;\n    width: auto;\n    font-size: .8em;\n    /* background-color: hsl(206, 42%, 79%); */\n\n    & span {\n        font-weight: bolder;\n        font-size: 1.4em;\n    }\n\n    & h3 {\n        justify-self: center;\n        margin: 2px 0 0 0;\n\n    }\n\n}\n\n#unit-switch {\n    /* flex: 0 0 auto; */\n\n    box-sizing: border-box;\n    background-color: var(--light-blue);\n    border: none;\n    border-radius: 8px;\n    height: 26px;\n    padding: 10px auto;\n\n    & span {\n        padding: 2px 6px;\n    }\n\n}\n\n.button-unit {\n    font-size: larger;\n    color: var(--dark);\n}\n\n.button-unit.unit-selected {\n    font-weight: bold;\n    background-color: var(--dark);\n    color: white;\n    border-radius: 8px;\n    padding: 12px;\n}\n\n#today-hourly-conditions {\n    display: grid;\n    overflow: auto;\n    gap: 7px;\n    grid-template-columns: repeat(24, 1fr);\n    max-width: 50vw;\n    padding: 2px 5px;\n}\n\n.hourly-card {\n    box-sizing: border-box;\n    width: 150px;\n    padding: 8px;\n    background-color: var(--light-blue);\n\n    & h3 {\n        margin-top: 0;\n    }\n}\n\n#seven-day {\n    display: grid;\n    overflow: auto;\n\n    gap: 7px;\n    grid-template-columns: repeat(7, 1fr);\n    /* border: 1px solid black; */\n    max-width: 50vw;\n    padding: 2px 5px;\n}\n\n/* width */\n::-webkit-scrollbar {\n    width: 10px;\n    height: 10px;\n}\n\n/* Track */\n::-webkit-scrollbar-track {\n    background: #f1f1f1;\n}\n\n/* Handle */\n::-webkit-scrollbar-thumb {\n    background: var(--mid-blue);\n    border-radius: 3px;\n}\n\n/* Handle on hover */\n::-webkit-scrollbar-thumb:hover {\n    background: var(--dark);\n}\n\n\n.seven-day-card {\n    box-sizing: border-box;\n    /* border: solid black 1px; */\n    width: 150px;\n    padding: 8px;\n    background-color: var(--light-blue);\n\n    & h3 {\n        margin-top: 0;\n    }\n}\n\n[data-icon]:before {\n    display: block;\n    min-width: 50px;\n    max-width: 80px;\n    min-height: 50px;\n    max-height: 80px;\n}\n\n[data-icon='clear-day']:before {\n    content: url(${___CSS_LOADER_URL_REPLACEMENT_2___});\n    /* max-width: 50px;\n    max-height: 50px; */\n}\n\n[data-icon='partly-cloudy-day']:before {\n    content: url(${___CSS_LOADER_URL_REPLACEMENT_3___});\n}\n\n[data-icon='partly-cloudy-night']:before {\n    content: url(${___CSS_LOADER_URL_REPLACEMENT_4___});\n}\n\n[data-icon='clear-night']:before {\n    content: url(${___CSS_LOADER_URL_REPLACEMENT_5___});\n}\n\n[data-icon='cloudy']:before {\n    content: url(${___CSS_LOADER_URL_REPLACEMENT_6___});\n}\n\n[data-icon='rain']:before {\n    content: url(${___CSS_LOADER_URL_REPLACEMENT_7___});\n}\n\n[data-icon='fog']:before {\n    content: url(${___CSS_LOADER_URL_REPLACEMENT_8___});\n}\n\n[data-icon='wind']:before {\n    content: url(${___CSS_LOADER_URL_REPLACEMENT_9___});\n}\n\n[data-icon='snow']:before {\n    content: url(${___CSS_LOADER_URL_REPLACEMENT_10___});\n}\n\n[data-uv='0'],\n[data-uv='1'],\n[data-uv='2']:after {\n    content: \" (Low)\";\n    color: #029000;\n}\n\n[data-uv='3'],\n[data-uv='4'],\n[data-uv='5']:after {\n    content: \" (Mild)\";\n    color: #b8b800;\n}\n\n[data-uv='6'],\n[data-uv='7']:after {\n    content: \" (High)\";\n    color: #B85900;\n\n}\n\n[data-uv='8'],\n[data-uv='9'],\n[data-uv='10']:after {\n    content: \" (Very High)\";\n    color: #b82500;\n}\n\n[data-uv='11'],\n[data-uv='12'],\n[data-uv='13'],\n[data-uv='14'],\n[data-uv='15']:after {\n    content: \" (Extreme)\";\n    color: #e80000;\n}`, \"\",{\"version\":3,\"sources\":[\"webpack://./src/style.css\"],\"names\":[],\"mappings\":\"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\",\"sourcesContent\":[\":root {\\n    background-color: rgb(238, 244, 249);\\n    font-family: 'Segoe UI', Tahoma, Geneva, Verdana, sans-serif;\\n    --lightest: rgb(238, 244, 249);\\n    --light-blue: rgb(142, 180, 209);\\n    --mid-blue: #005fb8;\\n    --dark: #002a52;\\n\\n    /* padding: 5% 10%; */\\n\\n    display: flex;\\n    justify-content: center;\\n}\\n\\nbody {\\n    display: flex;\\n    flex-direction: column;\\n    justify-content: center;\\n\\n}\\n\\nheader {\\n    display: flex;\\n    color: var(--mid-blue);\\n    font-size: larger;\\n    align-items: center;\\n    flex-direction: column;\\n}\\n\\n#city-search {\\n    font-size: 1.2em;\\n    padding-left: 6px;\\n    box-sizing: border-box;\\n    border-top: none;\\n    border-right: none;\\n    border-left: none;\\n    border-bottom-color: var(--dark);\\n\\n    background-color: rgba(0, 0, 0, 0);\\n}\\n\\n#search-container {\\n    display: flex;\\n}\\n\\n#submit-search {\\n    cursor: pointer;\\n    content: url('./images/svg icons/find.svg');\\n    border: none;\\n    background: none;\\n\\n}\\n\\n#city-search:focus {\\n    border-bottom-width: 3px;\\n    outline: none;\\n    background-color: rgba(0, 0, 0, 10%);\\n}\\n\\n#main-display-container {\\n    display: none;\\n}\\n\\n#temp {\\n    margin: 7px 0;\\n}\\n\\n[data-unit='f']:after {\\n    content: ' °F'\\n}\\n\\n[data-unit='c']:after {\\n    content: ' °C'\\n}\\n\\nbutton {\\n    cursor: pointer;\\n}\\n\\n#current-conditions {\\n    box-sizing: border-box;\\n    font-size: 1.1em;\\n    background-color: var(--light-blue);\\n    margin-top: 10px;\\n    padding: 7px 10px 2px 10px;\\n    max-width: max-content;\\n\\n    display: grid;\\n    grid-auto-flow: column;\\n    grid-template-columns: 1fr;\\n    grid-auto-columns: auto;\\n    gap: 30px;\\n\\n    & h2 {\\n        margin-top: 0;\\n    }\\n\\n    & p {\\n        margin-bottom: 0;\\n    }\\n}\\n\\n#current-conditions-main {\\n    display: grid;\\n    grid-template-rows: auto 60px auto 45px 25px auto;\\n    /* grid-template-rows: auto 40px; */\\n\\n    grid-template-columns: auto 40px;\\n\\n    & #city {\\n        grid-row: 1/2;\\n        margin-bottom: 5px\\n    }\\n\\n    & #datetime {\\n        grid-row: 2/3;\\n        margin: 5px 0;\\n    }\\n\\n    & #temp {\\n        grid-row: 3/4;\\n    }\\n\\n    & #hi-low-temp {\\n        grid-row: 4/5;\\n    }\\n\\n    & #unit-switch {\\n        grid-row: 5/6;\\n        justify-self: start;\\n    }\\n\\n    & #conditions {\\n        grid-row: 6/7;\\n    }\\n}\\n\\n#expand-details-btn {\\n    align-self: end;\\n    grid-row: 6/7;\\n    grid-column: 2/3;\\n    cursor: pointer;\\n    border: none;\\n    content: url('./images/svg icons/expand_arrow.svg');\\n}\\n\\n.details-shown {\\n    transform: rotate(180deg);\\n\\n}\\n\\n#current-conditions-details {\\n    justify-items: end;\\n    text-align: center;\\n    width: auto;\\n    font-size: .8em;\\n    /* background-color: hsl(206, 42%, 79%); */\\n\\n    & span {\\n        font-weight: bolder;\\n        font-size: 1.4em;\\n    }\\n\\n    & h3 {\\n        justify-self: center;\\n        margin: 2px 0 0 0;\\n\\n    }\\n\\n}\\n\\n#unit-switch {\\n    /* flex: 0 0 auto; */\\n\\n    box-sizing: border-box;\\n    background-color: var(--light-blue);\\n    border: none;\\n    border-radius: 8px;\\n    height: 26px;\\n    padding: 10px auto;\\n\\n    & span {\\n        padding: 2px 6px;\\n    }\\n\\n}\\n\\n.button-unit {\\n    font-size: larger;\\n    color: var(--dark);\\n}\\n\\n.button-unit.unit-selected {\\n    font-weight: bold;\\n    background-color: var(--dark);\\n    color: white;\\n    border-radius: 8px;\\n    padding: 12px;\\n}\\n\\n#today-hourly-conditions {\\n    display: grid;\\n    overflow: auto;\\n    gap: 7px;\\n    grid-template-columns: repeat(24, 1fr);\\n    max-width: 50vw;\\n    padding: 2px 5px;\\n}\\n\\n.hourly-card {\\n    box-sizing: border-box;\\n    width: 150px;\\n    padding: 8px;\\n    background-color: var(--light-blue);\\n\\n    & h3 {\\n        margin-top: 0;\\n    }\\n}\\n\\n#seven-day {\\n    display: grid;\\n    overflow: auto;\\n\\n    gap: 7px;\\n    grid-template-columns: repeat(7, 1fr);\\n    /* border: 1px solid black; */\\n    max-width: 50vw;\\n    padding: 2px 5px;\\n}\\n\\n/* width */\\n::-webkit-scrollbar {\\n    width: 10px;\\n    height: 10px;\\n}\\n\\n/* Track */\\n::-webkit-scrollbar-track {\\n    background: #f1f1f1;\\n}\\n\\n/* Handle */\\n::-webkit-scrollbar-thumb {\\n    background: var(--mid-blue);\\n    border-radius: 3px;\\n}\\n\\n/* Handle on hover */\\n::-webkit-scrollbar-thumb:hover {\\n    background: var(--dark);\\n}\\n\\n\\n.seven-day-card {\\n    box-sizing: border-box;\\n    /* border: solid black 1px; */\\n    width: 150px;\\n    padding: 8px;\\n    background-color: var(--light-blue);\\n\\n    & h3 {\\n        margin-top: 0;\\n    }\\n}\\n\\n[data-icon]:before {\\n    display: block;\\n    min-width: 50px;\\n    max-width: 80px;\\n    min-height: 50px;\\n    max-height: 80px;\\n}\\n\\n[data-icon='clear-day']:before {\\n    content: url('./images/svg icons/conditions/clear-day.svg');\\n    /* max-width: 50px;\\n    max-height: 50px; */\\n}\\n\\n[data-icon='partly-cloudy-day']:before {\\n    content: url('./images/svg icons/conditions/partly-cloudy-day.svg');\\n}\\n\\n[data-icon='partly-cloudy-night']:before {\\n    content: url('./images/svg icons/conditions/partly-cloudy-night.svg');\\n}\\n\\n[data-icon='clear-night']:before {\\n    content: url('./images/svg icons/conditions/clear-night.svg');\\n}\\n\\n[data-icon='cloudy']:before {\\n    content: url('./images/svg icons/conditions/cloudy.svg');\\n}\\n\\n[data-icon='rain']:before {\\n    content: url('./images/svg icons/conditions/rain.svg');\\n}\\n\\n[data-icon='fog']:before {\\n    content: url('./images/svg icons/conditions/fog.svg');\\n}\\n\\n[data-icon='wind']:before {\\n    content: url('./images/svg icons/conditions/wind.svg');\\n}\\n\\n[data-icon='snow']:before {\\n    content: url('./images/svg icons/conditions/snow.svg');\\n}\\n\\n[data-uv='0'],\\n[data-uv='1'],\\n[data-uv='2']:after {\\n    content: \\\" (Low)\\\";\\n    color: #029000;\\n}\\n\\n[data-uv='3'],\\n[data-uv='4'],\\n[data-uv='5']:after {\\n    content: \\\" (Mild)\\\";\\n    color: #b8b800;\\n}\\n\\n[data-uv='6'],\\n[data-uv='7']:after {\\n    content: \\\" (High)\\\";\\n    color: #B85900;\\n\\n}\\n\\n[data-uv='8'],\\n[data-uv='9'],\\n[data-uv='10']:after {\\n    content: \\\" (Very High)\\\";\\n    color: #b82500;\\n}\\n\\n[data-uv='11'],\\n[data-uv='12'],\\n[data-uv='13'],\\n[data-uv='14'],\\n[data-uv='15']:after {\\n    content: \\\" (Extreme)\\\";\\n    color: #e80000;\\n}\"],\"sourceRoot\":\"\"}]);\n// Exports\nexport default ___CSS_LOADER_EXPORT___;\n","\"use strict\";\n\n/*\n  MIT License http://www.opensource.org/licenses/mit-license.php\n  Author Tobias Koppers @sokra\n*/\nmodule.exports = function (cssWithMappingToString) {\n  var list = [];\n\n  // return the list of modules as css string\n  list.toString = function toString() {\n    return this.map(function (item) {\n      var content = \"\";\n      var needLayer = typeof item[5] !== \"undefined\";\n      if (item[4]) {\n        content += \"@supports (\".concat(item[4], \") {\");\n      }\n      if (item[2]) {\n        content += \"@media \".concat(item[2], \" {\");\n      }\n      if (needLayer) {\n        content += \"@layer\".concat(item[5].length > 0 ? \" \".concat(item[5]) : \"\", \" {\");\n      }\n      content += cssWithMappingToString(item);\n      if (needLayer) {\n        content += \"}\";\n      }\n      if (item[2]) {\n        content += \"}\";\n      }\n      if (item[4]) {\n        content += \"}\";\n      }\n      return content;\n    }).join(\"\");\n  };\n\n  // import a list of modules into the list\n  list.i = function i(modules, media, dedupe, supports, layer) {\n    if (typeof modules === \"string\") {\n      modules = [[null, modules, undefined]];\n    }\n    var alreadyImportedModules = {};\n    if (dedupe) {\n      for (var k = 0; k < this.length; k++) {\n        var id = this[k][0];\n        if (id != null) {\n          alreadyImportedModules[id] = true;\n        }\n      }\n    }\n    for (var _k = 0; _k < modules.length; _k++) {\n      var item = [].concat(modules[_k]);\n      if (dedupe && alreadyImportedModules[item[0]]) {\n        continue;\n      }\n      if (typeof layer !== \"undefined\") {\n        if (typeof item[5] === \"undefined\") {\n          item[5] = layer;\n        } else {\n          item[1] = \"@layer\".concat(item[5].length > 0 ? \" \".concat(item[5]) : \"\", \" {\").concat(item[1], \"}\");\n          item[5] = layer;\n        }\n      }\n      if (media) {\n        if (!item[2]) {\n          item[2] = media;\n        } else {\n          item[1] = \"@media \".concat(item[2], \" {\").concat(item[1], \"}\");\n          item[2] = media;\n        }\n      }\n      if (supports) {\n        if (!item[4]) {\n          item[4] = \"\".concat(supports);\n        } else {\n          item[1] = \"@supports (\".concat(item[4], \") {\").concat(item[1], \"}\");\n          item[4] = supports;\n        }\n      }\n      list.push(item);\n    }\n  };\n  return list;\n};","\"use strict\";\n\nmodule.exports = function (url, options) {\n  if (!options) {\n    options = {};\n  }\n  if (!url) {\n    return url;\n  }\n  url = String(url.__esModule ? url.default : url);\n\n  // If url is already wrapped in quotes, remove them\n  if (/^['\"].*['\"]$/.test(url)) {\n    url = url.slice(1, -1);\n  }\n  if (options.hash) {\n    url += options.hash;\n  }\n\n  // Should url be wrapped?\n  // See https://drafts.csswg.org/css-values-3/#urls\n  if (/[\"'() \\t\\n]|(%20)/.test(url) || options.needQuotes) {\n    return \"\\\"\".concat(url.replace(/\"/g, '\\\\\"').replace(/\\n/g, \"\\\\n\"), \"\\\"\");\n  }\n  return url;\n};","\"use strict\";\n\nmodule.exports = function (item) {\n  var content = item[1];\n  var cssMapping = item[3];\n  if (!cssMapping) {\n    return content;\n  }\n  if (typeof btoa === \"function\") {\n    var base64 = btoa(unescape(encodeURIComponent(JSON.stringify(cssMapping))));\n    var data = \"sourceMappingURL=data:application/json;charset=utf-8;base64,\".concat(base64);\n    var sourceMapping = \"/*# \".concat(data, \" */\");\n    return [content].concat([sourceMapping]).join(\"\\n\");\n  }\n  return [content].join(\"\\n\");\n};","\"use strict\";\n\nvar stylesInDOM = [];\nfunction getIndexByIdentifier(identifier) {\n  var result = -1;\n  for (var i = 0; i < stylesInDOM.length; i++) {\n    if (stylesInDOM[i].identifier === identifier) {\n      result = i;\n      break;\n    }\n  }\n  return result;\n}\nfunction modulesToDom(list, options) {\n  var idCountMap = {};\n  var identifiers = [];\n  for (var i = 0; i < list.length; i++) {\n    var item = list[i];\n    var id = options.base ? item[0] + options.base : item[0];\n    var count = idCountMap[id] || 0;\n    var identifier = \"\".concat(id, \" \").concat(count);\n    idCountMap[id] = count + 1;\n    var indexByIdentifier = getIndexByIdentifier(identifier);\n    var obj = {\n      css: item[1],\n      media: item[2],\n      sourceMap: item[3],\n      supports: item[4],\n      layer: item[5]\n    };\n    if (indexByIdentifier !== -1) {\n      stylesInDOM[indexByIdentifier].references++;\n      stylesInDOM[indexByIdentifier].updater(obj);\n    } else {\n      var updater = addElementStyle(obj, options);\n      options.byIndex = i;\n      stylesInDOM.splice(i, 0, {\n        identifier: identifier,\n        updater: updater,\n        references: 1\n      });\n    }\n    identifiers.push(identifier);\n  }\n  return identifiers;\n}\nfunction addElementStyle(obj, options) {\n  var api = options.domAPI(options);\n  api.update(obj);\n  var updater = function updater(newObj) {\n    if (newObj) {\n      if (newObj.css === obj.css && newObj.media === obj.media && newObj.sourceMap === obj.sourceMap && newObj.supports === obj.supports && newObj.layer === obj.layer) {\n        return;\n      }\n      api.update(obj = newObj);\n    } else {\n      api.remove();\n    }\n  };\n  return updater;\n}\nmodule.exports = function (list, options) {\n  options = options || {};\n  list = list || [];\n  var lastIdentifiers = modulesToDom(list, options);\n  return function update(newList) {\n    newList = newList || [];\n    for (var i = 0; i < lastIdentifiers.length; i++) {\n      var identifier = lastIdentifiers[i];\n      var index = getIndexByIdentifier(identifier);\n      stylesInDOM[index].references--;\n    }\n    var newLastIdentifiers = modulesToDom(newList, options);\n    for (var _i = 0; _i < lastIdentifiers.length; _i++) {\n      var _identifier = lastIdentifiers[_i];\n      var _index = getIndexByIdentifier(_identifier);\n      if (stylesInDOM[_index].references === 0) {\n        stylesInDOM[_index].updater();\n        stylesInDOM.splice(_index, 1);\n      }\n    }\n    lastIdentifiers = newLastIdentifiers;\n  };\n};","\"use strict\";\n\nvar memo = {};\n\n/* istanbul ignore next  */\nfunction getTarget(target) {\n  if (typeof memo[target] === \"undefined\") {\n    var styleTarget = document.querySelector(target);\n\n    // Special case to return head of iframe instead of iframe itself\n    if (window.HTMLIFrameElement && styleTarget instanceof window.HTMLIFrameElement) {\n      try {\n        // This will throw an exception if access to iframe is blocked\n        // due to cross-origin restrictions\n        styleTarget = styleTarget.contentDocument.head;\n      } catch (e) {\n        // istanbul ignore next\n        styleTarget = null;\n      }\n    }\n    memo[target] = styleTarget;\n  }\n  return memo[target];\n}\n\n/* istanbul ignore next  */\nfunction insertBySelector(insert, style) {\n  var target = getTarget(insert);\n  if (!target) {\n    throw new Error(\"Couldn't find a style target. This probably means that the value for the 'insert' parameter is invalid.\");\n  }\n  target.appendChild(style);\n}\nmodule.exports = insertBySelector;","\"use strict\";\n\n/* istanbul ignore next  */\nfunction insertStyleElement(options) {\n  var element = document.createElement(\"style\");\n  options.setAttributes(element, options.attributes);\n  options.insert(element, options.options);\n  return element;\n}\nmodule.exports = insertStyleElement;","\"use strict\";\n\n/* istanbul ignore next  */\nfunction setAttributesWithoutAttributes(styleElement) {\n  var nonce = typeof __webpack_nonce__ !== \"undefined\" ? __webpack_nonce__ : null;\n  if (nonce) {\n    styleElement.setAttribute(\"nonce\", nonce);\n  }\n}\nmodule.exports = setAttributesWithoutAttributes;","\"use strict\";\n\n/* istanbul ignore next  */\nfunction apply(styleElement, options, obj) {\n  var css = \"\";\n  if (obj.supports) {\n    css += \"@supports (\".concat(obj.supports, \") {\");\n  }\n  if (obj.media) {\n    css += \"@media \".concat(obj.media, \" {\");\n  }\n  var needLayer = typeof obj.layer !== \"undefined\";\n  if (needLayer) {\n    css += \"@layer\".concat(obj.layer.length > 0 ? \" \".concat(obj.layer) : \"\", \" {\");\n  }\n  css += obj.css;\n  if (needLayer) {\n    css += \"}\";\n  }\n  if (obj.media) {\n    css += \"}\";\n  }\n  if (obj.supports) {\n    css += \"}\";\n  }\n  var sourceMap = obj.sourceMap;\n  if (sourceMap && typeof btoa !== \"undefined\") {\n    css += \"\\n/*# sourceMappingURL=data:application/json;base64,\".concat(btoa(unescape(encodeURIComponent(JSON.stringify(sourceMap)))), \" */\");\n  }\n\n  // For old IE\n  /* istanbul ignore if  */\n  options.styleTagTransform(css, styleElement, options.options);\n}\nfunction removeStyleElement(styleElement) {\n  // istanbul ignore if\n  if (styleElement.parentNode === null) {\n    return false;\n  }\n  styleElement.parentNode.removeChild(styleElement);\n}\n\n/* istanbul ignore next  */\nfunction domAPI(options) {\n  if (typeof document === \"undefined\") {\n    return {\n      update: function update() {},\n      remove: function remove() {}\n    };\n  }\n  var styleElement = options.insertStyleElement(options);\n  return {\n    update: function update(obj) {\n      apply(styleElement, options, obj);\n    },\n    remove: function remove() {\n      removeStyleElement(styleElement);\n    }\n  };\n}\nmodule.exports = domAPI;","\"use strict\";\n\n/* istanbul ignore next  */\nfunction styleTagTransform(css, styleElement) {\n  if (styleElement.styleSheet) {\n    styleElement.styleSheet.cssText = css;\n  } else {\n    while (styleElement.firstChild) {\n      styleElement.removeChild(styleElement.firstChild);\n    }\n    styleElement.appendChild(document.createTextNode(css));\n  }\n}\nmodule.exports = styleTagTransform;","// The module cache\nvar __webpack_module_cache__ = {};\n\n// The require function\nfunction __webpack_require__(moduleId) {\n\t// Check if module is in cache\n\tvar cachedModule = __webpack_module_cache__[moduleId];\n\tif (cachedModule !== undefined) {\n\t\treturn cachedModule.exports;\n\t}\n\t// Create a new module (and put it into the cache)\n\tvar module = __webpack_module_cache__[moduleId] = {\n\t\tid: moduleId,\n\t\t// no module.loaded needed\n\t\texports: {}\n\t};\n\n\t// Execute the module function\n\t__webpack_modules__[moduleId](module, module.exports, __webpack_require__);\n\n\t// Return the exports of the module\n\treturn module.exports;\n}\n\n// expose the modules object (__webpack_modules__)\n__webpack_require__.m = __webpack_modules__;\n\n","// getDefaultExport function for compatibility with non-harmony modules\n__webpack_require__.n = (module) => {\n\tvar getter = module && module.__esModule ?\n\t\t() => (module['default']) :\n\t\t() => (module);\n\t__webpack_require__.d(getter, { a: getter });\n\treturn getter;\n};","// define getter functions for harmony exports\n__webpack_require__.d = (exports, definition) => {\n\tfor(var key in definition) {\n\t\tif(__webpack_require__.o(definition, key) && !__webpack_require__.o(exports, key)) {\n\t\t\tObject.defineProperty(exports, key, { enumerable: true, get: definition[key] });\n\t\t}\n\t}\n};","__webpack_require__.g = (function() {\n\tif (typeof globalThis === 'object') return globalThis;\n\ttry {\n\t\treturn this || new Function('return this')();\n\t} catch (e) {\n\t\tif (typeof window === 'object') return window;\n\t}\n})();","__webpack_require__.o = (obj, prop) => (Object.prototype.hasOwnProperty.call(obj, prop))","var scriptUrl;\nif (__webpack_require__.g.importScripts) scriptUrl = __webpack_require__.g.location + \"\";\nvar document = __webpack_require__.g.document;\nif (!scriptUrl && document) {\n\tif (document.currentScript)\n\t\tscriptUrl = document.currentScript.src;\n\tif (!scriptUrl) {\n\t\tvar scripts = document.getElementsByTagName(\"script\");\n\t\tif(scripts.length) {\n\t\t\tvar i = scripts.length - 1;\n\t\t\twhile (i > -1 && (!scriptUrl || !/^http(s?):/.test(scriptUrl))) scriptUrl = scripts[i--].src;\n\t\t}\n\t}\n}\n// When supporting browsers where an automatic publicPath is not supported you must specify an output.publicPath manually via configuration\n// or pass an empty string (\"\") and set the __webpack_public_path__ variable from your code to use your own logic.\nif (!scriptUrl) throw new Error(\"Automatic publicPath is not supported in this browser\");\nscriptUrl = scriptUrl.replace(/#.*$/, \"\").replace(/\\?.*$/, \"\").replace(/\\/[^\\/]+$/, \"/\");\n__webpack_require__.p = scriptUrl;","__webpack_require__.b = document.baseURI || self.location.href;\n\n// object to store loaded and loading chunks\n// undefined = chunk not loaded, null = chunk preloaded/prefetched\n// [resolve, reject, Promise] = chunk loading, 0 = chunk loaded\nvar installedChunks = {\n\t792: 0\n};\n\n// no chunk on demand loading\n\n// no prefetching\n\n// no preloaded\n\n// no HMR\n\n// no HMR manifest\n\n// no on chunks loaded\n\n// no jsonp function","__webpack_require__.nc = undefined;","\n      import API from \"!../node_modules/style-loader/dist/runtime/injectStylesIntoStyleTag.js\";\n      import domAPI from \"!../node_modules/style-loader/dist/runtime/styleDomAPI.js\";\n      import insertFn from \"!../node_modules/style-loader/dist/runtime/insertBySelector.js\";\n      import setAttributes from \"!../node_modules/style-loader/dist/runtime/setAttributesWithoutAttributes.js\";\n      import insertStyleElement from \"!../node_modules/style-loader/dist/runtime/insertStyleElement.js\";\n      import styleTagTransformFn from \"!../node_modules/style-loader/dist/runtime/styleTagTransform.js\";\n      import content, * as namedExport from \"!!../node_modules/css-loader/dist/cjs.js!./style.css\";\n      \n      \n\nvar options = {};\n\noptions.styleTagTransform = styleTagTransformFn;\noptions.setAttributes = setAttributes;\noptions.insert = insertFn.bind(null, \"head\");\noptions.domAPI = domAPI;\noptions.insertStyleElement = insertStyleElement;\n\nvar update = API(content, options);\n\n\n\nexport * from \"!!../node_modules/css-loader/dist/cjs.js!./style.css\";\n       export default content && content.locals ? content.locals : undefined;\n","const WeatherAPI = {\n    'queryURL': 'https://weather.visualcrossing.com/VisualCrossingWebServices/rest/services/timeline/',\n    'city': 'victoria',\n    'key': 'P8RGM9Y4ZKCJG7GNNZ8C47U59',\n\n    async sendRequest(location) {\n\n        if (location !== undefined) {\n\n            this.city = location;\n\n        }\n        const response = await fetch(`${this.queryURL}${this.city}?key=${this.key}`,\n            { 'mode': 'cors' });\n        return response.json();\n\n    }\n};\n\nexport default WeatherAPI;","const formatDistanceLocale = {\n  lessThanXSeconds: {\n    one: \"less than a second\",\n    other: \"less than {{count}} seconds\",\n  },\n\n  xSeconds: {\n    one: \"1 second\",\n    other: \"{{count}} seconds\",\n  },\n\n  halfAMinute: \"half a minute\",\n\n  lessThanXMinutes: {\n    one: \"less than a minute\",\n    other: \"less than {{count}} minutes\",\n  },\n\n  xMinutes: {\n    one: \"1 minute\",\n    other: \"{{count}} minutes\",\n  },\n\n  aboutXHours: {\n    one: \"about 1 hour\",\n    other: \"about {{count}} hours\",\n  },\n\n  xHours: {\n    one: \"1 hour\",\n    other: \"{{count}} hours\",\n  },\n\n  xDays: {\n    one: \"1 day\",\n    other: \"{{count}} days\",\n  },\n\n  aboutXWeeks: {\n    one: \"about 1 week\",\n    other: \"about {{count}} weeks\",\n  },\n\n  xWeeks: {\n    one: \"1 week\",\n    other: \"{{count}} weeks\",\n  },\n\n  aboutXMonths: {\n    one: \"about 1 month\",\n    other: \"about {{count}} months\",\n  },\n\n  xMonths: {\n    one: \"1 month\",\n    other: \"{{count}} months\",\n  },\n\n  aboutXYears: {\n    one: \"about 1 year\",\n    other: \"about {{count}} years\",\n  },\n\n  xYears: {\n    one: \"1 year\",\n    other: \"{{count}} years\",\n  },\n\n  overXYears: {\n    one: \"over 1 year\",\n    other: \"over {{count}} years\",\n  },\n\n  almostXYears: {\n    one: \"almost 1 year\",\n    other: \"almost {{count}} years\",\n  },\n};\n\nexport const formatDistance = (token, count, options) => {\n  let result;\n\n  const tokenValue = formatDistanceLocale[token];\n  if (typeof tokenValue === \"string\") {\n    result = tokenValue;\n  } else if (count === 1) {\n    result = tokenValue.one;\n  } else {\n    result = tokenValue.other.replace(\"{{count}}\", count.toString());\n  }\n\n  if (options?.addSuffix) {\n    if (options.comparison && options.comparison > 0) {\n      return \"in \" + result;\n    } else {\n      return result + \" ago\";\n    }\n  }\n\n  return result;\n};\n","export function buildFormatLongFn(args) {\n  return (options = {}) => {\n    // TODO: Remove String()\n    const width = options.width ? String(options.width) : args.defaultWidth;\n    const format = args.formats[width] || args.formats[args.defaultWidth];\n    return format;\n  };\n}\n","import { buildFormatLongFn } from \"../../_lib/buildFormatLongFn.mjs\";\n\nconst dateFormats = {\n  full: \"EEEE, MMMM do, y\",\n  long: \"MMMM do, y\",\n  medium: \"MMM d, y\",\n  short: \"MM/dd/yyyy\",\n};\n\nconst timeFormats = {\n  full: \"h:mm:ss a zzzz\",\n  long: \"h:mm:ss a z\",\n  medium: \"h:mm:ss a\",\n  short: \"h:mm a\",\n};\n\nconst dateTimeFormats = {\n  full: \"{{date}} 'at' {{time}}\",\n  long: \"{{date}} 'at' {{time}}\",\n  medium: \"{{date}}, {{time}}\",\n  short: \"{{date}}, {{time}}\",\n};\n\nexport const formatLong = {\n  date: buildFormatLongFn({\n    formats: dateFormats,\n    defaultWidth: \"full\",\n  }),\n\n  time: buildFormatLongFn({\n    formats: timeFormats,\n    defaultWidth: \"full\",\n  }),\n\n  dateTime: buildFormatLongFn({\n    formats: dateTimeFormats,\n    defaultWidth: \"full\",\n  }),\n};\n","const formatRelativeLocale = {\n  lastWeek: \"'last' eeee 'at' p\",\n  yesterday: \"'yesterday at' p\",\n  today: \"'today at' p\",\n  tomorrow: \"'tomorrow at' p\",\n  nextWeek: \"eeee 'at' p\",\n  other: \"P\",\n};\n\nexport const formatRelative = (token, _date, _baseDate, _options) =>\n  formatRelativeLocale[token];\n","/* eslint-disable no-unused-vars */\n\n/**\n * The localize function argument callback which allows to convert raw value to\n * the actual type.\n *\n * @param value - The value to convert\n *\n * @returns The converted value\n */\n\n/**\n * The map of localized values for each width.\n */\n\n/**\n * The index type of the locale unit value. It types conversion of units of\n * values that don't start at 0 (i.e. quarters).\n */\n\n/**\n * Converts the unit value to the tuple of values.\n */\n\n/**\n * The tuple of localized era values. The first element represents BC,\n * the second element represents AD.\n */\n\n/**\n * The tuple of localized quarter values. The first element represents Q1.\n */\n\n/**\n * The tuple of localized day values. The first element represents Sunday.\n */\n\n/**\n * The tuple of localized month values. The first element represents January.\n */\n\nexport function buildLocalizeFn(args) {\n  return (value, options) => {\n    const context = options?.context ? String(options.context) : \"standalone\";\n\n    let valuesArray;\n    if (context === \"formatting\" && args.formattingValues) {\n      const defaultWidth = args.defaultFormattingWidth || args.defaultWidth;\n      const width = options?.width ? String(options.width) : defaultWidth;\n\n      valuesArray =\n        args.formattingValues[width] || args.formattingValues[defaultWidth];\n    } else {\n      const defaultWidth = args.defaultWidth;\n      const width = options?.width ? String(options.width) : args.defaultWidth;\n\n      valuesArray = args.values[width] || args.values[defaultWidth];\n    }\n    const index = args.argumentCallback ? args.argumentCallback(value) : value;\n\n    // @ts-expect-error - For some reason TypeScript just don't want to match it, no matter how hard we try. I challenge you to try to remove it!\n    return valuesArray[index];\n  };\n}\n","import { buildLocalizeFn } from \"../../_lib/buildLocalizeFn.mjs\";\n\nconst eraValues = {\n  narrow: [\"B\", \"A\"],\n  abbreviated: [\"BC\", \"AD\"],\n  wide: [\"Before Christ\", \"Anno Domini\"],\n};\n\nconst quarterValues = {\n  narrow: [\"1\", \"2\", \"3\", \"4\"],\n  abbreviated: [\"Q1\", \"Q2\", \"Q3\", \"Q4\"],\n  wide: [\"1st quarter\", \"2nd quarter\", \"3rd quarter\", \"4th quarter\"],\n};\n\n// Note: in English, the names of days of the week and months are capitalized.\n// If you are making a new locale based on this one, check if the same is true for the language you're working on.\n// Generally, formatted dates should look like they are in the middle of a sentence,\n// e.g. in Spanish language the weekdays and months should be in the lowercase.\nconst monthValues = {\n  narrow: [\"J\", \"F\", \"M\", \"A\", \"M\", \"J\", \"J\", \"A\", \"S\", \"O\", \"N\", \"D\"],\n  abbreviated: [\n    \"Jan\",\n    \"Feb\",\n    \"Mar\",\n    \"Apr\",\n    \"May\",\n    \"Jun\",\n    \"Jul\",\n    \"Aug\",\n    \"Sep\",\n    \"Oct\",\n    \"Nov\",\n    \"Dec\",\n  ],\n\n  wide: [\n    \"January\",\n    \"February\",\n    \"March\",\n    \"April\",\n    \"May\",\n    \"June\",\n    \"July\",\n    \"August\",\n    \"September\",\n    \"October\",\n    \"November\",\n    \"December\",\n  ],\n};\n\nconst dayValues = {\n  narrow: [\"S\", \"M\", \"T\", \"W\", \"T\", \"F\", \"S\"],\n  short: [\"Su\", \"Mo\", \"Tu\", \"We\", \"Th\", \"Fr\", \"Sa\"],\n  abbreviated: [\"Sun\", \"Mon\", \"Tue\", \"Wed\", \"Thu\", \"Fri\", \"Sat\"],\n  wide: [\n    \"Sunday\",\n    \"Monday\",\n    \"Tuesday\",\n    \"Wednesday\",\n    \"Thursday\",\n    \"Friday\",\n    \"Saturday\",\n  ],\n};\n\nconst dayPeriodValues = {\n  narrow: {\n    am: \"a\",\n    pm: \"p\",\n    midnight: \"mi\",\n    noon: \"n\",\n    morning: \"morning\",\n    afternoon: \"afternoon\",\n    evening: \"evening\",\n    night: \"night\",\n  },\n  abbreviated: {\n    am: \"AM\",\n    pm: \"PM\",\n    midnight: \"midnight\",\n    noon: \"noon\",\n    morning: \"morning\",\n    afternoon: \"afternoon\",\n    evening: \"evening\",\n    night: \"night\",\n  },\n  wide: {\n    am: \"a.m.\",\n    pm: \"p.m.\",\n    midnight: \"midnight\",\n    noon: \"noon\",\n    morning: \"morning\",\n    afternoon: \"afternoon\",\n    evening: \"evening\",\n    night: \"night\",\n  },\n};\n\nconst formattingDayPeriodValues = {\n  narrow: {\n    am: \"a\",\n    pm: \"p\",\n    midnight: \"mi\",\n    noon: \"n\",\n    morning: \"in the morning\",\n    afternoon: \"in the afternoon\",\n    evening: \"in the evening\",\n    night: \"at night\",\n  },\n  abbreviated: {\n    am: \"AM\",\n    pm: \"PM\",\n    midnight: \"midnight\",\n    noon: \"noon\",\n    morning: \"in the morning\",\n    afternoon: \"in the afternoon\",\n    evening: \"in the evening\",\n    night: \"at night\",\n  },\n  wide: {\n    am: \"a.m.\",\n    pm: \"p.m.\",\n    midnight: \"midnight\",\n    noon: \"noon\",\n    morning: \"in the morning\",\n    afternoon: \"in the afternoon\",\n    evening: \"in the evening\",\n    night: \"at night\",\n  },\n};\n\nconst ordinalNumber = (dirtyNumber, _options) => {\n  const number = Number(dirtyNumber);\n\n  // If ordinal numbers depend on context, for example,\n  // if they are different for different grammatical genders,\n  // use `options.unit`.\n  //\n  // `unit` can be 'year', 'quarter', 'month', 'week', 'date', 'dayOfYear',\n  // 'day', 'hour', 'minute', 'second'.\n\n  const rem100 = number % 100;\n  if (rem100 > 20 || rem100 < 10) {\n    switch (rem100 % 10) {\n      case 1:\n        return number + \"st\";\n      case 2:\n        return number + \"nd\";\n      case 3:\n        return number + \"rd\";\n    }\n  }\n  return number + \"th\";\n};\n\nexport const localize = {\n  ordinalNumber,\n\n  era: buildLocalizeFn({\n    values: eraValues,\n    defaultWidth: \"wide\",\n  }),\n\n  quarter: buildLocalizeFn({\n    values: quarterValues,\n    defaultWidth: \"wide\",\n    argumentCallback: (quarter) => quarter - 1,\n  }),\n\n  month: buildLocalizeFn({\n    values: monthValues,\n    defaultWidth: \"wide\",\n  }),\n\n  day: buildLocalizeFn({\n    values: dayValues,\n    defaultWidth: \"wide\",\n  }),\n\n  dayPeriod: buildLocalizeFn({\n    values: dayPeriodValues,\n    defaultWidth: \"wide\",\n    formattingValues: formattingDayPeriodValues,\n    defaultFormattingWidth: \"wide\",\n  }),\n};\n","export function buildMatchFn(args) {\n  return (string, options = {}) => {\n    const width = options.width;\n\n    const matchPattern =\n      (width && args.matchPatterns[width]) ||\n      args.matchPatterns[args.defaultMatchWidth];\n    const matchResult = string.match(matchPattern);\n\n    if (!matchResult) {\n      return null;\n    }\n    const matchedString = matchResult[0];\n\n    const parsePatterns =\n      (width && args.parsePatterns[width]) ||\n      args.parsePatterns[args.defaultParseWidth];\n\n    const key = Array.isArray(parsePatterns)\n      ? findIndex(parsePatterns, (pattern) => pattern.test(matchedString))\n      : // eslint-disable-next-line @typescript-eslint/no-explicit-any -- I challange you to fix the type\n        findKey(parsePatterns, (pattern) => pattern.test(matchedString));\n\n    let value;\n\n    value = args.valueCallback ? args.valueCallback(key) : key;\n    value = options.valueCallback\n      ? // eslint-disable-next-line @typescript-eslint/no-explicit-any -- I challange you to fix the type\n        options.valueCallback(value)\n      : value;\n\n    const rest = string.slice(matchedString.length);\n\n    return { value, rest };\n  };\n}\n\nfunction findKey(object, predicate) {\n  for (const key in object) {\n    if (\n      Object.prototype.hasOwnProperty.call(object, key) &&\n      predicate(object[key])\n    ) {\n      return key;\n    }\n  }\n  return undefined;\n}\n\nfunction findIndex(array, predicate) {\n  for (let key = 0; key < array.length; key++) {\n    if (predicate(array[key])) {\n      return key;\n    }\n  }\n  return undefined;\n}\n","import { buildMatchFn } from \"../../_lib/buildMatchFn.mjs\";\nimport { buildMatchPatternFn } from \"../../_lib/buildMatchPatternFn.mjs\";\n\nconst matchOrdinalNumberPattern = /^(\\d+)(th|st|nd|rd)?/i;\nconst parseOrdinalNumberPattern = /\\d+/i;\n\nconst matchEraPatterns = {\n  narrow: /^(b|a)/i,\n  abbreviated: /^(b\\.?\\s?c\\.?|b\\.?\\s?c\\.?\\s?e\\.?|a\\.?\\s?d\\.?|c\\.?\\s?e\\.?)/i,\n  wide: /^(before christ|before common era|anno domini|common era)/i,\n};\nconst parseEraPatterns = {\n  any: [/^b/i, /^(a|c)/i],\n};\n\nconst matchQuarterPatterns = {\n  narrow: /^[1234]/i,\n  abbreviated: /^q[1234]/i,\n  wide: /^[1234](th|st|nd|rd)? quarter/i,\n};\nconst parseQuarterPatterns = {\n  any: [/1/i, /2/i, /3/i, /4/i],\n};\n\nconst matchMonthPatterns = {\n  narrow: /^[jfmasond]/i,\n  abbreviated: /^(jan|feb|mar|apr|may|jun|jul|aug|sep|oct|nov|dec)/i,\n  wide: /^(january|february|march|april|may|june|july|august|september|october|november|december)/i,\n};\nconst parseMonthPatterns = {\n  narrow: [\n    /^j/i,\n    /^f/i,\n    /^m/i,\n    /^a/i,\n    /^m/i,\n    /^j/i,\n    /^j/i,\n    /^a/i,\n    /^s/i,\n    /^o/i,\n    /^n/i,\n    /^d/i,\n  ],\n\n  any: [\n    /^ja/i,\n    /^f/i,\n    /^mar/i,\n    /^ap/i,\n    /^may/i,\n    /^jun/i,\n    /^jul/i,\n    /^au/i,\n    /^s/i,\n    /^o/i,\n    /^n/i,\n    /^d/i,\n  ],\n};\n\nconst matchDayPatterns = {\n  narrow: /^[smtwf]/i,\n  short: /^(su|mo|tu|we|th|fr|sa)/i,\n  abbreviated: /^(sun|mon|tue|wed|thu|fri|sat)/i,\n  wide: /^(sunday|monday|tuesday|wednesday|thursday|friday|saturday)/i,\n};\nconst parseDayPatterns = {\n  narrow: [/^s/i, /^m/i, /^t/i, /^w/i, /^t/i, /^f/i, /^s/i],\n  any: [/^su/i, /^m/i, /^tu/i, /^w/i, /^th/i, /^f/i, /^sa/i],\n};\n\nconst matchDayPeriodPatterns = {\n  narrow: /^(a|p|mi|n|(in the|at) (morning|afternoon|evening|night))/i,\n  any: /^([ap]\\.?\\s?m\\.?|midnight|noon|(in the|at) (morning|afternoon|evening|night))/i,\n};\nconst parseDayPeriodPatterns = {\n  any: {\n    am: /^a/i,\n    pm: /^p/i,\n    midnight: /^mi/i,\n    noon: /^no/i,\n    morning: /morning/i,\n    afternoon: /afternoon/i,\n    evening: /evening/i,\n    night: /night/i,\n  },\n};\n\nexport const match = {\n  ordinalNumber: buildMatchPatternFn({\n    matchPattern: matchOrdinalNumberPattern,\n    parsePattern: parseOrdinalNumberPattern,\n    valueCallback: (value) => parseInt(value, 10),\n  }),\n\n  era: buildMatchFn({\n    matchPatterns: matchEraPatterns,\n    defaultMatchWidth: \"wide\",\n    parsePatterns: parseEraPatterns,\n    defaultParseWidth: \"any\",\n  }),\n\n  quarter: buildMatchFn({\n    matchPatterns: matchQuarterPatterns,\n    defaultMatchWidth: \"wide\",\n    parsePatterns: parseQuarterPatterns,\n    defaultParseWidth: \"any\",\n    valueCallback: (index) => index + 1,\n  }),\n\n  month: buildMatchFn({\n    matchPatterns: matchMonthPatterns,\n    defaultMatchWidth: \"wide\",\n    parsePatterns: parseMonthPatterns,\n    defaultParseWidth: \"any\",\n  }),\n\n  day: buildMatchFn({\n    matchPatterns: matchDayPatterns,\n    defaultMatchWidth: \"wide\",\n    parsePatterns: parseDayPatterns,\n    defaultParseWidth: \"any\",\n  }),\n\n  dayPeriod: buildMatchFn({\n    matchPatterns: matchDayPeriodPatterns,\n    defaultMatchWidth: \"any\",\n    parsePatterns: parseDayPeriodPatterns,\n    defaultParseWidth: \"any\",\n  }),\n};\n","export function buildMatchPatternFn(args) {\n  return (string, options = {}) => {\n    const matchResult = string.match(args.matchPattern);\n    if (!matchResult) return null;\n    const matchedString = matchResult[0];\n\n    const parseResult = string.match(args.parsePattern);\n    if (!parseResult) return null;\n    let value = args.valueCallback\n      ? args.valueCallback(parseResult[0])\n      : parseResult[0];\n\n    // eslint-disable-next-line @typescript-eslint/no-explicit-any -- I challange you to fix the type\n    value = options.valueCallback ? options.valueCallback(value) : value;\n\n    const rest = string.slice(matchedString.length);\n\n    return { value, rest };\n  };\n}\n","import { formatDistance } from \"./en-US/_lib/formatDistance.mjs\";\nimport { formatLong } from \"./en-US/_lib/formatLong.mjs\";\nimport { formatRelative } from \"./en-US/_lib/formatRelative.mjs\";\nimport { localize } from \"./en-US/_lib/localize.mjs\";\nimport { match } from \"./en-US/_lib/match.mjs\";\n\n/**\n * @category Locales\n * @summary English locale (United States).\n * @language English\n * @iso-639-2 eng\n * @author Sasha Koss [@kossnocorp](https://github.com/kossnocorp)\n * @author Lesha Koss [@leshakoss](https://github.com/leshakoss)\n */\nexport const enUS = {\n  code: \"en-US\",\n  formatDistance: formatDistance,\n  formatLong: formatLong,\n  formatRelative: formatRelative,\n  localize: localize,\n  match: match,\n  options: {\n    weekStartsOn: 0 /* Sunday */,\n    firstWeekContainsDate: 1,\n  },\n};\n\n// Fallback for modularized imports:\nexport default enUS;\n","let defaultOptions = {};\n\nexport function getDefaultOptions() {\n  return defaultOptions;\n}\n\nexport function setDefaultOptions(newOptions) {\n  defaultOptions = newOptions;\n}\n","/**\n * @module constants\n * @summary Useful constants\n * @description\n * Collection of useful date constants.\n *\n * The constants could be imported from `date-fns/constants`:\n *\n * ```ts\n * import { maxTime, minTime } from \"./constants/date-fns/constants\";\n *\n * function isAllowedTime(time) {\n *   return time <= maxTime && time >= minTime;\n * }\n * ```\n */\n\n/**\n * @constant\n * @name daysInWeek\n * @summary Days in 1 week.\n */\nexport const daysInWeek = 7;\n\n/**\n * @constant\n * @name daysInYear\n * @summary Days in 1 year.\n *\n * @description\n * How many days in a year.\n *\n * One years equals 365.2425 days according to the formula:\n *\n * > Leap year occures every 4 years, except for years that are divisable by 100 and not divisable by 400.\n * > 1 mean year = (365+1/4-1/100+1/400) days = 365.2425 days\n */\nexport const daysInYear = 365.2425;\n\n/**\n * @constant\n * @name maxTime\n * @summary Maximum allowed time.\n *\n * @example\n * import { maxTime } from \"./constants/date-fns/constants\";\n *\n * const isValid = 8640000000000001 <= maxTime;\n * //=> false\n *\n * new Date(8640000000000001);\n * //=> Invalid Date\n */\nexport const maxTime = Math.pow(10, 8) * 24 * 60 * 60 * 1000;\n\n/**\n * @constant\n * @name minTime\n * @summary Minimum allowed time.\n *\n * @example\n * import { minTime } from \"./constants/date-fns/constants\";\n *\n * const isValid = -8640000000000001 >= minTime;\n * //=> false\n *\n * new Date(-8640000000000001)\n * //=> Invalid Date\n */\nexport const minTime = -maxTime;\n\n/**\n * @constant\n * @name millisecondsInWeek\n * @summary Milliseconds in 1 week.\n */\nexport const millisecondsInWeek = 604800000;\n\n/**\n * @constant\n * @name millisecondsInDay\n * @summary Milliseconds in 1 day.\n */\nexport const millisecondsInDay = 86400000;\n\n/**\n * @constant\n * @name millisecondsInMinute\n * @summary Milliseconds in 1 minute\n */\nexport const millisecondsInMinute = 60000;\n\n/**\n * @constant\n * @name millisecondsInHour\n * @summary Milliseconds in 1 hour\n */\nexport const millisecondsInHour = 3600000;\n\n/**\n * @constant\n * @name millisecondsInSecond\n * @summary Milliseconds in 1 second\n */\nexport const millisecondsInSecond = 1000;\n\n/**\n * @constant\n * @name minutesInYear\n * @summary Minutes in 1 year.\n */\nexport const minutesInYear = 525600;\n\n/**\n * @constant\n * @name minutesInMonth\n * @summary Minutes in 1 month.\n */\nexport const minutesInMonth = 43200;\n\n/**\n * @constant\n * @name minutesInDay\n * @summary Minutes in 1 day.\n */\nexport const minutesInDay = 1440;\n\n/**\n * @constant\n * @name minutesInHour\n * @summary Minutes in 1 hour.\n */\nexport const minutesInHour = 60;\n\n/**\n * @constant\n * @name monthsInQuarter\n * @summary Months in 1 quarter.\n */\nexport const monthsInQuarter = 3;\n\n/**\n * @constant\n * @name monthsInYear\n * @summary Months in 1 year.\n */\nexport const monthsInYear = 12;\n\n/**\n * @constant\n * @name quartersInYear\n * @summary Quarters in 1 year\n */\nexport const quartersInYear = 4;\n\n/**\n * @constant\n * @name secondsInHour\n * @summary Seconds in 1 hour.\n */\nexport const secondsInHour = 3600;\n\n/**\n * @constant\n * @name secondsInMinute\n * @summary Seconds in 1 minute.\n */\nexport const secondsInMinute = 60;\n\n/**\n * @constant\n * @name secondsInDay\n * @summary Seconds in 1 day.\n */\nexport const secondsInDay = secondsInHour * 24;\n\n/**\n * @constant\n * @name secondsInWeek\n * @summary Seconds in 1 week.\n */\nexport const secondsInWeek = secondsInDay * 7;\n\n/**\n * @constant\n * @name secondsInYear\n * @summary Seconds in 1 year.\n */\nexport const secondsInYear = secondsInDay * daysInYear;\n\n/**\n * @constant\n * @name secondsInMonth\n * @summary Seconds in 1 month\n */\nexport const secondsInMonth = secondsInYear / 12;\n\n/**\n * @constant\n * @name secondsInQuarter\n * @summary Seconds in 1 quarter.\n */\nexport const secondsInQuarter = secondsInMonth * 3;\n","/**\n * @name toDate\n * @category Common Helpers\n * @summary Convert the given argument to an instance of Date.\n *\n * @description\n * Convert the given argument to an instance of Date.\n *\n * If the argument is an instance of Date, the function returns its clone.\n *\n * If the argument is a number, it is treated as a timestamp.\n *\n * If the argument is none of the above, the function returns Invalid Date.\n *\n * **Note**: *all* Date arguments passed to any *date-fns* function is processed by `toDate`.\n *\n * @typeParam DateType - The `Date` type, the function operates on. Gets inferred from passed arguments. Allows to use extensions like [`UTCDate`](https://github.com/date-fns/utc).\n *\n * @param argument - The value to convert\n *\n * @returns The parsed date in the local time zone\n *\n * @example\n * // Clone the date:\n * const result = toDate(new Date(2014, 1, 11, 11, 30, 30))\n * //=> Tue Feb 11 2014 11:30:30\n *\n * @example\n * // Convert the timestamp to date:\n * const result = toDate(1392098430000)\n * //=> Tue Feb 11 2014 11:30:30\n */\nexport function toDate(argument) {\n  const argStr = Object.prototype.toString.call(argument);\n\n  // Clone the date\n  if (\n    argument instanceof Date ||\n    (typeof argument === \"object\" && argStr === \"[object Date]\")\n  ) {\n    // Prevent the date to lose the milliseconds when passed to new Date() in IE10\n    return new argument.constructor(+argument);\n  } else if (\n    typeof argument === \"number\" ||\n    argStr === \"[object Number]\" ||\n    typeof argument === \"string\" ||\n    argStr === \"[object String]\"\n  ) {\n    // TODO: Can we get rid of as?\n    return new Date(argument);\n  } else {\n    // TODO: Can we get rid of as?\n    return new Date(NaN);\n  }\n}\n\n// Fallback for modularized imports:\nexport default toDate;\n","import { toDate } from \"./toDate.mjs\";\n\n/**\n * @name startOfDay\n * @category Day Helpers\n * @summary Return the start of a day for the given date.\n *\n * @description\n * Return the start of a day for the given date.\n * The result will be in the local timezone.\n *\n * @typeParam DateType - The `Date` type, the function operates on. Gets inferred from passed arguments. Allows to use extensions like [`UTCDate`](https://github.com/date-fns/utc).\n *\n * @param date - The original date\n *\n * @returns The start of a day\n *\n * @example\n * // The start of a day for 2 September 2014 11:55:00:\n * const result = startOfDay(new Date(2014, 8, 2, 11, 55, 0))\n * //=> Tue Sep 02 2014 00:00:00\n */\nexport function startOfDay(date) {\n  const _date = toDate(date);\n  _date.setHours(0, 0, 0, 0);\n  return _date;\n}\n\n// Fallback for modularized imports:\nexport default startOfDay;\n","import { toDate } from \"../toDate.mjs\";\n\n/**\n * Google Chrome as of 67.0.3396.87 introduced timezones with offset that includes seconds.\n * They usually appear for dates that denote time before the timezones were introduced\n * (e.g. for 'Europe/Prague' timezone the offset is GMT+00:57:44 before 1 October 1891\n * and GMT+01:00:00 after that date)\n *\n * Date#getTimezoneOffset returns the offset in minutes and would return 57 for the example above,\n * which would lead to incorrect calculations.\n *\n * This function returns the timezone offset in milliseconds that takes seconds in account.\n */\nexport function getTimezoneOffsetInMilliseconds(date) {\n  const _date = toDate(date);\n  const utcDate = new Date(\n    Date.UTC(\n      _date.getFullYear(),\n      _date.getMonth(),\n      _date.getDate(),\n      _date.getHours(),\n      _date.getMinutes(),\n      _date.getSeconds(),\n      _date.getMilliseconds(),\n    ),\n  );\n  utcDate.setUTCFullYear(_date.getFullYear());\n  return +date - +utcDate;\n}\n","/**\n * @name constructFrom\n * @category Generic Helpers\n * @summary Constructs a date using the reference date and the value\n *\n * @description\n * The function constructs a new date using the constructor from the reference\n * date and the given value. It helps to build generic functions that accept\n * date extensions.\n *\n * It defaults to `Date` if the passed reference date is a number or a string.\n *\n * @typeParam DateType - The `Date` type, the function operates on. Gets inferred from passed arguments. Allows to use extensions like [`UTCDate`](https://github.com/date-fns/utc).\n *\n * @param date - The reference date to take constructor from\n * @param value - The value to create the date\n *\n * @returns Date initialized using the given date and value\n *\n * @example\n * import { constructFrom } from 'date-fns'\n *\n * // A function that clones a date preserving the original type\n * function cloneDate<DateType extends Date(date: DateType): DateType {\n *   return constructFrom(\n *     date, // Use contrustor from the given date\n *     date.getTime() // Use the date value to create a new date\n *   )\n * }\n */\nexport function constructFrom(date, value) {\n  if (date instanceof Date) {\n    return new date.constructor(value);\n  } else {\n    return new Date(value);\n  }\n}\n\n// Fallback for modularized imports:\nexport default constructFrom;\n","import { differenceInCalendarDays } from \"./differenceInCalendarDays.mjs\";\nimport { startOfYear } from \"./startOfYear.mjs\";\nimport { toDate } from \"./toDate.mjs\";\n\n/**\n * @name getDayOfYear\n * @category Day Helpers\n * @summary Get the day of the year of the given date.\n *\n * @description\n * Get the day of the year of the given date.\n *\n * @typeParam DateType - The `Date` type, the function operates on. Gets inferred from passed arguments. Allows to use extensions like [`UTCDate`](https://github.com/date-fns/utc).\n *\n * @param date - The given date\n *\n * @returns The day of year\n *\n * @example\n * // Which day of the year is 2 July 2014?\n * const result = getDayOfYear(new Date(2014, 6, 2))\n * //=> 183\n */\nexport function getDayOfYear(date) {\n  const _date = toDate(date);\n  const diff = differenceInCalendarDays(_date, startOfYear(_date));\n  const dayOfYear = diff + 1;\n  return dayOfYear;\n}\n\n// Fallback for modularized imports:\nexport default getDayOfYear;\n","import { millisecondsInDay } from \"./constants.mjs\";\nimport { startOfDay } from \"./startOfDay.mjs\";\nimport { getTimezoneOffsetInMilliseconds } from \"./_lib/getTimezoneOffsetInMilliseconds.mjs\";\n\n/**\n * @name differenceInCalendarDays\n * @category Day Helpers\n * @summary Get the number of calendar days between the given dates.\n *\n * @description\n * Get the number of calendar days between the given dates. This means that the times are removed\n * from the dates and then the difference in days is calculated.\n *\n * @typeParam DateType - The `Date` type, the function operates on. Gets inferred from passed arguments. Allows to use extensions like [`UTCDate`](https://github.com/date-fns/utc).\n *\n * @param dateLeft - The later date\n * @param dateRight - The earlier date\n *\n * @returns The number of calendar days\n *\n * @example\n * // How many calendar days are between\n * // 2 July 2011 23:00:00 and 2 July 2012 00:00:00?\n * const result = differenceInCalendarDays(\n *   new Date(2012, 6, 2, 0, 0),\n *   new Date(2011, 6, 2, 23, 0)\n * )\n * //=> 366\n * // How many calendar days are between\n * // 2 July 2011 23:59:00 and 3 July 2011 00:01:00?\n * const result = differenceInCalendarDays(\n *   new Date(2011, 6, 3, 0, 1),\n *   new Date(2011, 6, 2, 23, 59)\n * )\n * //=> 1\n */\nexport function differenceInCalendarDays(dateLeft, dateRight) {\n  const startOfDayLeft = startOfDay(dateLeft);\n  const startOfDayRight = startOfDay(dateRight);\n\n  const timestampLeft =\n    +startOfDayLeft - getTimezoneOffsetInMilliseconds(startOfDayLeft);\n  const timestampRight =\n    +startOfDayRight - getTimezoneOffsetInMilliseconds(startOfDayRight);\n\n  // Round the number of days to the nearest integer because the number of\n  // milliseconds in a day is not constant (e.g. it's different in the week of\n  // the daylight saving time clock shift).\n  return Math.round((timestampLeft - timestampRight) / millisecondsInDay);\n}\n\n// Fallback for modularized imports:\nexport default differenceInCalendarDays;\n","import { toDate } from \"./toDate.mjs\";\nimport { constructFrom } from \"./constructFrom.mjs\";\n\n/**\n * @name startOfYear\n * @category Year Helpers\n * @summary Return the start of a year for the given date.\n *\n * @description\n * Return the start of a year for the given date.\n * The result will be in the local timezone.\n *\n * @typeParam DateType - The `Date` type, the function operates on. Gets inferred from passed arguments. Allows to use extensions like [`UTCDate`](https://github.com/date-fns/utc).\n *\n * @param date - The original date\n *\n * @returns The start of a year\n *\n * @example\n * // The start of a year for 2 September 2014 11:55:00:\n * const result = startOfYear(new Date(2014, 8, 2, 11, 55, 00))\n * //=> Wed Jan 01 2014 00:00:00\n */\nexport function startOfYear(date) {\n  const cleanDate = toDate(date);\n  const _date = constructFrom(date, 0);\n  _date.setFullYear(cleanDate.getFullYear(), 0, 1);\n  _date.setHours(0, 0, 0, 0);\n  return _date;\n}\n\n// Fallback for modularized imports:\nexport default startOfYear;\n","import { toDate } from \"./toDate.mjs\";\nimport { getDefaultOptions } from \"./_lib/defaultOptions.mjs\";\n\n/**\n * The {@link startOfWeek} function options.\n */\n\n/**\n * @name startOfWeek\n * @category Week Helpers\n * @summary Return the start of a week for the given date.\n *\n * @description\n * Return the start of a week for the given date.\n * The result will be in the local timezone.\n *\n * @typeParam DateType - The `Date` type, the function operates on. Gets inferred from passed arguments. Allows to use extensions like [`UTCDate`](https://github.com/date-fns/utc).\n *\n * @param date - The original date\n * @param options - An object with options\n *\n * @returns The start of a week\n *\n * @example\n * // The start of a week for 2 September 2014 11:55:00:\n * const result = startOfWeek(new Date(2014, 8, 2, 11, 55, 0))\n * //=> Sun Aug 31 2014 00:00:00\n *\n * @example\n * // If the week starts on Monday, the start of the week for 2 September 2014 11:55:00:\n * const result = startOfWeek(new Date(2014, 8, 2, 11, 55, 0), { weekStartsOn: 1 })\n * //=> Mon Sep 01 2014 00:00:00\n */\nexport function startOfWeek(date, options) {\n  const defaultOptions = getDefaultOptions();\n  const weekStartsOn =\n    options?.weekStartsOn ??\n    options?.locale?.options?.weekStartsOn ??\n    defaultOptions.weekStartsOn ??\n    defaultOptions.locale?.options?.weekStartsOn ??\n    0;\n\n  const _date = toDate(date);\n  const day = _date.getDay();\n  const diff = (day < weekStartsOn ? 7 : 0) + day - weekStartsOn;\n\n  _date.setDate(_date.getDate() - diff);\n  _date.setHours(0, 0, 0, 0);\n  return _date;\n}\n\n// Fallback for modularized imports:\nexport default startOfWeek;\n","import { startOfWeek } from \"./startOfWeek.mjs\";\n\n/**\n * @name startOfISOWeek\n * @category ISO Week Helpers\n * @summary Return the start of an ISO week for the given date.\n *\n * @description\n * Return the start of an ISO week for the given date.\n * The result will be in the local timezone.\n *\n * ISO week-numbering year: http://en.wikipedia.org/wiki/ISO_week_date\n *\n * @typeParam DateType - The `Date` type, the function operates on. Gets inferred from passed arguments. Allows to use extensions like [`UTCDate`](https://github.com/date-fns/utc).\n *\n * @param date - The original date\n *\n * @returns The start of an ISO week\n *\n * @example\n * // The start of an ISO week for 2 September 2014 11:55:00:\n * const result = startOfISOWeek(new Date(2014, 8, 2, 11, 55, 0))\n * //=> Mon Sep 01 2014 00:00:00\n */\nexport function startOfISOWeek(date) {\n  return startOfWeek(date, { weekStartsOn: 1 });\n}\n\n// Fallback for modularized imports:\nexport default startOfISOWeek;\n","import { constructFrom } from \"./constructFrom.mjs\";\nimport { startOfISOWeek } from \"./startOfISOWeek.mjs\";\nimport { toDate } from \"./toDate.mjs\";\n\n/**\n * @name getISOWeekYear\n * @category ISO Week-Numbering Year Helpers\n * @summary Get the ISO week-numbering year of the given date.\n *\n * @description\n * Get the ISO week-numbering year of the given date,\n * which always starts 3 days before the year's first Thursday.\n *\n * ISO week-numbering year: http://en.wikipedia.org/wiki/ISO_week_date\n *\n * @typeParam DateType - The `Date` type, the function operates on. Gets inferred from passed arguments. Allows to use extensions like [`UTCDate`](https://github.com/date-fns/utc).\n *\n * @param date - The given date\n *\n * @returns The ISO week-numbering year\n *\n * @example\n * // Which ISO-week numbering year is 2 January 2005?\n * const result = getISOWeekYear(new Date(2005, 0, 2))\n * //=> 2004\n */\nexport function getISOWeekYear(date) {\n  const _date = toDate(date);\n  const year = _date.getFullYear();\n\n  const fourthOfJanuaryOfNextYear = constructFrom(date, 0);\n  fourthOfJanuaryOfNextYear.setFullYear(year + 1, 0, 4);\n  fourthOfJanuaryOfNextYear.setHours(0, 0, 0, 0);\n  const startOfNextYear = startOfISOWeek(fourthOfJanuaryOfNextYear);\n\n  const fourthOfJanuaryOfThisYear = constructFrom(date, 0);\n  fourthOfJanuaryOfThisYear.setFullYear(year, 0, 4);\n  fourthOfJanuaryOfThisYear.setHours(0, 0, 0, 0);\n  const startOfThisYear = startOfISOWeek(fourthOfJanuaryOfThisYear);\n\n  if (_date.getTime() >= startOfNextYear.getTime()) {\n    return year + 1;\n  } else if (_date.getTime() >= startOfThisYear.getTime()) {\n    return year;\n  } else {\n    return year - 1;\n  }\n}\n\n// Fallback for modularized imports:\nexport default getISOWeekYear;\n","import { millisecondsInWeek } from \"./constants.mjs\";\nimport { startOfISOWeek } from \"./startOfISOWeek.mjs\";\nimport { startOfISOWeekYear } from \"./startOfISOWeekYear.mjs\";\nimport { toDate } from \"./toDate.mjs\";\n\n/**\n * @name getISOWeek\n * @category ISO Week Helpers\n * @summary Get the ISO week of the given date.\n *\n * @description\n * Get the ISO week of the given date.\n *\n * ISO week-numbering year: http://en.wikipedia.org/wiki/ISO_week_date\n *\n * @typeParam DateType - The `Date` type, the function operates on. Gets inferred from passed arguments. Allows to use extensions like [`UTCDate`](https://github.com/date-fns/utc).\n *\n * @param date - The given date\n *\n * @returns The ISO week\n *\n * @example\n * // Which week of the ISO-week numbering year is 2 January 2005?\n * const result = getISOWeek(new Date(2005, 0, 2))\n * //=> 53\n */\nexport function getISOWeek(date) {\n  const _date = toDate(date);\n  const diff = +startOfISOWeek(_date) - +startOfISOWeekYear(_date);\n\n  // Round the number of weeks to the nearest integer because the number of\n  // milliseconds in a week is not constant (e.g. it's different in the week of\n  // the daylight saving time clock shift).\n  return Math.round(diff / millisecondsInWeek) + 1;\n}\n\n// Fallback for modularized imports:\nexport default getISOWeek;\n","import { getISOWeekYear } from \"./getISOWeekYear.mjs\";\nimport { startOfISOWeek } from \"./startOfISOWeek.mjs\";\nimport { constructFrom } from \"./constructFrom.mjs\";\n\n/**\n * @name startOfISOWeekYear\n * @category ISO Week-Numbering Year Helpers\n * @summary Return the start of an ISO week-numbering year for the given date.\n *\n * @description\n * Return the start of an ISO week-numbering year,\n * which always starts 3 days before the year's first Thursday.\n * The result will be in the local timezone.\n *\n * ISO week-numbering year: http://en.wikipedia.org/wiki/ISO_week_date\n *\n * @typeParam DateType - The `Date` type, the function operates on. Gets inferred from passed arguments. Allows to use extensions like [`UTCDate`](https://github.com/date-fns/utc).\n *\n * @param date - The original date\n *\n * @returns The start of an ISO week-numbering year\n *\n * @example\n * // The start of an ISO week-numbering year for 2 July 2005:\n * const result = startOfISOWeekYear(new Date(2005, 6, 2))\n * //=> Mon Jan 03 2005 00:00:00\n */\nexport function startOfISOWeekYear(date) {\n  const year = getISOWeekYear(date);\n  const fourthOfJanuary = constructFrom(date, 0);\n  fourthOfJanuary.setFullYear(year, 0, 4);\n  fourthOfJanuary.setHours(0, 0, 0, 0);\n  return startOfISOWeek(fourthOfJanuary);\n}\n\n// Fallback for modularized imports:\nexport default startOfISOWeekYear;\n","import { constructFrom } from \"./constructFrom.mjs\";\nimport { startOfWeek } from \"./startOfWeek.mjs\";\nimport { toDate } from \"./toDate.mjs\";\nimport { getDefaultOptions } from \"./_lib/defaultOptions.mjs\";\n\n/**\n * The {@link getWeekYear} function options.\n */\n\n/**\n * @name getWeekYear\n * @category Week-Numbering Year Helpers\n * @summary Get the local week-numbering year of the given date.\n *\n * @description\n * Get the local week-numbering year of the given date.\n * The exact calculation depends on the values of\n * `options.weekStartsOn` (which is the index of the first day of the week)\n * and `options.firstWeekContainsDate` (which is the day of January, which is always in\n * the first week of the week-numbering year)\n *\n * Week numbering: https://en.wikipedia.org/wiki/Week#The_ISO_week_date_system\n *\n * @typeParam DateType - The `Date` type, the function operates on. Gets inferred from passed arguments. Allows to use extensions like [`UTCDate`](https://github.com/date-fns/utc).\n *\n * @param date - The given date\n * @param options - An object with options.\n *\n * @returns The local week-numbering year\n *\n * @example\n * // Which week numbering year is 26 December 2004 with the default settings?\n * const result = getWeekYear(new Date(2004, 11, 26))\n * //=> 2005\n *\n * @example\n * // Which week numbering year is 26 December 2004 if week starts on Saturday?\n * const result = getWeekYear(new Date(2004, 11, 26), { weekStartsOn: 6 })\n * //=> 2004\n *\n * @example\n * // Which week numbering year is 26 December 2004 if the first week contains 4 January?\n * const result = getWeekYear(new Date(2004, 11, 26), { firstWeekContainsDate: 4 })\n * //=> 2004\n */\nexport function getWeekYear(date, options) {\n  const _date = toDate(date);\n  const year = _date.getFullYear();\n\n  const defaultOptions = getDefaultOptions();\n  const firstWeekContainsDate =\n    options?.firstWeekContainsDate ??\n    options?.locale?.options?.firstWeekContainsDate ??\n    defaultOptions.firstWeekContainsDate ??\n    defaultOptions.locale?.options?.firstWeekContainsDate ??\n    1;\n\n  const firstWeekOfNextYear = constructFrom(date, 0);\n  firstWeekOfNextYear.setFullYear(year + 1, 0, firstWeekContainsDate);\n  firstWeekOfNextYear.setHours(0, 0, 0, 0);\n  const startOfNextYear = startOfWeek(firstWeekOfNextYear, options);\n\n  const firstWeekOfThisYear = constructFrom(date, 0);\n  firstWeekOfThisYear.setFullYear(year, 0, firstWeekContainsDate);\n  firstWeekOfThisYear.setHours(0, 0, 0, 0);\n  const startOfThisYear = startOfWeek(firstWeekOfThisYear, options);\n\n  if (_date.getTime() >= startOfNextYear.getTime()) {\n    return year + 1;\n  } else if (_date.getTime() >= startOfThisYear.getTime()) {\n    return year;\n  } else {\n    return year - 1;\n  }\n}\n\n// Fallback for modularized imports:\nexport default getWeekYear;\n","import { millisecondsInWeek } from \"./constants.mjs\";\nimport { startOfWeek } from \"./startOfWeek.mjs\";\nimport { startOfWeekYear } from \"./startOfWeekYear.mjs\";\nimport { toDate } from \"./toDate.mjs\";\n\n/**\n * The {@link getWeek} function options.\n */\n\n/**\n * @name getWeek\n * @category Week Helpers\n * @summary Get the local week index of the given date.\n *\n * @description\n * Get the local week index of the given date.\n * The exact calculation depends on the values of\n * `options.weekStartsOn` (which is the index of the first day of the week)\n * and `options.firstWeekContainsDate` (which is the day of January, which is always in\n * the first week of the week-numbering year)\n *\n * Week numbering: https://en.wikipedia.org/wiki/Week#The_ISO_week_date_system\n *\n * @typeParam DateType - The `Date` type, the function operates on. Gets inferred from passed arguments. Allows to use extensions like [`UTCDate`](https://github.com/date-fns/utc).\n *\n * @param date - The given date\n * @param options - An object with options\n *\n * @returns The week\n *\n * @example\n * // Which week of the local week numbering year is 2 January 2005 with default options?\n * const result = getWeek(new Date(2005, 0, 2))\n * //=> 2\n *\n * @example\n * // Which week of the local week numbering year is 2 January 2005,\n * // if Monday is the first day of the week,\n * // and the first week of the year always contains 4 January?\n * const result = getWeek(new Date(2005, 0, 2), {\n *   weekStartsOn: 1,\n *   firstWeekContainsDate: 4\n * })\n * //=> 53\n */\n\nexport function getWeek(date, options) {\n  const _date = toDate(date);\n  const diff = +startOfWeek(_date, options) - +startOfWeekYear(_date, options);\n\n  // Round the number of weeks to the nearest integer because the number of\n  // milliseconds in a week is not constant (e.g. it's different in the week of\n  // the daylight saving time clock shift).\n  return Math.round(diff / millisecondsInWeek) + 1;\n}\n\n// Fallback for modularized imports:\nexport default getWeek;\n","import { constructFrom } from \"./constructFrom.mjs\";\nimport { getWeekYear } from \"./getWeekYear.mjs\";\nimport { startOfWeek } from \"./startOfWeek.mjs\";\nimport { getDefaultOptions } from \"./_lib/defaultOptions.mjs\";\n\n/**\n * The {@link startOfWeekYear} function options.\n */\n\n/**\n * @name startOfWeekYear\n * @category Week-Numbering Year Helpers\n * @summary Return the start of a local week-numbering year for the given date.\n *\n * @description\n * Return the start of a local week-numbering year.\n * The exact calculation depends on the values of\n * `options.weekStartsOn` (which is the index of the first day of the week)\n * and `options.firstWeekContainsDate` (which is the day of January, which is always in\n * the first week of the week-numbering year)\n *\n * Week numbering: https://en.wikipedia.org/wiki/Week#The_ISO_week_date_system\n *\n * @typeParam DateType - The `Date` type, the function operates on. Gets inferred from passed arguments. Allows to use extensions like [`UTCDate`](https://github.com/date-fns/utc).\n *\n * @param date - The original date\n * @param options - An object with options\n *\n * @returns The start of a week-numbering year\n *\n * @example\n * // The start of an a week-numbering year for 2 July 2005 with default settings:\n * const result = startOfWeekYear(new Date(2005, 6, 2))\n * //=> Sun Dec 26 2004 00:00:00\n *\n * @example\n * // The start of a week-numbering year for 2 July 2005\n * // if Monday is the first day of week\n * // and 4 January is always in the first week of the year:\n * const result = startOfWeekYear(new Date(2005, 6, 2), {\n *   weekStartsOn: 1,\n *   firstWeekContainsDate: 4\n * })\n * //=> Mon Jan 03 2005 00:00:00\n */\nexport function startOfWeekYear(date, options) {\n  const defaultOptions = getDefaultOptions();\n  const firstWeekContainsDate =\n    options?.firstWeekContainsDate ??\n    options?.locale?.options?.firstWeekContainsDate ??\n    defaultOptions.firstWeekContainsDate ??\n    defaultOptions.locale?.options?.firstWeekContainsDate ??\n    1;\n\n  const year = getWeekYear(date, options);\n  const firstWeek = constructFrom(date, 0);\n  firstWeek.setFullYear(year, 0, firstWeekContainsDate);\n  firstWeek.setHours(0, 0, 0, 0);\n  const _date = startOfWeek(firstWeek, options);\n  return _date;\n}\n\n// Fallback for modularized imports:\nexport default startOfWeekYear;\n","export function addLeadingZeros(number, targetLength) {\n  const sign = number < 0 ? \"-\" : \"\";\n  const output = Math.abs(number).toString().padStart(targetLength, \"0\");\n  return sign + output;\n}\n","import { addLeadingZeros } from \"../addLeadingZeros.mjs\";\n\n/*\n * |     | Unit                           |     | Unit                           |\n * |-----|--------------------------------|-----|--------------------------------|\n * |  a  | AM, PM                         |  A* |                                |\n * |  d  | Day of month                   |  D  |                                |\n * |  h  | Hour [1-12]                    |  H  | Hour [0-23]                    |\n * |  m  | Minute                         |  M  | Month                          |\n * |  s  | Second                         |  S  | Fraction of second             |\n * |  y  | Year (abs)                     |  Y  |                                |\n *\n * Letters marked by * are not implemented but reserved by Unicode standard.\n */\n\nexport const lightFormatters = {\n  // Year\n  y(date, token) {\n    // From http://www.unicode.org/reports/tr35/tr35-31/tr35-dates.html#Date_Format_tokens\n    // | Year     |     y | yy |   yyy |  yyyy | yyyyy |\n    // |----------|-------|----|-------|-------|-------|\n    // | AD 1     |     1 | 01 |   001 |  0001 | 00001 |\n    // | AD 12    |    12 | 12 |   012 |  0012 | 00012 |\n    // | AD 123   |   123 | 23 |   123 |  0123 | 00123 |\n    // | AD 1234  |  1234 | 34 |  1234 |  1234 | 01234 |\n    // | AD 12345 | 12345 | 45 | 12345 | 12345 | 12345 |\n\n    const signedYear = date.getFullYear();\n    // Returns 1 for 1 BC (which is year 0 in JavaScript)\n    const year = signedYear > 0 ? signedYear : 1 - signedYear;\n    return addLeadingZeros(token === \"yy\" ? year % 100 : year, token.length);\n  },\n\n  // Month\n  M(date, token) {\n    const month = date.getMonth();\n    return token === \"M\" ? String(month + 1) : addLeadingZeros(month + 1, 2);\n  },\n\n  // Day of the month\n  d(date, token) {\n    return addLeadingZeros(date.getDate(), token.length);\n  },\n\n  // AM or PM\n  a(date, token) {\n    const dayPeriodEnumValue = date.getHours() / 12 >= 1 ? \"pm\" : \"am\";\n\n    switch (token) {\n      case \"a\":\n      case \"aa\":\n        return dayPeriodEnumValue.toUpperCase();\n      case \"aaa\":\n        return dayPeriodEnumValue;\n      case \"aaaaa\":\n        return dayPeriodEnumValue[0];\n      case \"aaaa\":\n      default:\n        return dayPeriodEnumValue === \"am\" ? \"a.m.\" : \"p.m.\";\n    }\n  },\n\n  // Hour [1-12]\n  h(date, token) {\n    return addLeadingZeros(date.getHours() % 12 || 12, token.length);\n  },\n\n  // Hour [0-23]\n  H(date, token) {\n    return addLeadingZeros(date.getHours(), token.length);\n  },\n\n  // Minute\n  m(date, token) {\n    return addLeadingZeros(date.getMinutes(), token.length);\n  },\n\n  // Second\n  s(date, token) {\n    return addLeadingZeros(date.getSeconds(), token.length);\n  },\n\n  // Fraction of second\n  S(date, token) {\n    const numberOfDigits = token.length;\n    const milliseconds = date.getMilliseconds();\n    const fractionalSeconds = Math.trunc(\n      milliseconds * Math.pow(10, numberOfDigits - 3),\n    );\n    return addLeadingZeros(fractionalSeconds, token.length);\n  },\n};\n","import { getDayOfYear } from \"../../getDayOfYear.mjs\";\nimport { getISOWeek } from \"../../getISOWeek.mjs\";\nimport { getISOWeekYear } from \"../../getISOWeekYear.mjs\";\nimport { getWeek } from \"../../getWeek.mjs\";\nimport { getWeekYear } from \"../../getWeekYear.mjs\";\nimport { addLeadingZeros } from \"../addLeadingZeros.mjs\";\nimport { lightFormatters } from \"./lightFormatters.mjs\";\n\nconst dayPeriodEnum = {\n  am: \"am\",\n  pm: \"pm\",\n  midnight: \"midnight\",\n  noon: \"noon\",\n  morning: \"morning\",\n  afternoon: \"afternoon\",\n  evening: \"evening\",\n  night: \"night\",\n};\n\n/*\n * |     | Unit                           |     | Unit                           |\n * |-----|--------------------------------|-----|--------------------------------|\n * |  a  | AM, PM                         |  A* | Milliseconds in day            |\n * |  b  | AM, PM, noon, midnight         |  B  | Flexible day period            |\n * |  c  | Stand-alone local day of week  |  C* | Localized hour w/ day period   |\n * |  d  | Day of month                   |  D  | Day of year                    |\n * |  e  | Local day of week              |  E  | Day of week                    |\n * |  f  |                                |  F* | Day of week in month           |\n * |  g* | Modified Julian day            |  G  | Era                            |\n * |  h  | Hour [1-12]                    |  H  | Hour [0-23]                    |\n * |  i! | ISO day of week                |  I! | ISO week of year               |\n * |  j* | Localized hour w/ day period   |  J* | Localized hour w/o day period  |\n * |  k  | Hour [1-24]                    |  K  | Hour [0-11]                    |\n * |  l* | (deprecated)                   |  L  | Stand-alone month              |\n * |  m  | Minute                         |  M  | Month                          |\n * |  n  |                                |  N  |                                |\n * |  o! | Ordinal number modifier        |  O  | Timezone (GMT)                 |\n * |  p! | Long localized time            |  P! | Long localized date            |\n * |  q  | Stand-alone quarter            |  Q  | Quarter                        |\n * |  r* | Related Gregorian year         |  R! | ISO week-numbering year        |\n * |  s  | Second                         |  S  | Fraction of second             |\n * |  t! | Seconds timestamp              |  T! | Milliseconds timestamp         |\n * |  u  | Extended year                  |  U* | Cyclic year                    |\n * |  v* | Timezone (generic non-locat.)  |  V* | Timezone (location)            |\n * |  w  | Local week of year             |  W* | Week of month                  |\n * |  x  | Timezone (ISO-8601 w/o Z)      |  X  | Timezone (ISO-8601)            |\n * |  y  | Year (abs)                     |  Y  | Local week-numbering year      |\n * |  z  | Timezone (specific non-locat.) |  Z* | Timezone (aliases)             |\n *\n * Letters marked by * are not implemented but reserved by Unicode standard.\n *\n * Letters marked by ! are non-standard, but implemented by date-fns:\n * - `o` modifies the previous token to turn it into an ordinal (see `format` docs)\n * - `i` is ISO day of week. For `i` and `ii` is returns numeric ISO week days,\n *   i.e. 7 for Sunday, 1 for Monday, etc.\n * - `I` is ISO week of year, as opposed to `w` which is local week of year.\n * - `R` is ISO week-numbering year, as opposed to `Y` which is local week-numbering year.\n *   `R` is supposed to be used in conjunction with `I` and `i`\n *   for universal ISO week-numbering date, whereas\n *   `Y` is supposed to be used in conjunction with `w` and `e`\n *   for week-numbering date specific to the locale.\n * - `P` is long localized date format\n * - `p` is long localized time format\n */\n\nexport const formatters = {\n  // Era\n  G: function (date, token, localize) {\n    const era = date.getFullYear() > 0 ? 1 : 0;\n    switch (token) {\n      // AD, BC\n      case \"G\":\n      case \"GG\":\n      case \"GGG\":\n        return localize.era(era, { width: \"abbreviated\" });\n      // A, B\n      case \"GGGGG\":\n        return localize.era(era, { width: \"narrow\" });\n      // Anno Domini, Before Christ\n      case \"GGGG\":\n      default:\n        return localize.era(era, { width: \"wide\" });\n    }\n  },\n\n  // Year\n  y: function (date, token, localize) {\n    // Ordinal number\n    if (token === \"yo\") {\n      const signedYear = date.getFullYear();\n      // Returns 1 for 1 BC (which is year 0 in JavaScript)\n      const year = signedYear > 0 ? signedYear : 1 - signedYear;\n      return localize.ordinalNumber(year, { unit: \"year\" });\n    }\n\n    return lightFormatters.y(date, token);\n  },\n\n  // Local week-numbering year\n  Y: function (date, token, localize, options) {\n    const signedWeekYear = getWeekYear(date, options);\n    // Returns 1 for 1 BC (which is year 0 in JavaScript)\n    const weekYear = signedWeekYear > 0 ? signedWeekYear : 1 - signedWeekYear;\n\n    // Two digit year\n    if (token === \"YY\") {\n      const twoDigitYear = weekYear % 100;\n      return addLeadingZeros(twoDigitYear, 2);\n    }\n\n    // Ordinal number\n    if (token === \"Yo\") {\n      return localize.ordinalNumber(weekYear, { unit: \"year\" });\n    }\n\n    // Padding\n    return addLeadingZeros(weekYear, token.length);\n  },\n\n  // ISO week-numbering year\n  R: function (date, token) {\n    const isoWeekYear = getISOWeekYear(date);\n\n    // Padding\n    return addLeadingZeros(isoWeekYear, token.length);\n  },\n\n  // Extended year. This is a single number designating the year of this calendar system.\n  // The main difference between `y` and `u` localizers are B.C. years:\n  // | Year | `y` | `u` |\n  // |------|-----|-----|\n  // | AC 1 |   1 |   1 |\n  // | BC 1 |   1 |   0 |\n  // | BC 2 |   2 |  -1 |\n  // Also `yy` always returns the last two digits of a year,\n  // while `uu` pads single digit years to 2 characters and returns other years unchanged.\n  u: function (date, token) {\n    const year = date.getFullYear();\n    return addLeadingZeros(year, token.length);\n  },\n\n  // Quarter\n  Q: function (date, token, localize) {\n    const quarter = Math.ceil((date.getMonth() + 1) / 3);\n    switch (token) {\n      // 1, 2, 3, 4\n      case \"Q\":\n        return String(quarter);\n      // 01, 02, 03, 04\n      case \"QQ\":\n        return addLeadingZeros(quarter, 2);\n      // 1st, 2nd, 3rd, 4th\n      case \"Qo\":\n        return localize.ordinalNumber(quarter, { unit: \"quarter\" });\n      // Q1, Q2, Q3, Q4\n      case \"QQQ\":\n        return localize.quarter(quarter, {\n          width: \"abbreviated\",\n          context: \"formatting\",\n        });\n      // 1, 2, 3, 4 (narrow quarter; could be not numerical)\n      case \"QQQQQ\":\n        return localize.quarter(quarter, {\n          width: \"narrow\",\n          context: \"formatting\",\n        });\n      // 1st quarter, 2nd quarter, ...\n      case \"QQQQ\":\n      default:\n        return localize.quarter(quarter, {\n          width: \"wide\",\n          context: \"formatting\",\n        });\n    }\n  },\n\n  // Stand-alone quarter\n  q: function (date, token, localize) {\n    const quarter = Math.ceil((date.getMonth() + 1) / 3);\n    switch (token) {\n      // 1, 2, 3, 4\n      case \"q\":\n        return String(quarter);\n      // 01, 02, 03, 04\n      case \"qq\":\n        return addLeadingZeros(quarter, 2);\n      // 1st, 2nd, 3rd, 4th\n      case \"qo\":\n        return localize.ordinalNumber(quarter, { unit: \"quarter\" });\n      // Q1, Q2, Q3, Q4\n      case \"qqq\":\n        return localize.quarter(quarter, {\n          width: \"abbreviated\",\n          context: \"standalone\",\n        });\n      // 1, 2, 3, 4 (narrow quarter; could be not numerical)\n      case \"qqqqq\":\n        return localize.quarter(quarter, {\n          width: \"narrow\",\n          context: \"standalone\",\n        });\n      // 1st quarter, 2nd quarter, ...\n      case \"qqqq\":\n      default:\n        return localize.quarter(quarter, {\n          width: \"wide\",\n          context: \"standalone\",\n        });\n    }\n  },\n\n  // Month\n  M: function (date, token, localize) {\n    const month = date.getMonth();\n    switch (token) {\n      case \"M\":\n      case \"MM\":\n        return lightFormatters.M(date, token);\n      // 1st, 2nd, ..., 12th\n      case \"Mo\":\n        return localize.ordinalNumber(month + 1, { unit: \"month\" });\n      // Jan, Feb, ..., Dec\n      case \"MMM\":\n        return localize.month(month, {\n          width: \"abbreviated\",\n          context: \"formatting\",\n        });\n      // J, F, ..., D\n      case \"MMMMM\":\n        return localize.month(month, {\n          width: \"narrow\",\n          context: \"formatting\",\n        });\n      // January, February, ..., December\n      case \"MMMM\":\n      default:\n        return localize.month(month, { width: \"wide\", context: \"formatting\" });\n    }\n  },\n\n  // Stand-alone month\n  L: function (date, token, localize) {\n    const month = date.getMonth();\n    switch (token) {\n      // 1, 2, ..., 12\n      case \"L\":\n        return String(month + 1);\n      // 01, 02, ..., 12\n      case \"LL\":\n        return addLeadingZeros(month + 1, 2);\n      // 1st, 2nd, ..., 12th\n      case \"Lo\":\n        return localize.ordinalNumber(month + 1, { unit: \"month\" });\n      // Jan, Feb, ..., Dec\n      case \"LLL\":\n        return localize.month(month, {\n          width: \"abbreviated\",\n          context: \"standalone\",\n        });\n      // J, F, ..., D\n      case \"LLLLL\":\n        return localize.month(month, {\n          width: \"narrow\",\n          context: \"standalone\",\n        });\n      // January, February, ..., December\n      case \"LLLL\":\n      default:\n        return localize.month(month, { width: \"wide\", context: \"standalone\" });\n    }\n  },\n\n  // Local week of year\n  w: function (date, token, localize, options) {\n    const week = getWeek(date, options);\n\n    if (token === \"wo\") {\n      return localize.ordinalNumber(week, { unit: \"week\" });\n    }\n\n    return addLeadingZeros(week, token.length);\n  },\n\n  // ISO week of year\n  I: function (date, token, localize) {\n    const isoWeek = getISOWeek(date);\n\n    if (token === \"Io\") {\n      return localize.ordinalNumber(isoWeek, { unit: \"week\" });\n    }\n\n    return addLeadingZeros(isoWeek, token.length);\n  },\n\n  // Day of the month\n  d: function (date, token, localize) {\n    if (token === \"do\") {\n      return localize.ordinalNumber(date.getDate(), { unit: \"date\" });\n    }\n\n    return lightFormatters.d(date, token);\n  },\n\n  // Day of year\n  D: function (date, token, localize) {\n    const dayOfYear = getDayOfYear(date);\n\n    if (token === \"Do\") {\n      return localize.ordinalNumber(dayOfYear, { unit: \"dayOfYear\" });\n    }\n\n    return addLeadingZeros(dayOfYear, token.length);\n  },\n\n  // Day of week\n  E: function (date, token, localize) {\n    const dayOfWeek = date.getDay();\n    switch (token) {\n      // Tue\n      case \"E\":\n      case \"EE\":\n      case \"EEE\":\n        return localize.day(dayOfWeek, {\n          width: \"abbreviated\",\n          context: \"formatting\",\n        });\n      // T\n      case \"EEEEE\":\n        return localize.day(dayOfWeek, {\n          width: \"narrow\",\n          context: \"formatting\",\n        });\n      // Tu\n      case \"EEEEEE\":\n        return localize.day(dayOfWeek, {\n          width: \"short\",\n          context: \"formatting\",\n        });\n      // Tuesday\n      case \"EEEE\":\n      default:\n        return localize.day(dayOfWeek, {\n          width: \"wide\",\n          context: \"formatting\",\n        });\n    }\n  },\n\n  // Local day of week\n  e: function (date, token, localize, options) {\n    const dayOfWeek = date.getDay();\n    const localDayOfWeek = (dayOfWeek - options.weekStartsOn + 8) % 7 || 7;\n    switch (token) {\n      // Numerical value (Nth day of week with current locale or weekStartsOn)\n      case \"e\":\n        return String(localDayOfWeek);\n      // Padded numerical value\n      case \"ee\":\n        return addLeadingZeros(localDayOfWeek, 2);\n      // 1st, 2nd, ..., 7th\n      case \"eo\":\n        return localize.ordinalNumber(localDayOfWeek, { unit: \"day\" });\n      case \"eee\":\n        return localize.day(dayOfWeek, {\n          width: \"abbreviated\",\n          context: \"formatting\",\n        });\n      // T\n      case \"eeeee\":\n        return localize.day(dayOfWeek, {\n          width: \"narrow\",\n          context: \"formatting\",\n        });\n      // Tu\n      case \"eeeeee\":\n        return localize.day(dayOfWeek, {\n          width: \"short\",\n          context: \"formatting\",\n        });\n      // Tuesday\n      case \"eeee\":\n      default:\n        return localize.day(dayOfWeek, {\n          width: \"wide\",\n          context: \"formatting\",\n        });\n    }\n  },\n\n  // Stand-alone local day of week\n  c: function (date, token, localize, options) {\n    const dayOfWeek = date.getDay();\n    const localDayOfWeek = (dayOfWeek - options.weekStartsOn + 8) % 7 || 7;\n    switch (token) {\n      // Numerical value (same as in `e`)\n      case \"c\":\n        return String(localDayOfWeek);\n      // Padded numerical value\n      case \"cc\":\n        return addLeadingZeros(localDayOfWeek, token.length);\n      // 1st, 2nd, ..., 7th\n      case \"co\":\n        return localize.ordinalNumber(localDayOfWeek, { unit: \"day\" });\n      case \"ccc\":\n        return localize.day(dayOfWeek, {\n          width: \"abbreviated\",\n          context: \"standalone\",\n        });\n      // T\n      case \"ccccc\":\n        return localize.day(dayOfWeek, {\n          width: \"narrow\",\n          context: \"standalone\",\n        });\n      // Tu\n      case \"cccccc\":\n        return localize.day(dayOfWeek, {\n          width: \"short\",\n          context: \"standalone\",\n        });\n      // Tuesday\n      case \"cccc\":\n      default:\n        return localize.day(dayOfWeek, {\n          width: \"wide\",\n          context: \"standalone\",\n        });\n    }\n  },\n\n  // ISO day of week\n  i: function (date, token, localize) {\n    const dayOfWeek = date.getDay();\n    const isoDayOfWeek = dayOfWeek === 0 ? 7 : dayOfWeek;\n    switch (token) {\n      // 2\n      case \"i\":\n        return String(isoDayOfWeek);\n      // 02\n      case \"ii\":\n        return addLeadingZeros(isoDayOfWeek, token.length);\n      // 2nd\n      case \"io\":\n        return localize.ordinalNumber(isoDayOfWeek, { unit: \"day\" });\n      // Tue\n      case \"iii\":\n        return localize.day(dayOfWeek, {\n          width: \"abbreviated\",\n          context: \"formatting\",\n        });\n      // T\n      case \"iiiii\":\n        return localize.day(dayOfWeek, {\n          width: \"narrow\",\n          context: \"formatting\",\n        });\n      // Tu\n      case \"iiiiii\":\n        return localize.day(dayOfWeek, {\n          width: \"short\",\n          context: \"formatting\",\n        });\n      // Tuesday\n      case \"iiii\":\n      default:\n        return localize.day(dayOfWeek, {\n          width: \"wide\",\n          context: \"formatting\",\n        });\n    }\n  },\n\n  // AM or PM\n  a: function (date, token, localize) {\n    const hours = date.getHours();\n    const dayPeriodEnumValue = hours / 12 >= 1 ? \"pm\" : \"am\";\n\n    switch (token) {\n      case \"a\":\n      case \"aa\":\n        return localize.dayPeriod(dayPeriodEnumValue, {\n          width: \"abbreviated\",\n          context: \"formatting\",\n        });\n      case \"aaa\":\n        return localize\n          .dayPeriod(dayPeriodEnumValue, {\n            width: \"abbreviated\",\n            context: \"formatting\",\n          })\n          .toLowerCase();\n      case \"aaaaa\":\n        return localize.dayPeriod(dayPeriodEnumValue, {\n          width: \"narrow\",\n          context: \"formatting\",\n        });\n      case \"aaaa\":\n      default:\n        return localize.dayPeriod(dayPeriodEnumValue, {\n          width: \"wide\",\n          context: \"formatting\",\n        });\n    }\n  },\n\n  // AM, PM, midnight, noon\n  b: function (date, token, localize) {\n    const hours = date.getHours();\n    let dayPeriodEnumValue;\n    if (hours === 12) {\n      dayPeriodEnumValue = dayPeriodEnum.noon;\n    } else if (hours === 0) {\n      dayPeriodEnumValue = dayPeriodEnum.midnight;\n    } else {\n      dayPeriodEnumValue = hours / 12 >= 1 ? \"pm\" : \"am\";\n    }\n\n    switch (token) {\n      case \"b\":\n      case \"bb\":\n        return localize.dayPeriod(dayPeriodEnumValue, {\n          width: \"abbreviated\",\n          context: \"formatting\",\n        });\n      case \"bbb\":\n        return localize\n          .dayPeriod(dayPeriodEnumValue, {\n            width: \"abbreviated\",\n            context: \"formatting\",\n          })\n          .toLowerCase();\n      case \"bbbbb\":\n        return localize.dayPeriod(dayPeriodEnumValue, {\n          width: \"narrow\",\n          context: \"formatting\",\n        });\n      case \"bbbb\":\n      default:\n        return localize.dayPeriod(dayPeriodEnumValue, {\n          width: \"wide\",\n          context: \"formatting\",\n        });\n    }\n  },\n\n  // in the morning, in the afternoon, in the evening, at night\n  B: function (date, token, localize) {\n    const hours = date.getHours();\n    let dayPeriodEnumValue;\n    if (hours >= 17) {\n      dayPeriodEnumValue = dayPeriodEnum.evening;\n    } else if (hours >= 12) {\n      dayPeriodEnumValue = dayPeriodEnum.afternoon;\n    } else if (hours >= 4) {\n      dayPeriodEnumValue = dayPeriodEnum.morning;\n    } else {\n      dayPeriodEnumValue = dayPeriodEnum.night;\n    }\n\n    switch (token) {\n      case \"B\":\n      case \"BB\":\n      case \"BBB\":\n        return localize.dayPeriod(dayPeriodEnumValue, {\n          width: \"abbreviated\",\n          context: \"formatting\",\n        });\n      case \"BBBBB\":\n        return localize.dayPeriod(dayPeriodEnumValue, {\n          width: \"narrow\",\n          context: \"formatting\",\n        });\n      case \"BBBB\":\n      default:\n        return localize.dayPeriod(dayPeriodEnumValue, {\n          width: \"wide\",\n          context: \"formatting\",\n        });\n    }\n  },\n\n  // Hour [1-12]\n  h: function (date, token, localize) {\n    if (token === \"ho\") {\n      let hours = date.getHours() % 12;\n      if (hours === 0) hours = 12;\n      return localize.ordinalNumber(hours, { unit: \"hour\" });\n    }\n\n    return lightFormatters.h(date, token);\n  },\n\n  // Hour [0-23]\n  H: function (date, token, localize) {\n    if (token === \"Ho\") {\n      return localize.ordinalNumber(date.getHours(), { unit: \"hour\" });\n    }\n\n    return lightFormatters.H(date, token);\n  },\n\n  // Hour [0-11]\n  K: function (date, token, localize) {\n    const hours = date.getHours() % 12;\n\n    if (token === \"Ko\") {\n      return localize.ordinalNumber(hours, { unit: \"hour\" });\n    }\n\n    return addLeadingZeros(hours, token.length);\n  },\n\n  // Hour [1-24]\n  k: function (date, token, localize) {\n    let hours = date.getHours();\n    if (hours === 0) hours = 24;\n\n    if (token === \"ko\") {\n      return localize.ordinalNumber(hours, { unit: \"hour\" });\n    }\n\n    return addLeadingZeros(hours, token.length);\n  },\n\n  // Minute\n  m: function (date, token, localize) {\n    if (token === \"mo\") {\n      return localize.ordinalNumber(date.getMinutes(), { unit: \"minute\" });\n    }\n\n    return lightFormatters.m(date, token);\n  },\n\n  // Second\n  s: function (date, token, localize) {\n    if (token === \"so\") {\n      return localize.ordinalNumber(date.getSeconds(), { unit: \"second\" });\n    }\n\n    return lightFormatters.s(date, token);\n  },\n\n  // Fraction of second\n  S: function (date, token) {\n    return lightFormatters.S(date, token);\n  },\n\n  // Timezone (ISO-8601. If offset is 0, output is always `'Z'`)\n  X: function (date, token, _localize) {\n    const timezoneOffset = date.getTimezoneOffset();\n\n    if (timezoneOffset === 0) {\n      return \"Z\";\n    }\n\n    switch (token) {\n      // Hours and optional minutes\n      case \"X\":\n        return formatTimezoneWithOptionalMinutes(timezoneOffset);\n\n      // Hours, minutes and optional seconds without `:` delimiter\n      // Note: neither ISO-8601 nor JavaScript supports seconds in timezone offsets\n      // so this token always has the same output as `XX`\n      case \"XXXX\":\n      case \"XX\": // Hours and minutes without `:` delimiter\n        return formatTimezone(timezoneOffset);\n\n      // Hours, minutes and optional seconds with `:` delimiter\n      // Note: neither ISO-8601 nor JavaScript supports seconds in timezone offsets\n      // so this token always has the same output as `XXX`\n      case \"XXXXX\":\n      case \"XXX\": // Hours and minutes with `:` delimiter\n      default:\n        return formatTimezone(timezoneOffset, \":\");\n    }\n  },\n\n  // Timezone (ISO-8601. If offset is 0, output is `'+00:00'` or equivalent)\n  x: function (date, token, _localize) {\n    const timezoneOffset = date.getTimezoneOffset();\n\n    switch (token) {\n      // Hours and optional minutes\n      case \"x\":\n        return formatTimezoneWithOptionalMinutes(timezoneOffset);\n\n      // Hours, minutes and optional seconds without `:` delimiter\n      // Note: neither ISO-8601 nor JavaScript supports seconds in timezone offsets\n      // so this token always has the same output as `xx`\n      case \"xxxx\":\n      case \"xx\": // Hours and minutes without `:` delimiter\n        return formatTimezone(timezoneOffset);\n\n      // Hours, minutes and optional seconds with `:` delimiter\n      // Note: neither ISO-8601 nor JavaScript supports seconds in timezone offsets\n      // so this token always has the same output as `xxx`\n      case \"xxxxx\":\n      case \"xxx\": // Hours and minutes with `:` delimiter\n      default:\n        return formatTimezone(timezoneOffset, \":\");\n    }\n  },\n\n  // Timezone (GMT)\n  O: function (date, token, _localize) {\n    const timezoneOffset = date.getTimezoneOffset();\n\n    switch (token) {\n      // Short\n      case \"O\":\n      case \"OO\":\n      case \"OOO\":\n        return \"GMT\" + formatTimezoneShort(timezoneOffset, \":\");\n      // Long\n      case \"OOOO\":\n      default:\n        return \"GMT\" + formatTimezone(timezoneOffset, \":\");\n    }\n  },\n\n  // Timezone (specific non-location)\n  z: function (date, token, _localize) {\n    const timezoneOffset = date.getTimezoneOffset();\n\n    switch (token) {\n      // Short\n      case \"z\":\n      case \"zz\":\n      case \"zzz\":\n        return \"GMT\" + formatTimezoneShort(timezoneOffset, \":\");\n      // Long\n      case \"zzzz\":\n      default:\n        return \"GMT\" + formatTimezone(timezoneOffset, \":\");\n    }\n  },\n\n  // Seconds timestamp\n  t: function (date, token, _localize) {\n    const timestamp = Math.trunc(date.getTime() / 1000);\n    return addLeadingZeros(timestamp, token.length);\n  },\n\n  // Milliseconds timestamp\n  T: function (date, token, _localize) {\n    const timestamp = date.getTime();\n    return addLeadingZeros(timestamp, token.length);\n  },\n};\n\nfunction formatTimezoneShort(offset, delimiter = \"\") {\n  const sign = offset > 0 ? \"-\" : \"+\";\n  const absOffset = Math.abs(offset);\n  const hours = Math.trunc(absOffset / 60);\n  const minutes = absOffset % 60;\n  if (minutes === 0) {\n    return sign + String(hours);\n  }\n  return sign + String(hours) + delimiter + addLeadingZeros(minutes, 2);\n}\n\nfunction formatTimezoneWithOptionalMinutes(offset, delimiter) {\n  if (offset % 60 === 0) {\n    const sign = offset > 0 ? \"-\" : \"+\";\n    return sign + addLeadingZeros(Math.abs(offset) / 60, 2);\n  }\n  return formatTimezone(offset, delimiter);\n}\n\nfunction formatTimezone(offset, delimiter = \"\") {\n  const sign = offset > 0 ? \"-\" : \"+\";\n  const absOffset = Math.abs(offset);\n  const hours = addLeadingZeros(Math.trunc(absOffset / 60), 2);\n  const minutes = addLeadingZeros(absOffset % 60, 2);\n  return sign + hours + delimiter + minutes;\n}\n","const dateLongFormatter = (pattern, formatLong) => {\n  switch (pattern) {\n    case \"P\":\n      return formatLong.date({ width: \"short\" });\n    case \"PP\":\n      return formatLong.date({ width: \"medium\" });\n    case \"PPP\":\n      return formatLong.date({ width: \"long\" });\n    case \"PPPP\":\n    default:\n      return formatLong.date({ width: \"full\" });\n  }\n};\n\nconst timeLongFormatter = (pattern, formatLong) => {\n  switch (pattern) {\n    case \"p\":\n      return formatLong.time({ width: \"short\" });\n    case \"pp\":\n      return formatLong.time({ width: \"medium\" });\n    case \"ppp\":\n      return formatLong.time({ width: \"long\" });\n    case \"pppp\":\n    default:\n      return formatLong.time({ width: \"full\" });\n  }\n};\n\nconst dateTimeLongFormatter = (pattern, formatLong) => {\n  const matchResult = pattern.match(/(P+)(p+)?/) || [];\n  const datePattern = matchResult[1];\n  const timePattern = matchResult[2];\n\n  if (!timePattern) {\n    return dateLongFormatter(pattern, formatLong);\n  }\n\n  let dateTimeFormat;\n\n  switch (datePattern) {\n    case \"P\":\n      dateTimeFormat = formatLong.dateTime({ width: \"short\" });\n      break;\n    case \"PP\":\n      dateTimeFormat = formatLong.dateTime({ width: \"medium\" });\n      break;\n    case \"PPP\":\n      dateTimeFormat = formatLong.dateTime({ width: \"long\" });\n      break;\n    case \"PPPP\":\n    default:\n      dateTimeFormat = formatLong.dateTime({ width: \"full\" });\n      break;\n  }\n\n  return dateTimeFormat\n    .replace(\"{{date}}\", dateLongFormatter(datePattern, formatLong))\n    .replace(\"{{time}}\", timeLongFormatter(timePattern, formatLong));\n};\n\nexport const longFormatters = {\n  p: timeLongFormatter,\n  P: dateTimeLongFormatter,\n};\n","const dayOfYearTokenRE = /^D+$/;\nconst weekYearTokenRE = /^Y+$/;\n\nconst throwTokens = [\"D\", \"DD\", \"YY\", \"YYYY\"];\n\nexport function isProtectedDayOfYearToken(token) {\n  return dayOfYearTokenRE.test(token);\n}\n\nexport function isProtectedWeekYearToken(token) {\n  return weekYearTokenRE.test(token);\n}\n\nexport function warnOrThrowProtectedError(token, format, input) {\n  const _message = message(token, format, input);\n  console.warn(_message);\n  if (throwTokens.includes(token)) throw new RangeError(_message);\n}\n\nfunction message(token, format, input) {\n  const subject = token[0] === \"Y\" ? \"years\" : \"days of the month\";\n  return `Use \\`${token.toLowerCase()}\\` instead of \\`${token}\\` (in \\`${format}\\`) for formatting ${subject} to the input \\`${input}\\`; see: https://github.com/date-fns/date-fns/blob/master/docs/unicodeTokens.md`;\n}\n","import { isDate } from \"./isDate.mjs\";\nimport { toDate } from \"./toDate.mjs\";\n\n/**\n * @name isValid\n * @category Common Helpers\n * @summary Is the given date valid?\n *\n * @description\n * Returns false if argument is Invalid Date and true otherwise.\n * Argument is converted to Date using `toDate`. See [toDate](https://date-fns.org/docs/toDate)\n * Invalid Date is a Date, whose time value is NaN.\n *\n * Time value of Date: http://es5.github.io/#x15.9.1.1\n *\n * @typeParam DateType - The `Date` type, the function operates on. Gets inferred from passed arguments. Allows to use extensions like [`UTCDate`](https://github.com/date-fns/utc).\n *\n * @param date - The date to check\n *\n * @returns The date is valid\n *\n * @example\n * // For the valid date:\n * const result = isValid(new Date(2014, 1, 31))\n * //=> true\n *\n * @example\n * // For the value, convertable into a date:\n * const result = isValid(1393804800000)\n * //=> true\n *\n * @example\n * // For the invalid date:\n * const result = isValid(new Date(''))\n * //=> false\n */\nexport function isValid(date) {\n  if (!isDate(date) && typeof date !== \"number\") {\n    return false;\n  }\n  const _date = toDate(date);\n  return !isNaN(Number(_date));\n}\n\n// Fallback for modularized imports:\nexport default isValid;\n","/**\n * @name isDate\n * @category Common Helpers\n * @summary Is the given value a date?\n *\n * @description\n * Returns true if the given value is an instance of Date. The function works for dates transferred across iframes.\n *\n * @param value - The value to check\n *\n * @returns True if the given value is a date\n *\n * @example\n * // For a valid date:\n * const result = isDate(new Date())\n * //=> true\n *\n * @example\n * // For an invalid date:\n * const result = isDate(new Date(NaN))\n * //=> true\n *\n * @example\n * // For some value:\n * const result = isDate('2014-02-31')\n * //=> false\n *\n * @example\n * // For an object:\n * const result = isDate({})\n * //=> false\n */\nexport function isDate(value) {\n  return (\n    value instanceof Date ||\n    (typeof value === \"object\" &&\n      Object.prototype.toString.call(value) === \"[object Date]\")\n  );\n}\n\n// Fallback for modularized imports:\nexport default isDate;\n","import { defaultLocale } from \"./_lib/defaultLocale.mjs\";\nimport { getDefaultOptions } from \"./_lib/defaultOptions.mjs\";\nimport { formatters } from \"./_lib/format/formatters.mjs\";\nimport { longFormatters } from \"./_lib/format/longFormatters.mjs\";\nimport {\n  isProtectedDayOfYearToken,\n  isProtectedWeekYearToken,\n  warnOrThrowProtectedError,\n} from \"./_lib/protectedTokens.mjs\";\nimport { isValid } from \"./isValid.mjs\";\nimport { toDate } from \"./toDate.mjs\";\n\n// Rexports of internal for libraries to use.\n// See: https://github.com/date-fns/date-fns/issues/3638#issuecomment-1877082874\nexport { formatters, longFormatters };\n\n// This RegExp consists of three parts separated by `|`:\n// - [yYQqMLwIdDecihHKkms]o matches any available ordinal number token\n//   (one of the certain letters followed by `o`)\n// - (\\w)\\1* matches any sequences of the same letter\n// - '' matches two quote characters in a row\n// - '(''|[^'])+('|$) matches anything surrounded by two quote characters ('),\n//   except a single quote symbol, which ends the sequence.\n//   Two quote characters do not end the sequence.\n//   If there is no matching single quote\n//   then the sequence will continue until the end of the string.\n// - . matches any single character unmatched by previous parts of the RegExps\nconst formattingTokensRegExp =\n  /[yYQqMLwIdDecihHKkms]o|(\\w)\\1*|''|'(''|[^'])+('|$)|./g;\n\n// This RegExp catches symbols escaped by quotes, and also\n// sequences of symbols P, p, and the combinations like `PPPPPPPppppp`\nconst longFormattingTokensRegExp = /P+p+|P+|p+|''|'(''|[^'])+('|$)|./g;\n\nconst escapedStringRegExp = /^'([^]*?)'?$/;\nconst doubleQuoteRegExp = /''/g;\nconst unescapedLatinCharacterRegExp = /[a-zA-Z]/;\n\nexport { format as formatDate };\n\n/**\n * The {@link format} function options.\n */\n\n/**\n * @name format\n * @alias formatDate\n * @category Common Helpers\n * @summary Format the date.\n *\n * @description\n * Return the formatted date string in the given format. The result may vary by locale.\n *\n * > ⚠️ Please note that the `format` tokens differ from Moment.js and other libraries.\n * > See: https://github.com/date-fns/date-fns/blob/master/docs/unicodeTokens.md\n *\n * The characters wrapped between two single quotes characters (') are escaped.\n * Two single quotes in a row, whether inside or outside a quoted sequence, represent a 'real' single quote.\n * (see the last example)\n *\n * Format of the string is based on Unicode Technical Standard #35:\n * https://www.unicode.org/reports/tr35/tr35-dates.html#Date_Field_Symbol_Table\n * with a few additions (see note 7 below the table).\n *\n * Accepted patterns:\n * | Unit                            | Pattern | Result examples                   | Notes |\n * |---------------------------------|---------|-----------------------------------|-------|\n * | Era                             | G..GGG  | AD, BC                            |       |\n * |                                 | GGGG    | Anno Domini, Before Christ        | 2     |\n * |                                 | GGGGG   | A, B                              |       |\n * | Calendar year                   | y       | 44, 1, 1900, 2017                 | 5     |\n * |                                 | yo      | 44th, 1st, 0th, 17th              | 5,7   |\n * |                                 | yy      | 44, 01, 00, 17                    | 5     |\n * |                                 | yyy     | 044, 001, 1900, 2017              | 5     |\n * |                                 | yyyy    | 0044, 0001, 1900, 2017            | 5     |\n * |                                 | yyyyy   | ...                               | 3,5   |\n * | Local week-numbering year       | Y       | 44, 1, 1900, 2017                 | 5     |\n * |                                 | Yo      | 44th, 1st, 1900th, 2017th         | 5,7   |\n * |                                 | YY      | 44, 01, 00, 17                    | 5,8   |\n * |                                 | YYY     | 044, 001, 1900, 2017              | 5     |\n * |                                 | YYYY    | 0044, 0001, 1900, 2017            | 5,8   |\n * |                                 | YYYYY   | ...                               | 3,5   |\n * | ISO week-numbering year         | R       | -43, 0, 1, 1900, 2017             | 5,7   |\n * |                                 | RR      | -43, 00, 01, 1900, 2017           | 5,7   |\n * |                                 | RRR     | -043, 000, 001, 1900, 2017        | 5,7   |\n * |                                 | RRRR    | -0043, 0000, 0001, 1900, 2017     | 5,7   |\n * |                                 | RRRRR   | ...                               | 3,5,7 |\n * | Extended year                   | u       | -43, 0, 1, 1900, 2017             | 5     |\n * |                                 | uu      | -43, 01, 1900, 2017               | 5     |\n * |                                 | uuu     | -043, 001, 1900, 2017             | 5     |\n * |                                 | uuuu    | -0043, 0001, 1900, 2017           | 5     |\n * |                                 | uuuuu   | ...                               | 3,5   |\n * | Quarter (formatting)            | Q       | 1, 2, 3, 4                        |       |\n * |                                 | Qo      | 1st, 2nd, 3rd, 4th                | 7     |\n * |                                 | QQ      | 01, 02, 03, 04                    |       |\n * |                                 | QQQ     | Q1, Q2, Q3, Q4                    |       |\n * |                                 | QQQQ    | 1st quarter, 2nd quarter, ...     | 2     |\n * |                                 | QQQQQ   | 1, 2, 3, 4                        | 4     |\n * | Quarter (stand-alone)           | q       | 1, 2, 3, 4                        |       |\n * |                                 | qo      | 1st, 2nd, 3rd, 4th                | 7     |\n * |                                 | qq      | 01, 02, 03, 04                    |       |\n * |                                 | qqq     | Q1, Q2, Q3, Q4                    |       |\n * |                                 | qqqq    | 1st quarter, 2nd quarter, ...     | 2     |\n * |                                 | qqqqq   | 1, 2, 3, 4                        | 4     |\n * | Month (formatting)              | M       | 1, 2, ..., 12                     |       |\n * |                                 | Mo      | 1st, 2nd, ..., 12th               | 7     |\n * |                                 | MM      | 01, 02, ..., 12                   |       |\n * |                                 | MMM     | Jan, Feb, ..., Dec                |       |\n * |                                 | MMMM    | January, February, ..., December  | 2     |\n * |                                 | MMMMM   | J, F, ..., D                      |       |\n * | Month (stand-alone)             | L       | 1, 2, ..., 12                     |       |\n * |                                 | Lo      | 1st, 2nd, ..., 12th               | 7     |\n * |                                 | LL      | 01, 02, ..., 12                   |       |\n * |                                 | LLL     | Jan, Feb, ..., Dec                |       |\n * |                                 | LLLL    | January, February, ..., December  | 2     |\n * |                                 | LLLLL   | J, F, ..., D                      |       |\n * | Local week of year              | w       | 1, 2, ..., 53                     |       |\n * |                                 | wo      | 1st, 2nd, ..., 53th               | 7     |\n * |                                 | ww      | 01, 02, ..., 53                   |       |\n * | ISO week of year                | I       | 1, 2, ..., 53                     | 7     |\n * |                                 | Io      | 1st, 2nd, ..., 53th               | 7     |\n * |                                 | II      | 01, 02, ..., 53                   | 7     |\n * | Day of month                    | d       | 1, 2, ..., 31                     |       |\n * |                                 | do      | 1st, 2nd, ..., 31st               | 7     |\n * |                                 | dd      | 01, 02, ..., 31                   |       |\n * | Day of year                     | D       | 1, 2, ..., 365, 366               | 9     |\n * |                                 | Do      | 1st, 2nd, ..., 365th, 366th       | 7     |\n * |                                 | DD      | 01, 02, ..., 365, 366             | 9     |\n * |                                 | DDD     | 001, 002, ..., 365, 366           |       |\n * |                                 | DDDD    | ...                               | 3     |\n * | Day of week (formatting)        | E..EEE  | Mon, Tue, Wed, ..., Sun           |       |\n * |                                 | EEEE    | Monday, Tuesday, ..., Sunday      | 2     |\n * |                                 | EEEEE   | M, T, W, T, F, S, S               |       |\n * |                                 | EEEEEE  | Mo, Tu, We, Th, Fr, Sa, Su        |       |\n * | ISO day of week (formatting)    | i       | 1, 2, 3, ..., 7                   | 7     |\n * |                                 | io      | 1st, 2nd, ..., 7th                | 7     |\n * |                                 | ii      | 01, 02, ..., 07                   | 7     |\n * |                                 | iii     | Mon, Tue, Wed, ..., Sun           | 7     |\n * |                                 | iiii    | Monday, Tuesday, ..., Sunday      | 2,7   |\n * |                                 | iiiii   | M, T, W, T, F, S, S               | 7     |\n * |                                 | iiiiii  | Mo, Tu, We, Th, Fr, Sa, Su        | 7     |\n * | Local day of week (formatting)  | e       | 2, 3, 4, ..., 1                   |       |\n * |                                 | eo      | 2nd, 3rd, ..., 1st                | 7     |\n * |                                 | ee      | 02, 03, ..., 01                   |       |\n * |                                 | eee     | Mon, Tue, Wed, ..., Sun           |       |\n * |                                 | eeee    | Monday, Tuesday, ..., Sunday      | 2     |\n * |                                 | eeeee   | M, T, W, T, F, S, S               |       |\n * |                                 | eeeeee  | Mo, Tu, We, Th, Fr, Sa, Su        |       |\n * | Local day of week (stand-alone) | c       | 2, 3, 4, ..., 1                   |       |\n * |                                 | co      | 2nd, 3rd, ..., 1st                | 7     |\n * |                                 | cc      | 02, 03, ..., 01                   |       |\n * |                                 | ccc     | Mon, Tue, Wed, ..., Sun           |       |\n * |                                 | cccc    | Monday, Tuesday, ..., Sunday      | 2     |\n * |                                 | ccccc   | M, T, W, T, F, S, S               |       |\n * |                                 | cccccc  | Mo, Tu, We, Th, Fr, Sa, Su        |       |\n * | AM, PM                          | a..aa   | AM, PM                            |       |\n * |                                 | aaa     | am, pm                            |       |\n * |                                 | aaaa    | a.m., p.m.                        | 2     |\n * |                                 | aaaaa   | a, p                              |       |\n * | AM, PM, noon, midnight          | b..bb   | AM, PM, noon, midnight            |       |\n * |                                 | bbb     | am, pm, noon, midnight            |       |\n * |                                 | bbbb    | a.m., p.m., noon, midnight        | 2     |\n * |                                 | bbbbb   | a, p, n, mi                       |       |\n * | Flexible day period             | B..BBB  | at night, in the morning, ...     |       |\n * |                                 | BBBB    | at night, in the morning, ...     | 2     |\n * |                                 | BBBBB   | at night, in the morning, ...     |       |\n * | Hour [1-12]                     | h       | 1, 2, ..., 11, 12                 |       |\n * |                                 | ho      | 1st, 2nd, ..., 11th, 12th         | 7     |\n * |                                 | hh      | 01, 02, ..., 11, 12               |       |\n * | Hour [0-23]                     | H       | 0, 1, 2, ..., 23                  |       |\n * |                                 | Ho      | 0th, 1st, 2nd, ..., 23rd          | 7     |\n * |                                 | HH      | 00, 01, 02, ..., 23               |       |\n * | Hour [0-11]                     | K       | 1, 2, ..., 11, 0                  |       |\n * |                                 | Ko      | 1st, 2nd, ..., 11th, 0th          | 7     |\n * |                                 | KK      | 01, 02, ..., 11, 00               |       |\n * | Hour [1-24]                     | k       | 24, 1, 2, ..., 23                 |       |\n * |                                 | ko      | 24th, 1st, 2nd, ..., 23rd         | 7     |\n * |                                 | kk      | 24, 01, 02, ..., 23               |       |\n * | Minute                          | m       | 0, 1, ..., 59                     |       |\n * |                                 | mo      | 0th, 1st, ..., 59th               | 7     |\n * |                                 | mm      | 00, 01, ..., 59                   |       |\n * | Second                          | s       | 0, 1, ..., 59                     |       |\n * |                                 | so      | 0th, 1st, ..., 59th               | 7     |\n * |                                 | ss      | 00, 01, ..., 59                   |       |\n * | Fraction of second              | S       | 0, 1, ..., 9                      |       |\n * |                                 | SS      | 00, 01, ..., 99                   |       |\n * |                                 | SSS     | 000, 001, ..., 999                |       |\n * |                                 | SSSS    | ...                               | 3     |\n * | Timezone (ISO-8601 w/ Z)        | X       | -08, +0530, Z                     |       |\n * |                                 | XX      | -0800, +0530, Z                   |       |\n * |                                 | XXX     | -08:00, +05:30, Z                 |       |\n * |                                 | XXXX    | -0800, +0530, Z, +123456          | 2     |\n * |                                 | XXXXX   | -08:00, +05:30, Z, +12:34:56      |       |\n * | Timezone (ISO-8601 w/o Z)       | x       | -08, +0530, +00                   |       |\n * |                                 | xx      | -0800, +0530, +0000               |       |\n * |                                 | xxx     | -08:00, +05:30, +00:00            | 2     |\n * |                                 | xxxx    | -0800, +0530, +0000, +123456      |       |\n * |                                 | xxxxx   | -08:00, +05:30, +00:00, +12:34:56 |       |\n * | Timezone (GMT)                  | O...OOO | GMT-8, GMT+5:30, GMT+0            |       |\n * |                                 | OOOO    | GMT-08:00, GMT+05:30, GMT+00:00   | 2     |\n * | Timezone (specific non-locat.)  | z...zzz | GMT-8, GMT+5:30, GMT+0            | 6     |\n * |                                 | zzzz    | GMT-08:00, GMT+05:30, GMT+00:00   | 2,6   |\n * | Seconds timestamp               | t       | 512969520                         | 7     |\n * |                                 | tt      | ...                               | 3,7   |\n * | Milliseconds timestamp          | T       | 512969520900                      | 7     |\n * |                                 | TT      | ...                               | 3,7   |\n * | Long localized date             | P       | 04/29/1453                        | 7     |\n * |                                 | PP      | Apr 29, 1453                      | 7     |\n * |                                 | PPP     | April 29th, 1453                  | 7     |\n * |                                 | PPPP    | Friday, April 29th, 1453          | 2,7   |\n * | Long localized time             | p       | 12:00 AM                          | 7     |\n * |                                 | pp      | 12:00:00 AM                       | 7     |\n * |                                 | ppp     | 12:00:00 AM GMT+2                 | 7     |\n * |                                 | pppp    | 12:00:00 AM GMT+02:00             | 2,7   |\n * | Combination of date and time    | Pp      | 04/29/1453, 12:00 AM              | 7     |\n * |                                 | PPpp    | Apr 29, 1453, 12:00:00 AM         | 7     |\n * |                                 | PPPppp  | April 29th, 1453 at ...           | 7     |\n * |                                 | PPPPpppp| Friday, April 29th, 1453 at ...   | 2,7   |\n * Notes:\n * 1. \"Formatting\" units (e.g. formatting quarter) in the default en-US locale\n *    are the same as \"stand-alone\" units, but are different in some languages.\n *    \"Formatting\" units are declined according to the rules of the language\n *    in the context of a date. \"Stand-alone\" units are always nominative singular:\n *\n *    `format(new Date(2017, 10, 6), 'do LLLL', {locale: cs}) //=> '6. listopad'`\n *\n *    `format(new Date(2017, 10, 6), 'do MMMM', {locale: cs}) //=> '6. listopadu'`\n *\n * 2. Any sequence of the identical letters is a pattern, unless it is escaped by\n *    the single quote characters (see below).\n *    If the sequence is longer than listed in table (e.g. `EEEEEEEEEEE`)\n *    the output will be the same as default pattern for this unit, usually\n *    the longest one (in case of ISO weekdays, `EEEE`). Default patterns for units\n *    are marked with \"2\" in the last column of the table.\n *\n *    `format(new Date(2017, 10, 6), 'MMM') //=> 'Nov'`\n *\n *    `format(new Date(2017, 10, 6), 'MMMM') //=> 'November'`\n *\n *    `format(new Date(2017, 10, 6), 'MMMMM') //=> 'N'`\n *\n *    `format(new Date(2017, 10, 6), 'MMMMMM') //=> 'November'`\n *\n *    `format(new Date(2017, 10, 6), 'MMMMMMM') //=> 'November'`\n *\n * 3. Some patterns could be unlimited length (such as `yyyyyyyy`).\n *    The output will be padded with zeros to match the length of the pattern.\n *\n *    `format(new Date(2017, 10, 6), 'yyyyyyyy') //=> '00002017'`\n *\n * 4. `QQQQQ` and `qqqqq` could be not strictly numerical in some locales.\n *    These tokens represent the shortest form of the quarter.\n *\n * 5. The main difference between `y` and `u` patterns are B.C. years:\n *\n *    | Year | `y` | `u` |\n *    |------|-----|-----|\n *    | AC 1 |   1 |   1 |\n *    | BC 1 |   1 |   0 |\n *    | BC 2 |   2 |  -1 |\n *\n *    Also `yy` always returns the last two digits of a year,\n *    while `uu` pads single digit years to 2 characters and returns other years unchanged:\n *\n *    | Year | `yy` | `uu` |\n *    |------|------|------|\n *    | 1    |   01 |   01 |\n *    | 14   |   14 |   14 |\n *    | 376  |   76 |  376 |\n *    | 1453 |   53 | 1453 |\n *\n *    The same difference is true for local and ISO week-numbering years (`Y` and `R`),\n *    except local week-numbering years are dependent on `options.weekStartsOn`\n *    and `options.firstWeekContainsDate` (compare [getISOWeekYear](https://date-fns.org/docs/getISOWeekYear)\n *    and [getWeekYear](https://date-fns.org/docs/getWeekYear)).\n *\n * 6. Specific non-location timezones are currently unavailable in `date-fns`,\n *    so right now these tokens fall back to GMT timezones.\n *\n * 7. These patterns are not in the Unicode Technical Standard #35:\n *    - `i`: ISO day of week\n *    - `I`: ISO week of year\n *    - `R`: ISO week-numbering year\n *    - `t`: seconds timestamp\n *    - `T`: milliseconds timestamp\n *    - `o`: ordinal number modifier\n *    - `P`: long localized date\n *    - `p`: long localized time\n *\n * 8. `YY` and `YYYY` tokens represent week-numbering years but they are often confused with years.\n *    You should enable `options.useAdditionalWeekYearTokens` to use them. See: https://github.com/date-fns/date-fns/blob/master/docs/unicodeTokens.md\n *\n * 9. `D` and `DD` tokens represent days of the year but they are often confused with days of the month.\n *    You should enable `options.useAdditionalDayOfYearTokens` to use them. See: https://github.com/date-fns/date-fns/blob/master/docs/unicodeTokens.md\n *\n * @typeParam DateType - The `Date` type, the function operates on. Gets inferred from passed arguments. Allows to use extensions like [`UTCDate`](https://github.com/date-fns/utc).\n *\n * @param date - The original date\n * @param format - The string of tokens\n * @param options - An object with options\n *\n * @returns The formatted date string\n *\n * @throws `date` must not be Invalid Date\n * @throws `options.locale` must contain `localize` property\n * @throws `options.locale` must contain `formatLong` property\n * @throws use `yyyy` instead of `YYYY` for formatting years using [format provided] to the input [input provided]; see: https://github.com/date-fns/date-fns/blob/master/docs/unicodeTokens.md\n * @throws use `yy` instead of `YY` for formatting years using [format provided] to the input [input provided]; see: https://github.com/date-fns/date-fns/blob/master/docs/unicodeTokens.md\n * @throws use `d` instead of `D` for formatting days of the month using [format provided] to the input [input provided]; see: https://github.com/date-fns/date-fns/blob/master/docs/unicodeTokens.md\n * @throws use `dd` instead of `DD` for formatting days of the month using [format provided] to the input [input provided]; see: https://github.com/date-fns/date-fns/blob/master/docs/unicodeTokens.md\n * @throws format string contains an unescaped latin alphabet character\n *\n * @example\n * // Represent 11 February 2014 in middle-endian format:\n * const result = format(new Date(2014, 1, 11), 'MM/dd/yyyy')\n * //=> '02/11/2014'\n *\n * @example\n * // Represent 2 July 2014 in Esperanto:\n * import { eoLocale } from 'date-fns/locale/eo'\n * const result = format(new Date(2014, 6, 2), \"do 'de' MMMM yyyy\", {\n *   locale: eoLocale\n * })\n * //=> '2-a de julio 2014'\n *\n * @example\n * // Escape string by single quote characters:\n * const result = format(new Date(2014, 6, 2, 15), \"h 'o''clock'\")\n * //=> \"3 o'clock\"\n */\nexport function format(date, formatStr, options) {\n  const defaultOptions = getDefaultOptions();\n  const locale = options?.locale ?? defaultOptions.locale ?? defaultLocale;\n\n  const firstWeekContainsDate =\n    options?.firstWeekContainsDate ??\n    options?.locale?.options?.firstWeekContainsDate ??\n    defaultOptions.firstWeekContainsDate ??\n    defaultOptions.locale?.options?.firstWeekContainsDate ??\n    1;\n\n  const weekStartsOn =\n    options?.weekStartsOn ??\n    options?.locale?.options?.weekStartsOn ??\n    defaultOptions.weekStartsOn ??\n    defaultOptions.locale?.options?.weekStartsOn ??\n    0;\n\n  const originalDate = toDate(date);\n\n  if (!isValid(originalDate)) {\n    throw new RangeError(\"Invalid time value\");\n  }\n\n  let parts = formatStr\n    .match(longFormattingTokensRegExp)\n    .map((substring) => {\n      const firstCharacter = substring[0];\n      if (firstCharacter === \"p\" || firstCharacter === \"P\") {\n        const longFormatter = longFormatters[firstCharacter];\n        return longFormatter(substring, locale.formatLong);\n      }\n      return substring;\n    })\n    .join(\"\")\n    .match(formattingTokensRegExp)\n    .map((substring) => {\n      // Replace two single quote characters with one single quote character\n      if (substring === \"''\") {\n        return { isToken: false, value: \"'\" };\n      }\n\n      const firstCharacter = substring[0];\n      if (firstCharacter === \"'\") {\n        return { isToken: false, value: cleanEscapedString(substring) };\n      }\n\n      if (formatters[firstCharacter]) {\n        return { isToken: true, value: substring };\n      }\n\n      if (firstCharacter.match(unescapedLatinCharacterRegExp)) {\n        throw new RangeError(\n          \"Format string contains an unescaped latin alphabet character `\" +\n            firstCharacter +\n            \"`\",\n        );\n      }\n\n      return { isToken: false, value: substring };\n    });\n\n  // invoke localize preprocessor (only for french locales at the moment)\n  if (locale.localize.preprocessor) {\n    parts = locale.localize.preprocessor(originalDate, parts);\n  }\n\n  const formatterOptions = {\n    firstWeekContainsDate,\n    weekStartsOn,\n    locale,\n  };\n\n  return parts\n    .map((part) => {\n      if (!part.isToken) return part.value;\n\n      const token = part.value;\n\n      if (\n        (!options?.useAdditionalWeekYearTokens &&\n          isProtectedWeekYearToken(token)) ||\n        (!options?.useAdditionalDayOfYearTokens &&\n          isProtectedDayOfYearToken(token))\n      ) {\n        warnOrThrowProtectedError(token, formatStr, String(date));\n      }\n\n      const formatter = formatters[token[0]];\n      return formatter(originalDate, token, locale.localize, formatterOptions);\n    })\n    .join(\"\");\n}\n\nfunction cleanEscapedString(input) {\n  const matched = input.match(escapedStringRegExp);\n\n  if (!matched) {\n    return input;\n  }\n\n  return matched[1].replace(doubleQuoteRegExp, \"'\");\n}\n\n// Fallback for modularized imports:\nexport default format;\n","import { transpose } from \"../../transpose.mjs\";\nimport { constructFrom } from \"../../constructFrom.mjs\";\n\nconst TIMEZONE_UNIT_PRIORITY = 10;\n\nexport class Setter {\n  subPriority = 0;\n\n  validate(_utcDate, _options) {\n    return true;\n  }\n}\n\nexport class ValueSetter extends Setter {\n  constructor(\n    value,\n\n    validateValue,\n\n    setValue,\n\n    priority,\n    subPriority,\n  ) {\n    super();\n    this.value = value;\n    this.validateValue = validateValue;\n    this.setValue = setValue;\n    this.priority = priority;\n    if (subPriority) {\n      this.subPriority = subPriority;\n    }\n  }\n\n  validate(date, options) {\n    return this.validateValue(date, this.value, options);\n  }\n\n  set(date, flags, options) {\n    return this.setValue(date, flags, this.value, options);\n  }\n}\n\nexport class DateToSystemTimezoneSetter extends Setter {\n  priority = TIMEZONE_UNIT_PRIORITY;\n  subPriority = -1;\n  set(date, flags) {\n    if (flags.timestampIsSet) return date;\n    return constructFrom(date, transpose(date, Date));\n  }\n}\n","import { constructFrom } from \"./constructFrom.mjs\";\n\n/**\n * @name transpose\n * @category Generic Helpers\n * @summary Transpose the date to the given constructor.\n *\n * @description\n * The function transposes the date to the given constructor. It helps you\n * to transpose the date in the system time zone to say `UTCDate` or any other\n * date extension.\n *\n * @typeParam DateInputType - The input `Date` type derived from the passed argument.\n * @typeParam DateOutputType - The output `Date` type derived from the passed constructor.\n *\n * @param fromDate - The date to use values from\n * @param constructor - The date constructor to use\n *\n * @returns Date transposed to the given constructor\n *\n * @example\n * // Create July 10, 2022 00:00 in locale time zone\n * const date = new Date(2022, 6, 10)\n * //=> 'Sun Jul 10 2022 00:00:00 GMT+0800 (Singapore Standard Time)'\n *\n * @example\n * // Transpose the date to July 10, 2022 00:00 in UTC\n * transpose(date, UTCDate)\n * //=> 'Sun Jul 10 2022 00:00:00 GMT+0000 (Coordinated Universal Time)'\n */\nexport function transpose(fromDate, constructor) {\n  const date =\n    constructor instanceof Date\n      ? constructFrom(constructor, 0)\n      : new constructor(0);\n  date.setFullYear(\n    fromDate.getFullYear(),\n    fromDate.getMonth(),\n    fromDate.getDate(),\n  );\n  date.setHours(\n    fromDate.getHours(),\n    fromDate.getMinutes(),\n    fromDate.getSeconds(),\n    fromDate.getMilliseconds(),\n  );\n  return date;\n}\n\n// Fallback for modularized imports:\nexport default transpose;\n","import { ValueSetter } from \"./Setter.mjs\";\n\nexport class Parser {\n  run(dateString, token, match, options) {\n    const result = this.parse(dateString, token, match, options);\n    if (!result) {\n      return null;\n    }\n\n    return {\n      setter: new ValueSetter(\n        result.value,\n        this.validate,\n        this.set,\n        this.priority,\n        this.subPriority,\n      ),\n      rest: result.rest,\n    };\n  }\n\n  validate(_utcDate, _value, _options) {\n    return true;\n  }\n}\n","export const numericPatterns = {\n  month: /^(1[0-2]|0?\\d)/, // 0 to 12\n  date: /^(3[0-1]|[0-2]?\\d)/, // 0 to 31\n  dayOfYear: /^(36[0-6]|3[0-5]\\d|[0-2]?\\d?\\d)/, // 0 to 366\n  week: /^(5[0-3]|[0-4]?\\d)/, // 0 to 53\n  hour23h: /^(2[0-3]|[0-1]?\\d)/, // 0 to 23\n  hour24h: /^(2[0-4]|[0-1]?\\d)/, // 0 to 24\n  hour11h: /^(1[0-1]|0?\\d)/, // 0 to 11\n  hour12h: /^(1[0-2]|0?\\d)/, // 0 to 12\n  minute: /^[0-5]?\\d/, // 0 to 59\n  second: /^[0-5]?\\d/, // 0 to 59\n\n  singleDigit: /^\\d/, // 0 to 9\n  twoDigits: /^\\d{1,2}/, // 0 to 99\n  threeDigits: /^\\d{1,3}/, // 0 to 999\n  fourDigits: /^\\d{1,4}/, // 0 to 9999\n\n  anyDigitsSigned: /^-?\\d+/,\n  singleDigitSigned: /^-?\\d/, // 0 to 9, -0 to -9\n  twoDigitsSigned: /^-?\\d{1,2}/, // 0 to 99, -0 to -99\n  threeDigitsSigned: /^-?\\d{1,3}/, // 0 to 999, -0 to -999\n  fourDigitsSigned: /^-?\\d{1,4}/, // 0 to 9999, -0 to -9999\n};\n\nexport const timezonePatterns = {\n  basicOptionalMinutes: /^([+-])(\\d{2})(\\d{2})?|Z/,\n  basic: /^([+-])(\\d{2})(\\d{2})|Z/,\n  basicOptionalSeconds: /^([+-])(\\d{2})(\\d{2})((\\d{2}))?|Z/,\n  extended: /^([+-])(\\d{2}):(\\d{2})|Z/,\n  extendedOptionalSeconds: /^([+-])(\\d{2}):(\\d{2})(:(\\d{2}))?|Z/,\n};\n","import {\n  millisecondsInHour,\n  millisecondsInMinute,\n  millisecondsInSecond,\n} from \"../../constants.mjs\";\nimport { numericPatterns } from \"./constants.mjs\";\n\nexport function mapValue(parseFnResult, mapFn) {\n  if (!parseFnResult) {\n    return parseFnResult;\n  }\n\n  return {\n    value: mapFn(parseFnResult.value),\n    rest: parseFnResult.rest,\n  };\n}\n\nexport function parseNumericPattern(pattern, dateString) {\n  const matchResult = dateString.match(pattern);\n\n  if (!matchResult) {\n    return null;\n  }\n\n  return {\n    value: parseInt(matchResult[0], 10),\n    rest: dateString.slice(matchResult[0].length),\n  };\n}\n\nexport function parseTimezonePattern(pattern, dateString) {\n  const matchResult = dateString.match(pattern);\n\n  if (!matchResult) {\n    return null;\n  }\n\n  // Input is 'Z'\n  if (matchResult[0] === \"Z\") {\n    return {\n      value: 0,\n      rest: dateString.slice(1),\n    };\n  }\n\n  const sign = matchResult[1] === \"+\" ? 1 : -1;\n  const hours = matchResult[2] ? parseInt(matchResult[2], 10) : 0;\n  const minutes = matchResult[3] ? parseInt(matchResult[3], 10) : 0;\n  const seconds = matchResult[5] ? parseInt(matchResult[5], 10) : 0;\n\n  return {\n    value:\n      sign *\n      (hours * millisecondsInHour +\n        minutes * millisecondsInMinute +\n        seconds * millisecondsInSecond),\n    rest: dateString.slice(matchResult[0].length),\n  };\n}\n\nexport function parseAnyDigitsSigned(dateString) {\n  return parseNumericPattern(numericPatterns.anyDigitsSigned, dateString);\n}\n\nexport function parseNDigits(n, dateString) {\n  switch (n) {\n    case 1:\n      return parseNumericPattern(numericPatterns.singleDigit, dateString);\n    case 2:\n      return parseNumericPattern(numericPatterns.twoDigits, dateString);\n    case 3:\n      return parseNumericPattern(numericPatterns.threeDigits, dateString);\n    case 4:\n      return parseNumericPattern(numericPatterns.fourDigits, dateString);\n    default:\n      return parseNumericPattern(new RegExp(\"^\\\\d{1,\" + n + \"}\"), dateString);\n  }\n}\n\nexport function parseNDigitsSigned(n, dateString) {\n  switch (n) {\n    case 1:\n      return parseNumericPattern(numericPatterns.singleDigitSigned, dateString);\n    case 2:\n      return parseNumericPattern(numericPatterns.twoDigitsSigned, dateString);\n    case 3:\n      return parseNumericPattern(numericPatterns.threeDigitsSigned, dateString);\n    case 4:\n      return parseNumericPattern(numericPatterns.fourDigitsSigned, dateString);\n    default:\n      return parseNumericPattern(new RegExp(\"^-?\\\\d{1,\" + n + \"}\"), dateString);\n  }\n}\n\nexport function dayPeriodEnumToHours(dayPeriod) {\n  switch (dayPeriod) {\n    case \"morning\":\n      return 4;\n    case \"evening\":\n      return 17;\n    case \"pm\":\n    case \"noon\":\n    case \"afternoon\":\n      return 12;\n    case \"am\":\n    case \"midnight\":\n    case \"night\":\n    default:\n      return 0;\n  }\n}\n\nexport function normalizeTwoDigitYear(twoDigitYear, currentYear) {\n  const isCommonEra = currentYear > 0;\n  // Absolute number of the current year:\n  // 1 -> 1 AC\n  // 0 -> 1 BC\n  // -1 -> 2 BC\n  const absCurrentYear = isCommonEra ? currentYear : 1 - currentYear;\n\n  let result;\n  if (absCurrentYear <= 50) {\n    result = twoDigitYear || 100;\n  } else {\n    const rangeEnd = absCurrentYear + 50;\n    const rangeEndCentury = Math.trunc(rangeEnd / 100) * 100;\n    const isPreviousCentury = twoDigitYear >= rangeEnd % 100;\n    result = twoDigitYear + rangeEndCentury - (isPreviousCentury ? 100 : 0);\n  }\n\n  return isCommonEra ? result : 1 - result;\n}\n\nexport function isLeapYearIndex(year) {\n  return year % 400 === 0 || (year % 4 === 0 && year % 100 !== 0);\n}\n","import { numericPatterns } from \"../constants.mjs\";\nimport { Parser } from \"../Parser.mjs\";\nimport {\n  isLeapYearIndex,\n  parseNDigits,\n  parseNumericPattern,\n} from \"../utils.mjs\";\n\nconst DAYS_IN_MONTH = [31, 28, 31, 30, 31, 30, 31, 31, 30, 31, 30, 31];\nconst DAYS_IN_MONTH_LEAP_YEAR = [\n  31, 29, 31, 30, 31, 30, 31, 31, 30, 31, 30, 31,\n];\n\n// Day of the month\nexport class DateParser extends Parser {\n  priority = 90;\n  subPriority = 1;\n\n  parse(dateString, token, match) {\n    switch (token) {\n      case \"d\":\n        return parseNumericPattern(numericPatterns.date, dateString);\n      case \"do\":\n        return match.ordinalNumber(dateString, { unit: \"date\" });\n      default:\n        return parseNDigits(token.length, dateString);\n    }\n  }\n\n  validate(date, value) {\n    const year = date.getFullYear();\n    const isLeapYear = isLeapYearIndex(year);\n    const month = date.getMonth();\n    if (isLeapYear) {\n      return value >= 1 && value <= DAYS_IN_MONTH_LEAP_YEAR[month];\n    } else {\n      return value >= 1 && value <= DAYS_IN_MONTH[month];\n    }\n  }\n\n  set(date, _flags, value) {\n    date.setDate(value);\n    date.setHours(0, 0, 0, 0);\n    return date;\n  }\n\n  incompatibleTokens = [\n    \"Y\",\n    \"R\",\n    \"q\",\n    \"Q\",\n    \"w\",\n    \"I\",\n    \"D\",\n    \"i\",\n    \"e\",\n    \"c\",\n    \"t\",\n    \"T\",\n  ];\n}\n","import { toDate } from \"./toDate.mjs\";\nimport { constructFrom } from \"./constructFrom.mjs\";\n\n/**\n * @name addDays\n * @category Day Helpers\n * @summary Add the specified number of days to the given date.\n *\n * @description\n * Add the specified number of days to the given date.\n *\n * @typeParam DateType - The `Date` type, the function operates on. Gets inferred from passed arguments. Allows to use extensions like [`UTCDate`](https://github.com/date-fns/utc).\n *\n * @param date - The date to be changed\n * @param amount - The amount of days to be added.\n *\n * @returns The new date with the days added\n *\n * @example\n * // Add 10 days to 1 September 2014:\n * const result = addDays(new Date(2014, 8, 1), 10)\n * //=> Thu Sep 11 2014 00:00:00\n */\nexport function addDays(date, amount) {\n  const _date = toDate(date);\n  if (isNaN(amount)) return constructFrom(date, NaN);\n  if (!amount) {\n    // If 0 days, no-op to avoid changing times in the hour before end of DST\n    return _date;\n  }\n  _date.setDate(_date.getDate() + amount);\n  return _date;\n}\n\n// Fallback for modularized imports:\nexport default addDays;\n","import { addDays } from \"./addDays.mjs\";\nimport { toDate } from \"./toDate.mjs\";\nimport { getDefaultOptions } from \"./_lib/defaultOptions.mjs\";\n\n/**\n * The {@link setDay} function options.\n */\n\n/**\n * @name setDay\n * @category Weekday Helpers\n * @summary Set the day of the week to the given date.\n *\n * @description\n * Set the day of the week to the given date.\n *\n * @typeParam DateType - The `Date` type, the function operates on. Gets inferred from passed arguments. Allows to use extensions like [`UTCDate`](https://github.com/date-fns/utc).\n *\n * @param date - The date to be changed\n * @param day - The day of the week of the new date\n * @param options - An object with options.\n *\n * @returns The new date with the day of the week set\n *\n * @example\n * // Set week day to Sunday, with the default weekStartsOn of Sunday:\n * const result = setDay(new Date(2014, 8, 1), 0)\n * //=> Sun Aug 31 2014 00:00:00\n *\n * @example\n * // Set week day to Sunday, with a weekStartsOn of Monday:\n * const result = setDay(new Date(2014, 8, 1), 0, { weekStartsOn: 1 })\n * //=> Sun Sep 07 2014 00:00:00\n */\nexport function setDay(date, day, options) {\n  const defaultOptions = getDefaultOptions();\n  const weekStartsOn =\n    options?.weekStartsOn ??\n    options?.locale?.options?.weekStartsOn ??\n    defaultOptions.weekStartsOn ??\n    defaultOptions.locale?.options?.weekStartsOn ??\n    0;\n\n  const _date = toDate(date);\n  const currentDay = _date.getDay();\n\n  const remainder = day % 7;\n  const dayIndex = (remainder + 7) % 7;\n\n  const delta = 7 - weekStartsOn;\n  const diff =\n    day < 0 || day > 6\n      ? day - ((currentDay + delta) % 7)\n      : ((dayIndex + delta) % 7) - ((currentDay + delta) % 7);\n  return addDays(_date, diff);\n}\n\n// Fallback for modularized imports:\nexport default setDay;\n","import { addDays } from \"./addDays.mjs\";\nimport { getISODay } from \"./getISODay.mjs\";\nimport { toDate } from \"./toDate.mjs\";\n\n/**\n * @name setISODay\n * @category Weekday Helpers\n * @summary Set the day of the ISO week to the given date.\n *\n * @description\n * Set the day of the ISO week to the given date.\n * ISO week starts with Monday.\n * 7 is the index of Sunday, 1 is the index of Monday etc.\n *\n * @typeParam DateType - The `Date` type, the function operates on. Gets inferred from passed arguments. Allows to use extensions like [`UTCDate`](https://github.com/date-fns/utc).\n *\n * @param date - The date to be changed\n * @param day - The day of the ISO week of the new date\n *\n * @returns The new date with the day of the ISO week set\n *\n * @example\n * // Set Sunday to 1 September 2014:\n * const result = setISODay(new Date(2014, 8, 1), 7)\n * //=> Sun Sep 07 2014 00:00:00\n */\nexport function setISODay(date, day) {\n  const _date = toDate(date);\n  const currentDay = getISODay(_date);\n  const diff = day - currentDay;\n  return addDays(_date, diff);\n}\n\n// Fallback for modularized imports:\nexport default setISODay;\n","import { toDate } from \"./toDate.mjs\";\n\n/**\n * @name getISODay\n * @category Weekday Helpers\n * @summary Get the day of the ISO week of the given date.\n *\n * @description\n * Get the day of the ISO week of the given date,\n * which is 7 for Sunday, 1 for Monday etc.\n *\n * ISO week-numbering year: http://en.wikipedia.org/wiki/ISO_week_date\n *\n * @typeParam DateType - The `Date` type, the function operates on. Gets inferred from passed arguments. Allows to use extensions like [`UTCDate`](https://github.com/date-fns/utc).\n *\n * @param date - The given date\n *\n * @returns The day of ISO week\n *\n * @example\n * // Which day of the ISO week is 26 February 2012?\n * const result = getISODay(new Date(2012, 1, 26))\n * //=> 7\n */\nexport function getISODay(date) {\n  const _date = toDate(date);\n  let day = _date.getDay();\n\n  if (day === 0) {\n    day = 7;\n  }\n\n  return day;\n}\n\n// Fallback for modularized imports:\nexport default getISODay;\n","import { EraParser } from \"./parsers/EraParser.mjs\";\nimport { YearParser } from \"./parsers/YearParser.mjs\";\nimport { LocalWeekYearParser } from \"./parsers/LocalWeekYearParser.mjs\";\nimport { ISOWeekYearParser } from \"./parsers/ISOWeekYearParser.mjs\";\nimport { ExtendedYearParser } from \"./parsers/ExtendedYearParser.mjs\";\nimport { QuarterParser } from \"./parsers/QuarterParser.mjs\";\nimport { StandAloneQuarterParser } from \"./parsers/StandAloneQuarterParser.mjs\";\nimport { MonthParser } from \"./parsers/MonthParser.mjs\";\nimport { StandAloneMonthParser } from \"./parsers/StandAloneMonthParser.mjs\";\nimport { LocalWeekParser } from \"./parsers/LocalWeekParser.mjs\";\nimport { ISOWeekParser } from \"./parsers/ISOWeekParser.mjs\";\nimport { DateParser } from \"./parsers/DateParser.mjs\";\nimport { DayOfYearParser } from \"./parsers/DayOfYearParser.mjs\";\nimport { DayParser } from \"./parsers/DayParser.mjs\";\nimport { LocalDayParser } from \"./parsers/LocalDayParser.mjs\";\nimport { StandAloneLocalDayParser } from \"./parsers/StandAloneLocalDayParser.mjs\";\nimport { ISODayParser } from \"./parsers/ISODayParser.mjs\";\nimport { AMPMParser } from \"./parsers/AMPMParser.mjs\";\nimport { AMPMMidnightParser } from \"./parsers/AMPMMidnightParser.mjs\";\nimport { DayPeriodParser } from \"./parsers/DayPeriodParser.mjs\";\nimport { Hour1to12Parser } from \"./parsers/Hour1to12Parser.mjs\";\nimport { Hour0to23Parser } from \"./parsers/Hour0to23Parser.mjs\";\nimport { Hour0To11Parser } from \"./parsers/Hour0To11Parser.mjs\";\nimport { Hour1To24Parser } from \"./parsers/Hour1To24Parser.mjs\";\nimport { MinuteParser } from \"./parsers/MinuteParser.mjs\";\nimport { SecondParser } from \"./parsers/SecondParser.mjs\";\nimport { FractionOfSecondParser } from \"./parsers/FractionOfSecondParser.mjs\";\nimport { ISOTimezoneWithZParser } from \"./parsers/ISOTimezoneWithZParser.mjs\";\nimport { ISOTimezoneParser } from \"./parsers/ISOTimezoneParser.mjs\";\nimport { TimestampSecondsParser } from \"./parsers/TimestampSecondsParser.mjs\";\nimport { TimestampMillisecondsParser } from \"./parsers/TimestampMillisecondsParser.mjs\";\n\n/*\n * |     | Unit                           |     | Unit                           |\n * |-----|--------------------------------|-----|--------------------------------|\n * |  a  | AM, PM                         |  A* | Milliseconds in day            |\n * |  b  | AM, PM, noon, midnight         |  B  | Flexible day period            |\n * |  c  | Stand-alone local day of week  |  C* | Localized hour w/ day period   |\n * |  d  | Day of month                   |  D  | Day of year                    |\n * |  e  | Local day of week              |  E  | Day of week                    |\n * |  f  |                                |  F* | Day of week in month           |\n * |  g* | Modified Julian day            |  G  | Era                            |\n * |  h  | Hour [1-12]                    |  H  | Hour [0-23]                    |\n * |  i! | ISO day of week                |  I! | ISO week of year               |\n * |  j* | Localized hour w/ day period   |  J* | Localized hour w/o day period  |\n * |  k  | Hour [1-24]                    |  K  | Hour [0-11]                    |\n * |  l* | (deprecated)                   |  L  | Stand-alone month              |\n * |  m  | Minute                         |  M  | Month                          |\n * |  n  |                                |  N  |                                |\n * |  o! | Ordinal number modifier        |  O* | Timezone (GMT)                 |\n * |  p  |                                |  P  |                                |\n * |  q  | Stand-alone quarter            |  Q  | Quarter                        |\n * |  r* | Related Gregorian year         |  R! | ISO week-numbering year        |\n * |  s  | Second                         |  S  | Fraction of second             |\n * |  t! | Seconds timestamp              |  T! | Milliseconds timestamp         |\n * |  u  | Extended year                  |  U* | Cyclic year                    |\n * |  v* | Timezone (generic non-locat.)  |  V* | Timezone (location)            |\n * |  w  | Local week of year             |  W* | Week of month                  |\n * |  x  | Timezone (ISO-8601 w/o Z)      |  X  | Timezone (ISO-8601)            |\n * |  y  | Year (abs)                     |  Y  | Local week-numbering year      |\n * |  z* | Timezone (specific non-locat.) |  Z* | Timezone (aliases)             |\n *\n * Letters marked by * are not implemented but reserved by Unicode standard.\n *\n * Letters marked by ! are non-standard, but implemented by date-fns:\n * - `o` modifies the previous token to turn it into an ordinal (see `parse` docs)\n * - `i` is ISO day of week. For `i` and `ii` is returns numeric ISO week days,\n *   i.e. 7 for Sunday, 1 for Monday, etc.\n * - `I` is ISO week of year, as opposed to `w` which is local week of year.\n * - `R` is ISO week-numbering year, as opposed to `Y` which is local week-numbering year.\n *   `R` is supposed to be used in conjunction with `I` and `i`\n *   for universal ISO week-numbering date, whereas\n *   `Y` is supposed to be used in conjunction with `w` and `e`\n *   for week-numbering date specific to the locale.\n */\n// eslint-disable-next-line @typescript-eslint/no-explicit-any -- It's ok, we want any here\nexport const parsers = {\n  G: new EraParser(),\n  y: new YearParser(),\n  Y: new LocalWeekYearParser(),\n  R: new ISOWeekYearParser(),\n  u: new ExtendedYearParser(),\n  Q: new QuarterParser(),\n  q: new StandAloneQuarterParser(),\n  M: new MonthParser(),\n  L: new StandAloneMonthParser(),\n  w: new LocalWeekParser(),\n  I: new ISOWeekParser(),\n  d: new DateParser(),\n  D: new DayOfYearParser(),\n  E: new DayParser(),\n  e: new LocalDayParser(),\n  c: new StandAloneLocalDayParser(),\n  i: new ISODayParser(),\n  a: new AMPMParser(),\n  b: new AMPMMidnightParser(),\n  B: new DayPeriodParser(),\n  h: new Hour1to12Parser(),\n  H: new Hour0to23Parser(),\n  K: new Hour0To11Parser(),\n  k: new Hour1To24Parser(),\n  m: new MinuteParser(),\n  s: new SecondParser(),\n  S: new FractionOfSecondParser(),\n  X: new ISOTimezoneWithZParser(),\n  x: new ISOTimezoneParser(),\n  t: new TimestampSecondsParser(),\n  T: new TimestampMillisecondsParser(),\n};\n","import { Parser } from \"../Parser.mjs\";\n\nexport class EraParser extends Parser {\n  priority = 140;\n\n  parse(dateString, token, match) {\n    switch (token) {\n      // AD, BC\n      case \"G\":\n      case \"GG\":\n      case \"GGG\":\n        return (\n          match.era(dateString, { width: \"abbreviated\" }) ||\n          match.era(dateString, { width: \"narrow\" })\n        );\n\n      // A, B\n      case \"GGGGG\":\n        return match.era(dateString, { width: \"narrow\" });\n      // Anno Domini, Before Christ\n      case \"GGGG\":\n      default:\n        return (\n          match.era(dateString, { width: \"wide\" }) ||\n          match.era(dateString, { width: \"abbreviated\" }) ||\n          match.era(dateString, { width: \"narrow\" })\n        );\n    }\n  }\n\n  set(date, flags, value) {\n    flags.era = value;\n    date.setFullYear(value, 0, 1);\n    date.setHours(0, 0, 0, 0);\n    return date;\n  }\n\n  incompatibleTokens = [\"R\", \"u\", \"t\", \"T\"];\n}\n","import { Parser } from \"../Parser.mjs\";\nimport { mapValue, normalizeTwoDigitYear, parseNDigits } from \"../utils.mjs\";\n\n// From http://www.unicode.org/reports/tr35/tr35-31/tr35-dates.html#Date_Format_Patterns\n// | Year     |     y | yy |   yyy |  yyyy | yyyyy |\n// |----------|-------|----|-------|-------|-------|\n// | AD 1     |     1 | 01 |   001 |  0001 | 00001 |\n// | AD 12    |    12 | 12 |   012 |  0012 | 00012 |\n// | AD 123   |   123 | 23 |   123 |  0123 | 00123 |\n// | AD 1234  |  1234 | 34 |  1234 |  1234 | 01234 |\n// | AD 12345 | 12345 | 45 | 12345 | 12345 | 12345 |\nexport class YearParser extends Parser {\n  priority = 130;\n  incompatibleTokens = [\"Y\", \"R\", \"u\", \"w\", \"I\", \"i\", \"e\", \"c\", \"t\", \"T\"];\n\n  parse(dateString, token, match) {\n    const valueCallback = (year) => ({\n      year,\n      isTwoDigitYear: token === \"yy\",\n    });\n\n    switch (token) {\n      case \"y\":\n        return mapValue(parseNDigits(4, dateString), valueCallback);\n      case \"yo\":\n        return mapValue(\n          match.ordinalNumber(dateString, {\n            unit: \"year\",\n          }),\n          valueCallback,\n        );\n      default:\n        return mapValue(parseNDigits(token.length, dateString), valueCallback);\n    }\n  }\n\n  validate(_date, value) {\n    return value.isTwoDigitYear || value.year > 0;\n  }\n\n  set(date, flags, value) {\n    const currentYear = date.getFullYear();\n\n    if (value.isTwoDigitYear) {\n      const normalizedTwoDigitYear = normalizeTwoDigitYear(\n        value.year,\n        currentYear,\n      );\n      date.setFullYear(normalizedTwoDigitYear, 0, 1);\n      date.setHours(0, 0, 0, 0);\n      return date;\n    }\n\n    const year =\n      !(\"era\" in flags) || flags.era === 1 ? value.year : 1 - value.year;\n    date.setFullYear(year, 0, 1);\n    date.setHours(0, 0, 0, 0);\n    return date;\n  }\n}\n","import { getWeekYear } from \"../../../getWeekYear.mjs\";\nimport { startOfWeek } from \"../../../startOfWeek.mjs\";\nimport { Parser } from \"../Parser.mjs\";\nimport { mapValue, normalizeTwoDigitYear, parseNDigits } from \"../utils.mjs\";\n\n// Local week-numbering year\nexport class LocalWeekYearParser extends Parser {\n  priority = 130;\n\n  parse(dateString, token, match) {\n    const valueCallback = (year) => ({\n      year,\n      isTwoDigitYear: token === \"YY\",\n    });\n\n    switch (token) {\n      case \"Y\":\n        return mapValue(parseNDigits(4, dateString), valueCallback);\n      case \"Yo\":\n        return mapValue(\n          match.ordinalNumber(dateString, {\n            unit: \"year\",\n          }),\n          valueCallback,\n        );\n      default:\n        return mapValue(parseNDigits(token.length, dateString), valueCallback);\n    }\n  }\n\n  validate(_date, value) {\n    return value.isTwoDigitYear || value.year > 0;\n  }\n\n  set(date, flags, value, options) {\n    const currentYear = getWeekYear(date, options);\n\n    if (value.isTwoDigitYear) {\n      const normalizedTwoDigitYear = normalizeTwoDigitYear(\n        value.year,\n        currentYear,\n      );\n      date.setFullYear(\n        normalizedTwoDigitYear,\n        0,\n        options.firstWeekContainsDate,\n      );\n      date.setHours(0, 0, 0, 0);\n      return startOfWeek(date, options);\n    }\n\n    const year =\n      !(\"era\" in flags) || flags.era === 1 ? value.year : 1 - value.year;\n    date.setFullYear(year, 0, options.firstWeekContainsDate);\n    date.setHours(0, 0, 0, 0);\n    return startOfWeek(date, options);\n  }\n\n  incompatibleTokens = [\n    \"y\",\n    \"R\",\n    \"u\",\n    \"Q\",\n    \"q\",\n    \"M\",\n    \"L\",\n    \"I\",\n    \"d\",\n    \"D\",\n    \"i\",\n    \"t\",\n    \"T\",\n  ];\n}\n","import { startOfISOWeek } from \"../../../startOfISOWeek.mjs\";\nimport { constructFrom } from \"../../../constructFrom.mjs\";\nimport { Parser } from \"../Parser.mjs\";\nimport { parseNDigitsSigned } from \"../utils.mjs\";\n\n// ISO week-numbering year\nexport class ISOWeekYearParser extends Parser {\n  priority = 130;\n\n  parse(dateString, token) {\n    if (token === \"R\") {\n      return parseNDigitsSigned(4, dateString);\n    }\n\n    return parseNDigitsSigned(token.length, dateString);\n  }\n\n  set(date, _flags, value) {\n    const firstWeekOfYear = constructFrom(date, 0);\n    firstWeekOfYear.setFullYear(value, 0, 4);\n    firstWeekOfYear.setHours(0, 0, 0, 0);\n    return startOfISOWeek(firstWeekOfYear);\n  }\n\n  incompatibleTokens = [\n    \"G\",\n    \"y\",\n    \"Y\",\n    \"u\",\n    \"Q\",\n    \"q\",\n    \"M\",\n    \"L\",\n    \"w\",\n    \"d\",\n    \"D\",\n    \"e\",\n    \"c\",\n    \"t\",\n    \"T\",\n  ];\n}\n","import { Parser } from \"../Parser.mjs\";\nimport { parseNDigitsSigned } from \"../utils.mjs\";\n\nexport class ExtendedYearParser extends Parser {\n  priority = 130;\n\n  parse(dateString, token) {\n    if (token === \"u\") {\n      return parseNDigitsSigned(4, dateString);\n    }\n\n    return parseNDigitsSigned(token.length, dateString);\n  }\n\n  set(date, _flags, value) {\n    date.setFullYear(value, 0, 1);\n    date.setHours(0, 0, 0, 0);\n    return date;\n  }\n\n  incompatibleTokens = [\"G\", \"y\", \"Y\", \"R\", \"w\", \"I\", \"i\", \"e\", \"c\", \"t\", \"T\"];\n}\n","import { Parser } from \"../Parser.mjs\";\nimport { parseNDigits } from \"../utils.mjs\";\n\nexport class QuarterParser extends Parser {\n  priority = 120;\n\n  parse(dateString, token, match) {\n    switch (token) {\n      // 1, 2, 3, 4\n      case \"Q\":\n      case \"QQ\": // 01, 02, 03, 04\n        return parseNDigits(token.length, dateString);\n      // 1st, 2nd, 3rd, 4th\n      case \"Qo\":\n        return match.ordinalNumber(dateString, { unit: \"quarter\" });\n      // Q1, Q2, Q3, Q4\n      case \"QQQ\":\n        return (\n          match.quarter(dateString, {\n            width: \"abbreviated\",\n            context: \"formatting\",\n          }) ||\n          match.quarter(dateString, {\n            width: \"narrow\",\n            context: \"formatting\",\n          })\n        );\n\n      // 1, 2, 3, 4 (narrow quarter; could be not numerical)\n      case \"QQQQQ\":\n        return match.quarter(dateString, {\n          width: \"narrow\",\n          context: \"formatting\",\n        });\n      // 1st quarter, 2nd quarter, ...\n      case \"QQQQ\":\n      default:\n        return (\n          match.quarter(dateString, {\n            width: \"wide\",\n            context: \"formatting\",\n          }) ||\n          match.quarter(dateString, {\n            width: \"abbreviated\",\n            context: \"formatting\",\n          }) ||\n          match.quarter(dateString, {\n            width: \"narrow\",\n            context: \"formatting\",\n          })\n        );\n    }\n  }\n\n  validate(_date, value) {\n    return value >= 1 && value <= 4;\n  }\n\n  set(date, _flags, value) {\n    date.setMonth((value - 1) * 3, 1);\n    date.setHours(0, 0, 0, 0);\n    return date;\n  }\n\n  incompatibleTokens = [\n    \"Y\",\n    \"R\",\n    \"q\",\n    \"M\",\n    \"L\",\n    \"w\",\n    \"I\",\n    \"d\",\n    \"D\",\n    \"i\",\n    \"e\",\n    \"c\",\n    \"t\",\n    \"T\",\n  ];\n}\n","import { Parser } from \"../Parser.mjs\";\nimport { parseNDigits } from \"../utils.mjs\";\n\nexport class StandAloneQuarterParser extends Parser {\n  priority = 120;\n\n  parse(dateString, token, match) {\n    switch (token) {\n      // 1, 2, 3, 4\n      case \"q\":\n      case \"qq\": // 01, 02, 03, 04\n        return parseNDigits(token.length, dateString);\n      // 1st, 2nd, 3rd, 4th\n      case \"qo\":\n        return match.ordinalNumber(dateString, { unit: \"quarter\" });\n      // Q1, Q2, Q3, Q4\n      case \"qqq\":\n        return (\n          match.quarter(dateString, {\n            width: \"abbreviated\",\n            context: \"standalone\",\n          }) ||\n          match.quarter(dateString, {\n            width: \"narrow\",\n            context: \"standalone\",\n          })\n        );\n\n      // 1, 2, 3, 4 (narrow quarter; could be not numerical)\n      case \"qqqqq\":\n        return match.quarter(dateString, {\n          width: \"narrow\",\n          context: \"standalone\",\n        });\n      // 1st quarter, 2nd quarter, ...\n      case \"qqqq\":\n      default:\n        return (\n          match.quarter(dateString, {\n            width: \"wide\",\n            context: \"standalone\",\n          }) ||\n          match.quarter(dateString, {\n            width: \"abbreviated\",\n            context: \"standalone\",\n          }) ||\n          match.quarter(dateString, {\n            width: \"narrow\",\n            context: \"standalone\",\n          })\n        );\n    }\n  }\n\n  validate(_date, value) {\n    return value >= 1 && value <= 4;\n  }\n\n  set(date, _flags, value) {\n    date.setMonth((value - 1) * 3, 1);\n    date.setHours(0, 0, 0, 0);\n    return date;\n  }\n\n  incompatibleTokens = [\n    \"Y\",\n    \"R\",\n    \"Q\",\n    \"M\",\n    \"L\",\n    \"w\",\n    \"I\",\n    \"d\",\n    \"D\",\n    \"i\",\n    \"e\",\n    \"c\",\n    \"t\",\n    \"T\",\n  ];\n}\n","import { numericPatterns } from \"../constants.mjs\";\nimport { Parser } from \"../Parser.mjs\";\nimport { mapValue, parseNDigits, parseNumericPattern } from \"../utils.mjs\";\n\nexport class MonthParser extends Parser {\n  incompatibleTokens = [\n    \"Y\",\n    \"R\",\n    \"q\",\n    \"Q\",\n    \"L\",\n    \"w\",\n    \"I\",\n    \"D\",\n    \"i\",\n    \"e\",\n    \"c\",\n    \"t\",\n    \"T\",\n  ];\n\n  priority = 110;\n\n  parse(dateString, token, match) {\n    const valueCallback = (value) => value - 1;\n\n    switch (token) {\n      // 1, 2, ..., 12\n      case \"M\":\n        return mapValue(\n          parseNumericPattern(numericPatterns.month, dateString),\n          valueCallback,\n        );\n      // 01, 02, ..., 12\n      case \"MM\":\n        return mapValue(parseNDigits(2, dateString), valueCallback);\n      // 1st, 2nd, ..., 12th\n      case \"Mo\":\n        return mapValue(\n          match.ordinalNumber(dateString, {\n            unit: \"month\",\n          }),\n          valueCallback,\n        );\n      // Jan, Feb, ..., Dec\n      case \"MMM\":\n        return (\n          match.month(dateString, {\n            width: \"abbreviated\",\n            context: \"formatting\",\n          }) ||\n          match.month(dateString, { width: \"narrow\", context: \"formatting\" })\n        );\n\n      // J, F, ..., D\n      case \"MMMMM\":\n        return match.month(dateString, {\n          width: \"narrow\",\n          context: \"formatting\",\n        });\n      // January, February, ..., December\n      case \"MMMM\":\n      default:\n        return (\n          match.month(dateString, { width: \"wide\", context: \"formatting\" }) ||\n          match.month(dateString, {\n            width: \"abbreviated\",\n            context: \"formatting\",\n          }) ||\n          match.month(dateString, { width: \"narrow\", context: \"formatting\" })\n        );\n    }\n  }\n\n  validate(_date, value) {\n    return value >= 0 && value <= 11;\n  }\n\n  set(date, _flags, value) {\n    date.setMonth(value, 1);\n    date.setHours(0, 0, 0, 0);\n    return date;\n  }\n}\n","import { numericPatterns } from \"../constants.mjs\";\nimport { Parser } from \"../Parser.mjs\";\nimport { mapValue, parseNDigits, parseNumericPattern } from \"../utils.mjs\";\n\nexport class StandAloneMonthParser extends Parser {\n  priority = 110;\n\n  parse(dateString, token, match) {\n    const valueCallback = (value) => value - 1;\n\n    switch (token) {\n      // 1, 2, ..., 12\n      case \"L\":\n        return mapValue(\n          parseNumericPattern(numericPatterns.month, dateString),\n          valueCallback,\n        );\n      // 01, 02, ..., 12\n      case \"LL\":\n        return mapValue(parseNDigits(2, dateString), valueCallback);\n      // 1st, 2nd, ..., 12th\n      case \"Lo\":\n        return mapValue(\n          match.ordinalNumber(dateString, {\n            unit: \"month\",\n          }),\n          valueCallback,\n        );\n      // Jan, Feb, ..., Dec\n      case \"LLL\":\n        return (\n          match.month(dateString, {\n            width: \"abbreviated\",\n            context: \"standalone\",\n          }) ||\n          match.month(dateString, { width: \"narrow\", context: \"standalone\" })\n        );\n\n      // J, F, ..., D\n      case \"LLLLL\":\n        return match.month(dateString, {\n          width: \"narrow\",\n          context: \"standalone\",\n        });\n      // January, February, ..., December\n      case \"LLLL\":\n      default:\n        return (\n          match.month(dateString, { width: \"wide\", context: \"standalone\" }) ||\n          match.month(dateString, {\n            width: \"abbreviated\",\n            context: \"standalone\",\n          }) ||\n          match.month(dateString, { width: \"narrow\", context: \"standalone\" })\n        );\n    }\n  }\n\n  validate(_date, value) {\n    return value >= 0 && value <= 11;\n  }\n\n  set(date, _flags, value) {\n    date.setMonth(value, 1);\n    date.setHours(0, 0, 0, 0);\n    return date;\n  }\n\n  incompatibleTokens = [\n    \"Y\",\n    \"R\",\n    \"q\",\n    \"Q\",\n    \"M\",\n    \"w\",\n    \"I\",\n    \"D\",\n    \"i\",\n    \"e\",\n    \"c\",\n    \"t\",\n    \"T\",\n  ];\n}\n","import { setWeek } from \"../../../setWeek.mjs\";\nimport { startOfWeek } from \"../../../startOfWeek.mjs\";\nimport { numericPatterns } from \"../constants.mjs\";\nimport { Parser } from \"../Parser.mjs\";\nimport { parseNDigits, parseNumericPattern } from \"../utils.mjs\";\n\n// Local week of year\nexport class LocalWeekParser extends Parser {\n  priority = 100;\n\n  parse(dateString, token, match) {\n    switch (token) {\n      case \"w\":\n        return parseNumericPattern(numericPatterns.week, dateString);\n      case \"wo\":\n        return match.ordinalNumber(dateString, { unit: \"week\" });\n      default:\n        return parseNDigits(token.length, dateString);\n    }\n  }\n\n  validate(_date, value) {\n    return value >= 1 && value <= 53;\n  }\n\n  set(date, _flags, value, options) {\n    return startOfWeek(setWeek(date, value, options), options);\n  }\n\n  incompatibleTokens = [\n    \"y\",\n    \"R\",\n    \"u\",\n    \"q\",\n    \"Q\",\n    \"M\",\n    \"L\",\n    \"I\",\n    \"d\",\n    \"D\",\n    \"i\",\n    \"t\",\n    \"T\",\n  ];\n}\n","import { getWeek } from \"./getWeek.mjs\";\nimport { toDate } from \"./toDate.mjs\";\n\n/**\n * The {@link setWeek} function options.\n */\n\n/**\n * @name setWeek\n * @category Week Helpers\n * @summary Set the local week to the given date.\n *\n * @description\n * Set the local week to the given date, saving the weekday number.\n * The exact calculation depends on the values of\n * `options.weekStartsOn` (which is the index of the first day of the week)\n * and `options.firstWeekContainsDate` (which is the day of January, which is always in\n * the first week of the week-numbering year)\n *\n * Week numbering: https://en.wikipedia.org/wiki/Week#The_ISO_week_date_system\n *\n * @typeParam DateType - The `Date` type, the function operates on. Gets inferred from passed arguments. Allows to use extensions like [`UTCDate`](https://github.com/date-fns/utc).\n *\n * @param date - The date to be changed\n * @param week - The week of the new date\n * @param options - An object with options\n *\n * @returns The new date with the local week set\n *\n * @example\n * // Set the 1st week to 2 January 2005 with default options:\n * const result = setWeek(new Date(2005, 0, 2), 1)\n * //=> Sun Dec 26 2004 00:00:00\n *\n * @example\n * // Set the 1st week to 2 January 2005,\n * // if Monday is the first day of the week,\n * // and the first week of the year always contains 4 January:\n * const result = setWeek(new Date(2005, 0, 2), 1, {\n *   weekStartsOn: 1,\n *   firstWeekContainsDate: 4\n * })\n * //=> Sun Jan 4 2004 00:00:00\n */\nexport function setWeek(date, week, options) {\n  const _date = toDate(date);\n  const diff = getWeek(_date, options) - week;\n  _date.setDate(_date.getDate() - diff * 7);\n  return _date;\n}\n\n// Fallback for modularized imports:\nexport default setWeek;\n","import { setISOWeek } from \"../../../setISOWeek.mjs\";\nimport { startOfISOWeek } from \"../../../startOfISOWeek.mjs\";\nimport { numericPatterns } from \"../constants.mjs\";\nimport { Parser } from \"../Parser.mjs\";\nimport { parseNDigits, parseNumericPattern } from \"../utils.mjs\";\n\n// ISO week of year\nexport class ISOWeekParser extends Parser {\n  priority = 100;\n\n  parse(dateString, token, match) {\n    switch (token) {\n      case \"I\":\n        return parseNumericPattern(numericPatterns.week, dateString);\n      case \"Io\":\n        return match.ordinalNumber(dateString, { unit: \"week\" });\n      default:\n        return parseNDigits(token.length, dateString);\n    }\n  }\n\n  validate(_date, value) {\n    return value >= 1 && value <= 53;\n  }\n\n  set(date, _flags, value) {\n    return startOfISOWeek(setISOWeek(date, value));\n  }\n\n  incompatibleTokens = [\n    \"y\",\n    \"Y\",\n    \"u\",\n    \"q\",\n    \"Q\",\n    \"M\",\n    \"L\",\n    \"w\",\n    \"d\",\n    \"D\",\n    \"e\",\n    \"c\",\n    \"t\",\n    \"T\",\n  ];\n}\n","import { getISOWeek } from \"./getISOWeek.mjs\";\nimport { toDate } from \"./toDate.mjs\";\n\n/**\n * @name setISOWeek\n * @category ISO Week Helpers\n * @summary Set the ISO week to the given date.\n *\n * @description\n * Set the ISO week to the given date, saving the weekday number.\n *\n * ISO week-numbering year: http://en.wikipedia.org/wiki/ISO_week_date\n *\n * @typeParam DateType - The `Date` type, the function operates on. Gets inferred from passed arguments. Allows to use extensions like [`UTCDate`](https://github.com/date-fns/utc).\n *\n * @param date - The date to be changed\n * @param week - The ISO week of the new date\n *\n * @returns The new date with the ISO week set\n *\n * @example\n * // Set the 53rd ISO week to 7 August 2004:\n * const result = setISOWeek(new Date(2004, 7, 7), 53)\n * //=> Sat Jan 01 2005 00:00:00\n */\nexport function setISOWeek(date, week) {\n  const _date = toDate(date);\n  const diff = getISOWeek(_date) - week;\n  _date.setDate(_date.getDate() - diff * 7);\n  return _date;\n}\n\n// Fallback for modularized imports:\nexport default setISOWeek;\n","import { numericPatterns } from \"../constants.mjs\";\nimport { Parser } from \"../Parser.mjs\";\nimport {\n  isLeapYearIndex,\n  parseNDigits,\n  parseNumericPattern,\n} from \"../utils.mjs\";\n\nexport class DayOfYearParser extends Parser {\n  priority = 90;\n\n  subpriority = 1;\n\n  parse(dateString, token, match) {\n    switch (token) {\n      case \"D\":\n      case \"DD\":\n        return parseNumericPattern(numericPatterns.dayOfYear, dateString);\n      case \"Do\":\n        return match.ordinalNumber(dateString, { unit: \"date\" });\n      default:\n        return parseNDigits(token.length, dateString);\n    }\n  }\n\n  validate(date, value) {\n    const year = date.getFullYear();\n    const isLeapYear = isLeapYearIndex(year);\n    if (isLeapYear) {\n      return value >= 1 && value <= 366;\n    } else {\n      return value >= 1 && value <= 365;\n    }\n  }\n\n  set(date, _flags, value) {\n    date.setMonth(0, value);\n    date.setHours(0, 0, 0, 0);\n    return date;\n  }\n\n  incompatibleTokens = [\n    \"Y\",\n    \"R\",\n    \"q\",\n    \"Q\",\n    \"M\",\n    \"L\",\n    \"w\",\n    \"I\",\n    \"d\",\n    \"E\",\n    \"i\",\n    \"e\",\n    \"c\",\n    \"t\",\n    \"T\",\n  ];\n}\n","import { setDay } from \"../../../setDay.mjs\";\nimport { Parser } from \"../Parser.mjs\";\n\n// Day of week\nexport class DayParser extends Parser {\n  priority = 90;\n\n  parse(dateString, token, match) {\n    switch (token) {\n      // Tue\n      case \"E\":\n      case \"EE\":\n      case \"EEE\":\n        return (\n          match.day(dateString, {\n            width: \"abbreviated\",\n            context: \"formatting\",\n          }) ||\n          match.day(dateString, { width: \"short\", context: \"formatting\" }) ||\n          match.day(dateString, { width: \"narrow\", context: \"formatting\" })\n        );\n\n      // T\n      case \"EEEEE\":\n        return match.day(dateString, {\n          width: \"narrow\",\n          context: \"formatting\",\n        });\n      // Tu\n      case \"EEEEEE\":\n        return (\n          match.day(dateString, { width: \"short\", context: \"formatting\" }) ||\n          match.day(dateString, { width: \"narrow\", context: \"formatting\" })\n        );\n\n      // Tuesday\n      case \"EEEE\":\n      default:\n        return (\n          match.day(dateString, { width: \"wide\", context: \"formatting\" }) ||\n          match.day(dateString, {\n            width: \"abbreviated\",\n            context: \"formatting\",\n          }) ||\n          match.day(dateString, { width: \"short\", context: \"formatting\" }) ||\n          match.day(dateString, { width: \"narrow\", context: \"formatting\" })\n        );\n    }\n  }\n\n  validate(_date, value) {\n    return value >= 0 && value <= 6;\n  }\n\n  set(date, _flags, value, options) {\n    date = setDay(date, value, options);\n    date.setHours(0, 0, 0, 0);\n    return date;\n  }\n\n  incompatibleTokens = [\"D\", \"i\", \"e\", \"c\", \"t\", \"T\"];\n}\n","import { setDay } from \"../../../setDay.mjs\";\nimport { Parser } from \"../Parser.mjs\";\nimport { mapValue, parseNDigits } from \"../utils.mjs\";\n\n// Local day of week\nexport class LocalDayParser extends Parser {\n  priority = 90;\n  parse(dateString, token, match, options) {\n    const valueCallback = (value) => {\n      // We want here floor instead of trunc, so we get -7 for value 0 instead of 0\n      const wholeWeekDays = Math.floor((value - 1) / 7) * 7;\n      return ((value + options.weekStartsOn + 6) % 7) + wholeWeekDays;\n    };\n\n    switch (token) {\n      // 3\n      case \"e\":\n      case \"ee\": // 03\n        return mapValue(parseNDigits(token.length, dateString), valueCallback);\n      // 3rd\n      case \"eo\":\n        return mapValue(\n          match.ordinalNumber(dateString, {\n            unit: \"day\",\n          }),\n          valueCallback,\n        );\n      // Tue\n      case \"eee\":\n        return (\n          match.day(dateString, {\n            width: \"abbreviated\",\n            context: \"formatting\",\n          }) ||\n          match.day(dateString, { width: \"short\", context: \"formatting\" }) ||\n          match.day(dateString, { width: \"narrow\", context: \"formatting\" })\n        );\n\n      // T\n      case \"eeeee\":\n        return match.day(dateString, {\n          width: \"narrow\",\n          context: \"formatting\",\n        });\n      // Tu\n      case \"eeeeee\":\n        return (\n          match.day(dateString, { width: \"short\", context: \"formatting\" }) ||\n          match.day(dateString, { width: \"narrow\", context: \"formatting\" })\n        );\n\n      // Tuesday\n      case \"eeee\":\n      default:\n        return (\n          match.day(dateString, { width: \"wide\", context: \"formatting\" }) ||\n          match.day(dateString, {\n            width: \"abbreviated\",\n            context: \"formatting\",\n          }) ||\n          match.day(dateString, { width: \"short\", context: \"formatting\" }) ||\n          match.day(dateString, { width: \"narrow\", context: \"formatting\" })\n        );\n    }\n  }\n\n  validate(_date, value) {\n    return value >= 0 && value <= 6;\n  }\n\n  set(date, _flags, value, options) {\n    date = setDay(date, value, options);\n    date.setHours(0, 0, 0, 0);\n    return date;\n  }\n\n  incompatibleTokens = [\n    \"y\",\n    \"R\",\n    \"u\",\n    \"q\",\n    \"Q\",\n    \"M\",\n    \"L\",\n    \"I\",\n    \"d\",\n    \"D\",\n    \"E\",\n    \"i\",\n    \"c\",\n    \"t\",\n    \"T\",\n  ];\n}\n","import { setDay } from \"../../../setDay.mjs\";\nimport { Parser } from \"../Parser.mjs\";\nimport { mapValue, parseNDigits } from \"../utils.mjs\";\n\n// Stand-alone local day of week\nexport class StandAloneLocalDayParser extends Parser {\n  priority = 90;\n\n  parse(dateString, token, match, options) {\n    const valueCallback = (value) => {\n      // We want here floor instead of trunc, so we get -7 for value 0 instead of 0\n      const wholeWeekDays = Math.floor((value - 1) / 7) * 7;\n      return ((value + options.weekStartsOn + 6) % 7) + wholeWeekDays;\n    };\n\n    switch (token) {\n      // 3\n      case \"c\":\n      case \"cc\": // 03\n        return mapValue(parseNDigits(token.length, dateString), valueCallback);\n      // 3rd\n      case \"co\":\n        return mapValue(\n          match.ordinalNumber(dateString, {\n            unit: \"day\",\n          }),\n          valueCallback,\n        );\n      // Tue\n      case \"ccc\":\n        return (\n          match.day(dateString, {\n            width: \"abbreviated\",\n            context: \"standalone\",\n          }) ||\n          match.day(dateString, { width: \"short\", context: \"standalone\" }) ||\n          match.day(dateString, { width: \"narrow\", context: \"standalone\" })\n        );\n\n      // T\n      case \"ccccc\":\n        return match.day(dateString, {\n          width: \"narrow\",\n          context: \"standalone\",\n        });\n      // Tu\n      case \"cccccc\":\n        return (\n          match.day(dateString, { width: \"short\", context: \"standalone\" }) ||\n          match.day(dateString, { width: \"narrow\", context: \"standalone\" })\n        );\n\n      // Tuesday\n      case \"cccc\":\n      default:\n        return (\n          match.day(dateString, { width: \"wide\", context: \"standalone\" }) ||\n          match.day(dateString, {\n            width: \"abbreviated\",\n            context: \"standalone\",\n          }) ||\n          match.day(dateString, { width: \"short\", context: \"standalone\" }) ||\n          match.day(dateString, { width: \"narrow\", context: \"standalone\" })\n        );\n    }\n  }\n\n  validate(_date, value) {\n    return value >= 0 && value <= 6;\n  }\n\n  set(date, _flags, value, options) {\n    date = setDay(date, value, options);\n    date.setHours(0, 0, 0, 0);\n    return date;\n  }\n\n  incompatibleTokens = [\n    \"y\",\n    \"R\",\n    \"u\",\n    \"q\",\n    \"Q\",\n    \"M\",\n    \"L\",\n    \"I\",\n    \"d\",\n    \"D\",\n    \"E\",\n    \"i\",\n    \"e\",\n    \"t\",\n    \"T\",\n  ];\n}\n","import { setISODay } from \"../../../setISODay.mjs\";\nimport { Parser } from \"../Parser.mjs\";\nimport { mapValue, parseNDigits } from \"../utils.mjs\";\n\n// ISO day of week\nexport class ISODayParser extends Parser {\n  priority = 90;\n\n  parse(dateString, token, match) {\n    const valueCallback = (value) => {\n      if (value === 0) {\n        return 7;\n      }\n      return value;\n    };\n\n    switch (token) {\n      // 2\n      case \"i\":\n      case \"ii\": // 02\n        return parseNDigits(token.length, dateString);\n      // 2nd\n      case \"io\":\n        return match.ordinalNumber(dateString, { unit: \"day\" });\n      // Tue\n      case \"iii\":\n        return mapValue(\n          match.day(dateString, {\n            width: \"abbreviated\",\n            context: \"formatting\",\n          }) ||\n            match.day(dateString, {\n              width: \"short\",\n              context: \"formatting\",\n            }) ||\n            match.day(dateString, {\n              width: \"narrow\",\n              context: \"formatting\",\n            }),\n          valueCallback,\n        );\n      // T\n      case \"iiiii\":\n        return mapValue(\n          match.day(dateString, {\n            width: \"narrow\",\n            context: \"formatting\",\n          }),\n          valueCallback,\n        );\n      // Tu\n      case \"iiiiii\":\n        return mapValue(\n          match.day(dateString, {\n            width: \"short\",\n            context: \"formatting\",\n          }) ||\n            match.day(dateString, {\n              width: \"narrow\",\n              context: \"formatting\",\n            }),\n          valueCallback,\n        );\n      // Tuesday\n      case \"iiii\":\n      default:\n        return mapValue(\n          match.day(dateString, {\n            width: \"wide\",\n            context: \"formatting\",\n          }) ||\n            match.day(dateString, {\n              width: \"abbreviated\",\n              context: \"formatting\",\n            }) ||\n            match.day(dateString, {\n              width: \"short\",\n              context: \"formatting\",\n            }) ||\n            match.day(dateString, {\n              width: \"narrow\",\n              context: \"formatting\",\n            }),\n          valueCallback,\n        );\n    }\n  }\n\n  validate(_date, value) {\n    return value >= 1 && value <= 7;\n  }\n\n  set(date, _flags, value) {\n    date = setISODay(date, value);\n    date.setHours(0, 0, 0, 0);\n    return date;\n  }\n\n  incompatibleTokens = [\n    \"y\",\n    \"Y\",\n    \"u\",\n    \"q\",\n    \"Q\",\n    \"M\",\n    \"L\",\n    \"w\",\n    \"d\",\n    \"D\",\n    \"E\",\n    \"e\",\n    \"c\",\n    \"t\",\n    \"T\",\n  ];\n}\n","import { Parser } from \"../Parser.mjs\";\nimport { dayPeriodEnumToHours } from \"../utils.mjs\";\n\nexport class AMPMParser extends Parser {\n  priority = 80;\n\n  parse(dateString, token, match) {\n    switch (token) {\n      case \"a\":\n      case \"aa\":\n      case \"aaa\":\n        return (\n          match.dayPeriod(dateString, {\n            width: \"abbreviated\",\n            context: \"formatting\",\n          }) ||\n          match.dayPeriod(dateString, {\n            width: \"narrow\",\n            context: \"formatting\",\n          })\n        );\n\n      case \"aaaaa\":\n        return match.dayPeriod(dateString, {\n          width: \"narrow\",\n          context: \"formatting\",\n        });\n      case \"aaaa\":\n      default:\n        return (\n          match.dayPeriod(dateString, {\n            width: \"wide\",\n            context: \"formatting\",\n          }) ||\n          match.dayPeriod(dateString, {\n            width: \"abbreviated\",\n            context: \"formatting\",\n          }) ||\n          match.dayPeriod(dateString, {\n            width: \"narrow\",\n            context: \"formatting\",\n          })\n        );\n    }\n  }\n\n  set(date, _flags, value) {\n    date.setHours(dayPeriodEnumToHours(value), 0, 0, 0);\n    return date;\n  }\n\n  incompatibleTokens = [\"b\", \"B\", \"H\", \"k\", \"t\", \"T\"];\n}\n","import { Parser } from \"../Parser.mjs\";\nimport { dayPeriodEnumToHours } from \"../utils.mjs\";\n\nexport class AMPMMidnightParser extends Parser {\n  priority = 80;\n\n  parse(dateString, token, match) {\n    switch (token) {\n      case \"b\":\n      case \"bb\":\n      case \"bbb\":\n        return (\n          match.dayPeriod(dateString, {\n            width: \"abbreviated\",\n            context: \"formatting\",\n          }) ||\n          match.dayPeriod(dateString, {\n            width: \"narrow\",\n            context: \"formatting\",\n          })\n        );\n\n      case \"bbbbb\":\n        return match.dayPeriod(dateString, {\n          width: \"narrow\",\n          context: \"formatting\",\n        });\n      case \"bbbb\":\n      default:\n        return (\n          match.dayPeriod(dateString, {\n            width: \"wide\",\n            context: \"formatting\",\n          }) ||\n          match.dayPeriod(dateString, {\n            width: \"abbreviated\",\n            context: \"formatting\",\n          }) ||\n          match.dayPeriod(dateString, {\n            width: \"narrow\",\n            context: \"formatting\",\n          })\n        );\n    }\n  }\n\n  set(date, _flags, value) {\n    date.setHours(dayPeriodEnumToHours(value), 0, 0, 0);\n    return date;\n  }\n\n  incompatibleTokens = [\"a\", \"B\", \"H\", \"k\", \"t\", \"T\"];\n}\n","import { Parser } from \"../Parser.mjs\";\nimport { dayPeriodEnumToHours } from \"../utils.mjs\";\n\n// in the morning, in the afternoon, in the evening, at night\nexport class DayPeriodParser extends Parser {\n  priority = 80;\n\n  parse(dateString, token, match) {\n    switch (token) {\n      case \"B\":\n      case \"BB\":\n      case \"BBB\":\n        return (\n          match.dayPeriod(dateString, {\n            width: \"abbreviated\",\n            context: \"formatting\",\n          }) ||\n          match.dayPeriod(dateString, {\n            width: \"narrow\",\n            context: \"formatting\",\n          })\n        );\n\n      case \"BBBBB\":\n        return match.dayPeriod(dateString, {\n          width: \"narrow\",\n          context: \"formatting\",\n        });\n      case \"BBBB\":\n      default:\n        return (\n          match.dayPeriod(dateString, {\n            width: \"wide\",\n            context: \"formatting\",\n          }) ||\n          match.dayPeriod(dateString, {\n            width: \"abbreviated\",\n            context: \"formatting\",\n          }) ||\n          match.dayPeriod(dateString, {\n            width: \"narrow\",\n            context: \"formatting\",\n          })\n        );\n    }\n  }\n\n  set(date, _flags, value) {\n    date.setHours(dayPeriodEnumToHours(value), 0, 0, 0);\n    return date;\n  }\n\n  incompatibleTokens = [\"a\", \"b\", \"t\", \"T\"];\n}\n","import { numericPatterns } from \"../constants.mjs\";\nimport { Parser } from \"../Parser.mjs\";\nimport { parseNDigits, parseNumericPattern } from \"../utils.mjs\";\n\nexport class Hour1to12Parser extends Parser {\n  priority = 70;\n\n  parse(dateString, token, match) {\n    switch (token) {\n      case \"h\":\n        return parseNumericPattern(numericPatterns.hour12h, dateString);\n      case \"ho\":\n        return match.ordinalNumber(dateString, { unit: \"hour\" });\n      default:\n        return parseNDigits(token.length, dateString);\n    }\n  }\n\n  validate(_date, value) {\n    return value >= 1 && value <= 12;\n  }\n\n  set(date, _flags, value) {\n    const isPM = date.getHours() >= 12;\n    if (isPM && value < 12) {\n      date.setHours(value + 12, 0, 0, 0);\n    } else if (!isPM && value === 12) {\n      date.setHours(0, 0, 0, 0);\n    } else {\n      date.setHours(value, 0, 0, 0);\n    }\n    return date;\n  }\n\n  incompatibleTokens = [\"H\", \"K\", \"k\", \"t\", \"T\"];\n}\n","import { numericPatterns } from \"../constants.mjs\";\nimport { Parser } from \"../Parser.mjs\";\nimport { parseNDigits, parseNumericPattern } from \"../utils.mjs\";\n\nexport class Hour0to23Parser extends Parser {\n  priority = 70;\n\n  parse(dateString, token, match) {\n    switch (token) {\n      case \"H\":\n        return parseNumericPattern(numericPatterns.hour23h, dateString);\n      case \"Ho\":\n        return match.ordinalNumber(dateString, { unit: \"hour\" });\n      default:\n        return parseNDigits(token.length, dateString);\n    }\n  }\n\n  validate(_date, value) {\n    return value >= 0 && value <= 23;\n  }\n\n  set(date, _flags, value) {\n    date.setHours(value, 0, 0, 0);\n    return date;\n  }\n\n  incompatibleTokens = [\"a\", \"b\", \"h\", \"K\", \"k\", \"t\", \"T\"];\n}\n","import { numericPatterns } from \"../constants.mjs\";\nimport { Parser } from \"../Parser.mjs\";\nimport { parseNDigits, parseNumericPattern } from \"../utils.mjs\";\n\nexport class Hour0To11Parser extends Parser {\n  priority = 70;\n\n  parse(dateString, token, match) {\n    switch (token) {\n      case \"K\":\n        return parseNumericPattern(numericPatterns.hour11h, dateString);\n      case \"Ko\":\n        return match.ordinalNumber(dateString, { unit: \"hour\" });\n      default:\n        return parseNDigits(token.length, dateString);\n    }\n  }\n\n  validate(_date, value) {\n    return value >= 0 && value <= 11;\n  }\n\n  set(date, _flags, value) {\n    const isPM = date.getHours() >= 12;\n    if (isPM && value < 12) {\n      date.setHours(value + 12, 0, 0, 0);\n    } else {\n      date.setHours(value, 0, 0, 0);\n    }\n    return date;\n  }\n\n  incompatibleTokens = [\"h\", \"H\", \"k\", \"t\", \"T\"];\n}\n","import { numericPatterns } from \"../constants.mjs\";\nimport { Parser } from \"../Parser.mjs\";\nimport { parseNDigits, parseNumericPattern } from \"../utils.mjs\";\n\nexport class Hour1To24Parser extends Parser {\n  priority = 70;\n\n  parse(dateString, token, match) {\n    switch (token) {\n      case \"k\":\n        return parseNumericPattern(numericPatterns.hour24h, dateString);\n      case \"ko\":\n        return match.ordinalNumber(dateString, { unit: \"hour\" });\n      default:\n        return parseNDigits(token.length, dateString);\n    }\n  }\n\n  validate(_date, value) {\n    return value >= 1 && value <= 24;\n  }\n\n  set(date, _flags, value) {\n    const hours = value <= 24 ? value % 24 : value;\n    date.setHours(hours, 0, 0, 0);\n    return date;\n  }\n\n  incompatibleTokens = [\"a\", \"b\", \"h\", \"H\", \"K\", \"t\", \"T\"];\n}\n","import { numericPatterns } from \"../constants.mjs\";\nimport { Parser } from \"../Parser.mjs\";\nimport { parseNDigits, parseNumericPattern } from \"../utils.mjs\";\n\nexport class MinuteParser extends Parser {\n  priority = 60;\n\n  parse(dateString, token, match) {\n    switch (token) {\n      case \"m\":\n        return parseNumericPattern(numericPatterns.minute, dateString);\n      case \"mo\":\n        return match.ordinalNumber(dateString, { unit: \"minute\" });\n      default:\n        return parseNDigits(token.length, dateString);\n    }\n  }\n\n  validate(_date, value) {\n    return value >= 0 && value <= 59;\n  }\n\n  set(date, _flags, value) {\n    date.setMinutes(value, 0, 0);\n    return date;\n  }\n\n  incompatibleTokens = [\"t\", \"T\"];\n}\n","import { numericPatterns } from \"../constants.mjs\";\nimport { Parser } from \"../Parser.mjs\";\nimport { parseNDigits, parseNumericPattern } from \"../utils.mjs\";\n\nexport class SecondParser extends Parser {\n  priority = 50;\n\n  parse(dateString, token, match) {\n    switch (token) {\n      case \"s\":\n        return parseNumericPattern(numericPatterns.second, dateString);\n      case \"so\":\n        return match.ordinalNumber(dateString, { unit: \"second\" });\n      default:\n        return parseNDigits(token.length, dateString);\n    }\n  }\n\n  validate(_date, value) {\n    return value >= 0 && value <= 59;\n  }\n\n  set(date, _flags, value) {\n    date.setSeconds(value, 0);\n    return date;\n  }\n\n  incompatibleTokens = [\"t\", \"T\"];\n}\n","import { Parser } from \"../Parser.mjs\";\nimport { mapValue, parseNDigits } from \"../utils.mjs\";\n\nexport class FractionOfSecondParser extends Parser {\n  priority = 30;\n\n  parse(dateString, token) {\n    const valueCallback = (value) =>\n      Math.trunc(value * Math.pow(10, -token.length + 3));\n    return mapValue(parseNDigits(token.length, dateString), valueCallback);\n  }\n\n  set(date, _flags, value) {\n    date.setMilliseconds(value);\n    return date;\n  }\n\n  incompatibleTokens = [\"t\", \"T\"];\n}\n","import { constructFrom } from \"../../../constructFrom.mjs\";\nimport { getTimezoneOffsetInMilliseconds } from \"../../../_lib/getTimezoneOffsetInMilliseconds.mjs\";\nimport { timezonePatterns } from \"../constants.mjs\";\nimport { Parser } from \"../Parser.mjs\";\nimport { parseTimezonePattern } from \"../utils.mjs\";\n\n// Timezone (ISO-8601. +00:00 is `'Z'`)\nexport class ISOTimezoneWithZParser extends Parser {\n  priority = 10;\n\n  parse(dateString, token) {\n    switch (token) {\n      case \"X\":\n        return parseTimezonePattern(\n          timezonePatterns.basicOptionalMinutes,\n          dateString,\n        );\n      case \"XX\":\n        return parseTimezonePattern(timezonePatterns.basic, dateString);\n      case \"XXXX\":\n        return parseTimezonePattern(\n          timezonePatterns.basicOptionalSeconds,\n          dateString,\n        );\n      case \"XXXXX\":\n        return parseTimezonePattern(\n          timezonePatterns.extendedOptionalSeconds,\n          dateString,\n        );\n      case \"XXX\":\n      default:\n        return parseTimezonePattern(timezonePatterns.extended, dateString);\n    }\n  }\n\n  set(date, flags, value) {\n    if (flags.timestampIsSet) return date;\n    return constructFrom(\n      date,\n      date.getTime() - getTimezoneOffsetInMilliseconds(date) - value,\n    );\n  }\n\n  incompatibleTokens = [\"t\", \"T\", \"x\"];\n}\n","import { constructFrom } from \"../../../constructFrom.mjs\";\nimport { getTimezoneOffsetInMilliseconds } from \"../../../_lib/getTimezoneOffsetInMilliseconds.mjs\";\nimport { timezonePatterns } from \"../constants.mjs\";\nimport { Parser } from \"../Parser.mjs\";\nimport { parseTimezonePattern } from \"../utils.mjs\";\n\n// Timezone (ISO-8601)\nexport class ISOTimezoneParser extends Parser {\n  priority = 10;\n\n  parse(dateString, token) {\n    switch (token) {\n      case \"x\":\n        return parseTimezonePattern(\n          timezonePatterns.basicOptionalMinutes,\n          dateString,\n        );\n      case \"xx\":\n        return parseTimezonePattern(timezonePatterns.basic, dateString);\n      case \"xxxx\":\n        return parseTimezonePattern(\n          timezonePatterns.basicOptionalSeconds,\n          dateString,\n        );\n      case \"xxxxx\":\n        return parseTimezonePattern(\n          timezonePatterns.extendedOptionalSeconds,\n          dateString,\n        );\n      case \"xxx\":\n      default:\n        return parseTimezonePattern(timezonePatterns.extended, dateString);\n    }\n  }\n\n  set(date, flags, value) {\n    if (flags.timestampIsSet) return date;\n    return constructFrom(\n      date,\n      date.getTime() - getTimezoneOffsetInMilliseconds(date) - value,\n    );\n  }\n\n  incompatibleTokens = [\"t\", \"T\", \"X\"];\n}\n","import { constructFrom } from \"../../../constructFrom.mjs\";\nimport { Parser } from \"../Parser.mjs\";\nimport { parseAnyDigitsSigned } from \"../utils.mjs\";\n\nexport class TimestampSecondsParser extends Parser {\n  priority = 40;\n\n  parse(dateString) {\n    return parseAnyDigitsSigned(dateString);\n  }\n\n  set(date, _flags, value) {\n    return [constructFrom(date, value * 1000), { timestampIsSet: true }];\n  }\n\n  incompatibleTokens = \"*\";\n}\n","import { constructFrom } from \"../../../constructFrom.mjs\";\nimport { Parser } from \"../Parser.mjs\";\nimport { parseAnyDigitsSigned } from \"../utils.mjs\";\n\nexport class TimestampMillisecondsParser extends Parser {\n  priority = 20;\n\n  parse(dateString) {\n    return parseAnyDigitsSigned(dateString);\n  }\n\n  set(date, _flags, value) {\n    return [constructFrom(date, value), { timestampIsSet: true }];\n  }\n\n  incompatibleTokens = \"*\";\n}\n","import { constructFrom } from \"./constructFrom.mjs\";\nimport { getDefaultOptions } from \"./getDefaultOptions.mjs\";\nimport { defaultLocale } from \"./_lib/defaultLocale.mjs\";\nimport { toDate } from \"./toDate.mjs\";\nimport { longFormatters } from \"./_lib/format/longFormatters.mjs\";\nimport {\n  isProtectedDayOfYearToken,\n  isProtectedWeekYearToken,\n  warnOrThrowProtectedError,\n} from \"./_lib/protectedTokens.mjs\";\nimport { parsers } from \"./parse/_lib/parsers.mjs\";\nimport { DateToSystemTimezoneSetter } from \"./parse/_lib/Setter.mjs\";\n\n// Rexports of internal for libraries to use.\n// See: https://github.com/date-fns/date-fns/issues/3638#issuecomment-1877082874\nexport { longFormatters, parsers };\n\n/**\n * The {@link parse} function options.\n */\n\n// This RegExp consists of three parts separated by `|`:\n// - [yYQqMLwIdDecihHKkms]o matches any available ordinal number token\n//   (one of the certain letters followed by `o`)\n// - (\\w)\\1* matches any sequences of the same letter\n// - '' matches two quote characters in a row\n// - '(''|[^'])+('|$) matches anything surrounded by two quote characters ('),\n//   except a single quote symbol, which ends the sequence.\n//   Two quote characters do not end the sequence.\n//   If there is no matching single quote\n//   then the sequence will continue until the end of the string.\n// - . matches any single character unmatched by previous parts of the RegExps\nconst formattingTokensRegExp =\n  /[yYQqMLwIdDecihHKkms]o|(\\w)\\1*|''|'(''|[^'])+('|$)|./g;\n\n// This RegExp catches symbols escaped by quotes, and also\n// sequences of symbols P, p, and the combinations like `PPPPPPPppppp`\nconst longFormattingTokensRegExp = /P+p+|P+|p+|''|'(''|[^'])+('|$)|./g;\n\nconst escapedStringRegExp = /^'([^]*?)'?$/;\nconst doubleQuoteRegExp = /''/g;\n\nconst notWhitespaceRegExp = /\\S/;\nconst unescapedLatinCharacterRegExp = /[a-zA-Z]/;\n\n/**\n * @name parse\n * @category Common Helpers\n * @summary Parse the date.\n *\n * @description\n * Return the date parsed from string using the given format string.\n *\n * > ⚠️ Please note that the `format` tokens differ from Moment.js and other libraries.\n * > See: https://github.com/date-fns/date-fns/blob/master/docs/unicodeTokens.md\n *\n * The characters in the format string wrapped between two single quotes characters (') are escaped.\n * Two single quotes in a row, whether inside or outside a quoted sequence, represent a 'real' single quote.\n *\n * Format of the format string is based on Unicode Technical Standard #35:\n * https://www.unicode.org/reports/tr35/tr35-dates.html#Date_Field_Symbol_Table\n * with a few additions (see note 5 below the table).\n *\n * Not all tokens are compatible. Combinations that don't make sense or could lead to bugs are prohibited\n * and will throw `RangeError`. For example usage of 24-hour format token with AM/PM token will throw an exception:\n *\n * ```javascript\n * parse('23 AM', 'HH a', new Date())\n * //=> RangeError: The format string mustn't contain `HH` and `a` at the same time\n * ```\n *\n * See the compatibility table: https://docs.google.com/spreadsheets/d/e/2PACX-1vQOPU3xUhplll6dyoMmVUXHKl_8CRDs6_ueLmex3SoqwhuolkuN3O05l4rqx5h1dKX8eb46Ul-CCSrq/pubhtml?gid=0&single=true\n *\n * Accepted format string patterns:\n * | Unit                            |Prior| Pattern | Result examples                   | Notes |\n * |---------------------------------|-----|---------|-----------------------------------|-------|\n * | Era                             | 140 | G..GGG  | AD, BC                            |       |\n * |                                 |     | GGGG    | Anno Domini, Before Christ        | 2     |\n * |                                 |     | GGGGG   | A, B                              |       |\n * | Calendar year                   | 130 | y       | 44, 1, 1900, 2017, 9999           | 4     |\n * |                                 |     | yo      | 44th, 1st, 1900th, 9999999th      | 4,5   |\n * |                                 |     | yy      | 44, 01, 00, 17                    | 4     |\n * |                                 |     | yyy     | 044, 001, 123, 999                | 4     |\n * |                                 |     | yyyy    | 0044, 0001, 1900, 2017            | 4     |\n * |                                 |     | yyyyy   | ...                               | 2,4   |\n * | Local week-numbering year       | 130 | Y       | 44, 1, 1900, 2017, 9000           | 4     |\n * |                                 |     | Yo      | 44th, 1st, 1900th, 9999999th      | 4,5   |\n * |                                 |     | YY      | 44, 01, 00, 17                    | 4,6   |\n * |                                 |     | YYY     | 044, 001, 123, 999                | 4     |\n * |                                 |     | YYYY    | 0044, 0001, 1900, 2017            | 4,6   |\n * |                                 |     | YYYYY   | ...                               | 2,4   |\n * | ISO week-numbering year         | 130 | R       | -43, 1, 1900, 2017, 9999, -9999   | 4,5   |\n * |                                 |     | RR      | -43, 01, 00, 17                   | 4,5   |\n * |                                 |     | RRR     | -043, 001, 123, 999, -999         | 4,5   |\n * |                                 |     | RRRR    | -0043, 0001, 2017, 9999, -9999    | 4,5   |\n * |                                 |     | RRRRR   | ...                               | 2,4,5 |\n * | Extended year                   | 130 | u       | -43, 1, 1900, 2017, 9999, -999    | 4     |\n * |                                 |     | uu      | -43, 01, 99, -99                  | 4     |\n * |                                 |     | uuu     | -043, 001, 123, 999, -999         | 4     |\n * |                                 |     | uuuu    | -0043, 0001, 2017, 9999, -9999    | 4     |\n * |                                 |     | uuuuu   | ...                               | 2,4   |\n * | Quarter (formatting)            | 120 | Q       | 1, 2, 3, 4                        |       |\n * |                                 |     | Qo      | 1st, 2nd, 3rd, 4th                | 5     |\n * |                                 |     | QQ      | 01, 02, 03, 04                    |       |\n * |                                 |     | QQQ     | Q1, Q2, Q3, Q4                    |       |\n * |                                 |     | QQQQ    | 1st quarter, 2nd quarter, ...     | 2     |\n * |                                 |     | QQQQQ   | 1, 2, 3, 4                        | 4     |\n * | Quarter (stand-alone)           | 120 | q       | 1, 2, 3, 4                        |       |\n * |                                 |     | qo      | 1st, 2nd, 3rd, 4th                | 5     |\n * |                                 |     | qq      | 01, 02, 03, 04                    |       |\n * |                                 |     | qqq     | Q1, Q2, Q3, Q4                    |       |\n * |                                 |     | qqqq    | 1st quarter, 2nd quarter, ...     | 2     |\n * |                                 |     | qqqqq   | 1, 2, 3, 4                        | 3     |\n * | Month (formatting)              | 110 | M       | 1, 2, ..., 12                     |       |\n * |                                 |     | Mo      | 1st, 2nd, ..., 12th               | 5     |\n * |                                 |     | MM      | 01, 02, ..., 12                   |       |\n * |                                 |     | MMM     | Jan, Feb, ..., Dec                |       |\n * |                                 |     | MMMM    | January, February, ..., December  | 2     |\n * |                                 |     | MMMMM   | J, F, ..., D                      |       |\n * | Month (stand-alone)             | 110 | L       | 1, 2, ..., 12                     |       |\n * |                                 |     | Lo      | 1st, 2nd, ..., 12th               | 5     |\n * |                                 |     | LL      | 01, 02, ..., 12                   |       |\n * |                                 |     | LLL     | Jan, Feb, ..., Dec                |       |\n * |                                 |     | LLLL    | January, February, ..., December  | 2     |\n * |                                 |     | LLLLL   | J, F, ..., D                      |       |\n * | Local week of year              | 100 | w       | 1, 2, ..., 53                     |       |\n * |                                 |     | wo      | 1st, 2nd, ..., 53th               | 5     |\n * |                                 |     | ww      | 01, 02, ..., 53                   |       |\n * | ISO week of year                | 100 | I       | 1, 2, ..., 53                     | 5     |\n * |                                 |     | Io      | 1st, 2nd, ..., 53th               | 5     |\n * |                                 |     | II      | 01, 02, ..., 53                   | 5     |\n * | Day of month                    |  90 | d       | 1, 2, ..., 31                     |       |\n * |                                 |     | do      | 1st, 2nd, ..., 31st               | 5     |\n * |                                 |     | dd      | 01, 02, ..., 31                   |       |\n * | Day of year                     |  90 | D       | 1, 2, ..., 365, 366               | 7     |\n * |                                 |     | Do      | 1st, 2nd, ..., 365th, 366th       | 5     |\n * |                                 |     | DD      | 01, 02, ..., 365, 366             | 7     |\n * |                                 |     | DDD     | 001, 002, ..., 365, 366           |       |\n * |                                 |     | DDDD    | ...                               | 2     |\n * | Day of week (formatting)        |  90 | E..EEE  | Mon, Tue, Wed, ..., Sun           |       |\n * |                                 |     | EEEE    | Monday, Tuesday, ..., Sunday      | 2     |\n * |                                 |     | EEEEE   | M, T, W, T, F, S, S               |       |\n * |                                 |     | EEEEEE  | Mo, Tu, We, Th, Fr, Sa, Su        |       |\n * | ISO day of week (formatting)    |  90 | i       | 1, 2, 3, ..., 7                   | 5     |\n * |                                 |     | io      | 1st, 2nd, ..., 7th                | 5     |\n * |                                 |     | ii      | 01, 02, ..., 07                   | 5     |\n * |                                 |     | iii     | Mon, Tue, Wed, ..., Sun           | 5     |\n * |                                 |     | iiii    | Monday, Tuesday, ..., Sunday      | 2,5   |\n * |                                 |     | iiiii   | M, T, W, T, F, S, S               | 5     |\n * |                                 |     | iiiiii  | Mo, Tu, We, Th, Fr, Sa, Su        | 5     |\n * | Local day of week (formatting)  |  90 | e       | 2, 3, 4, ..., 1                   |       |\n * |                                 |     | eo      | 2nd, 3rd, ..., 1st                | 5     |\n * |                                 |     | ee      | 02, 03, ..., 01                   |       |\n * |                                 |     | eee     | Mon, Tue, Wed, ..., Sun           |       |\n * |                                 |     | eeee    | Monday, Tuesday, ..., Sunday      | 2     |\n * |                                 |     | eeeee   | M, T, W, T, F, S, S               |       |\n * |                                 |     | eeeeee  | Mo, Tu, We, Th, Fr, Sa, Su        |       |\n * | Local day of week (stand-alone) |  90 | c       | 2, 3, 4, ..., 1                   |       |\n * |                                 |     | co      | 2nd, 3rd, ..., 1st                | 5     |\n * |                                 |     | cc      | 02, 03, ..., 01                   |       |\n * |                                 |     | ccc     | Mon, Tue, Wed, ..., Sun           |       |\n * |                                 |     | cccc    | Monday, Tuesday, ..., Sunday      | 2     |\n * |                                 |     | ccccc   | M, T, W, T, F, S, S               |       |\n * |                                 |     | cccccc  | Mo, Tu, We, Th, Fr, Sa, Su        |       |\n * | AM, PM                          |  80 | a..aaa  | AM, PM                            |       |\n * |                                 |     | aaaa    | a.m., p.m.                        | 2     |\n * |                                 |     | aaaaa   | a, p                              |       |\n * | AM, PM, noon, midnight          |  80 | b..bbb  | AM, PM, noon, midnight            |       |\n * |                                 |     | bbbb    | a.m., p.m., noon, midnight        | 2     |\n * |                                 |     | bbbbb   | a, p, n, mi                       |       |\n * | Flexible day period             |  80 | B..BBB  | at night, in the morning, ...     |       |\n * |                                 |     | BBBB    | at night, in the morning, ...     | 2     |\n * |                                 |     | BBBBB   | at night, in the morning, ...     |       |\n * | Hour [1-12]                     |  70 | h       | 1, 2, ..., 11, 12                 |       |\n * |                                 |     | ho      | 1st, 2nd, ..., 11th, 12th         | 5     |\n * |                                 |     | hh      | 01, 02, ..., 11, 12               |       |\n * | Hour [0-23]                     |  70 | H       | 0, 1, 2, ..., 23                  |       |\n * |                                 |     | Ho      | 0th, 1st, 2nd, ..., 23rd          | 5     |\n * |                                 |     | HH      | 00, 01, 02, ..., 23               |       |\n * | Hour [0-11]                     |  70 | K       | 1, 2, ..., 11, 0                  |       |\n * |                                 |     | Ko      | 1st, 2nd, ..., 11th, 0th          | 5     |\n * |                                 |     | KK      | 01, 02, ..., 11, 00               |       |\n * | Hour [1-24]                     |  70 | k       | 24, 1, 2, ..., 23                 |       |\n * |                                 |     | ko      | 24th, 1st, 2nd, ..., 23rd         | 5     |\n * |                                 |     | kk      | 24, 01, 02, ..., 23               |       |\n * | Minute                          |  60 | m       | 0, 1, ..., 59                     |       |\n * |                                 |     | mo      | 0th, 1st, ..., 59th               | 5     |\n * |                                 |     | mm      | 00, 01, ..., 59                   |       |\n * | Second                          |  50 | s       | 0, 1, ..., 59                     |       |\n * |                                 |     | so      | 0th, 1st, ..., 59th               | 5     |\n * |                                 |     | ss      | 00, 01, ..., 59                   |       |\n * | Seconds timestamp               |  40 | t       | 512969520                         |       |\n * |                                 |     | tt      | ...                               | 2     |\n * | Fraction of second              |  30 | S       | 0, 1, ..., 9                      |       |\n * |                                 |     | SS      | 00, 01, ..., 99                   |       |\n * |                                 |     | SSS     | 000, 001, ..., 999                |       |\n * |                                 |     | SSSS    | ...                               | 2     |\n * | Milliseconds timestamp          |  20 | T       | 512969520900                      |       |\n * |                                 |     | TT      | ...                               | 2     |\n * | Timezone (ISO-8601 w/ Z)        |  10 | X       | -08, +0530, Z                     |       |\n * |                                 |     | XX      | -0800, +0530, Z                   |       |\n * |                                 |     | XXX     | -08:00, +05:30, Z                 |       |\n * |                                 |     | XXXX    | -0800, +0530, Z, +123456          | 2     |\n * |                                 |     | XXXXX   | -08:00, +05:30, Z, +12:34:56      |       |\n * | Timezone (ISO-8601 w/o Z)       |  10 | x       | -08, +0530, +00                   |       |\n * |                                 |     | xx      | -0800, +0530, +0000               |       |\n * |                                 |     | xxx     | -08:00, +05:30, +00:00            | 2     |\n * |                                 |     | xxxx    | -0800, +0530, +0000, +123456      |       |\n * |                                 |     | xxxxx   | -08:00, +05:30, +00:00, +12:34:56 |       |\n * | Long localized date             |  NA | P       | 05/29/1453                        | 5,8   |\n * |                                 |     | PP      | May 29, 1453                      |       |\n * |                                 |     | PPP     | May 29th, 1453                    |       |\n * |                                 |     | PPPP    | Sunday, May 29th, 1453            | 2,5,8 |\n * | Long localized time             |  NA | p       | 12:00 AM                          | 5,8   |\n * |                                 |     | pp      | 12:00:00 AM                       |       |\n * | Combination of date and time    |  NA | Pp      | 05/29/1453, 12:00 AM              |       |\n * |                                 |     | PPpp    | May 29, 1453, 12:00:00 AM         |       |\n * |                                 |     | PPPpp   | May 29th, 1453 at ...             |       |\n * |                                 |     | PPPPpp  | Sunday, May 29th, 1453 at ...     | 2,5,8 |\n * Notes:\n * 1. \"Formatting\" units (e.g. formatting quarter) in the default en-US locale\n *    are the same as \"stand-alone\" units, but are different in some languages.\n *    \"Formatting\" units are declined according to the rules of the language\n *    in the context of a date. \"Stand-alone\" units are always nominative singular.\n *    In `format` function, they will produce different result:\n *\n *    `format(new Date(2017, 10, 6), 'do LLLL', {locale: cs}) //=> '6. listopad'`\n *\n *    `format(new Date(2017, 10, 6), 'do MMMM', {locale: cs}) //=> '6. listopadu'`\n *\n *    `parse` will try to match both formatting and stand-alone units interchangably.\n *\n * 2. Any sequence of the identical letters is a pattern, unless it is escaped by\n *    the single quote characters (see below).\n *    If the sequence is longer than listed in table:\n *    - for numerical units (`yyyyyyyy`) `parse` will try to match a number\n *      as wide as the sequence\n *    - for text units (`MMMMMMMM`) `parse` will try to match the widest variation of the unit.\n *      These variations are marked with \"2\" in the last column of the table.\n *\n * 3. `QQQQQ` and `qqqqq` could be not strictly numerical in some locales.\n *    These tokens represent the shortest form of the quarter.\n *\n * 4. The main difference between `y` and `u` patterns are B.C. years:\n *\n *    | Year | `y` | `u` |\n *    |------|-----|-----|\n *    | AC 1 |   1 |   1 |\n *    | BC 1 |   1 |   0 |\n *    | BC 2 |   2 |  -1 |\n *\n *    Also `yy` will try to guess the century of two digit year by proximity with `referenceDate`:\n *\n *    `parse('50', 'yy', new Date(2018, 0, 1)) //=> Sat Jan 01 2050 00:00:00`\n *\n *    `parse('75', 'yy', new Date(2018, 0, 1)) //=> Wed Jan 01 1975 00:00:00`\n *\n *    while `uu` will just assign the year as is:\n *\n *    `parse('50', 'uu', new Date(2018, 0, 1)) //=> Sat Jan 01 0050 00:00:00`\n *\n *    `parse('75', 'uu', new Date(2018, 0, 1)) //=> Tue Jan 01 0075 00:00:00`\n *\n *    The same difference is true for local and ISO week-numbering years (`Y` and `R`),\n *    except local week-numbering years are dependent on `options.weekStartsOn`\n *    and `options.firstWeekContainsDate` (compare [setISOWeekYear](https://date-fns.org/docs/setISOWeekYear)\n *    and [setWeekYear](https://date-fns.org/docs/setWeekYear)).\n *\n * 5. These patterns are not in the Unicode Technical Standard #35:\n *    - `i`: ISO day of week\n *    - `I`: ISO week of year\n *    - `R`: ISO week-numbering year\n *    - `o`: ordinal number modifier\n *    - `P`: long localized date\n *    - `p`: long localized time\n *\n * 6. `YY` and `YYYY` tokens represent week-numbering years but they are often confused with years.\n *    You should enable `options.useAdditionalWeekYearTokens` to use them. See: https://github.com/date-fns/date-fns/blob/master/docs/unicodeTokens.md\n *\n * 7. `D` and `DD` tokens represent days of the year but they are ofthen confused with days of the month.\n *    You should enable `options.useAdditionalDayOfYearTokens` to use them. See: https://github.com/date-fns/date-fns/blob/master/docs/unicodeTokens.md\n *\n * 8. `P+` tokens do not have a defined priority since they are merely aliases to other tokens based\n *    on the given locale.\n *\n *    using `en-US` locale: `P` => `MM/dd/yyyy`\n *    using `en-US` locale: `p` => `hh:mm a`\n *    using `pt-BR` locale: `P` => `dd/MM/yyyy`\n *    using `pt-BR` locale: `p` => `HH:mm`\n *\n * Values will be assigned to the date in the descending order of its unit's priority.\n * Units of an equal priority overwrite each other in the order of appearance.\n *\n * If no values of higher priority are parsed (e.g. when parsing string 'January 1st' without a year),\n * the values will be taken from 3rd argument `referenceDate` which works as a context of parsing.\n *\n * `referenceDate` must be passed for correct work of the function.\n * If you're not sure which `referenceDate` to supply, create a new instance of Date:\n * `parse('02/11/2014', 'MM/dd/yyyy', new Date())`\n * In this case parsing will be done in the context of the current date.\n * If `referenceDate` is `Invalid Date` or a value not convertible to valid `Date`,\n * then `Invalid Date` will be returned.\n *\n * The result may vary by locale.\n *\n * If `formatString` matches with `dateString` but does not provides tokens, `referenceDate` will be returned.\n *\n * If parsing failed, `Invalid Date` will be returned.\n * Invalid Date is a Date, whose time value is NaN.\n * Time value of Date: http://es5.github.io/#x15.9.1.1\n *\n * @typeParam DateType - The `Date` type, the function operates on. Gets inferred from passed arguments. Allows to use extensions like [`UTCDate`](https://github.com/date-fns/utc).\n *\n * @param dateStr - The string to parse\n * @param formatStr - The string of tokens\n * @param referenceDate - defines values missing from the parsed dateString\n * @param options - An object with options.\n *   see: https://github.com/date-fns/date-fns/blob/master/docs/unicodeTokens.md\n *   see: https://github.com/date-fns/date-fns/blob/master/docs/unicodeTokens.md\n *\n * @returns The parsed date\n *\n * @throws `options.locale` must contain `match` property\n * @throws use `yyyy` instead of `YYYY` for formatting years using [format provided] to the input [input provided]; see: https://github.com/date-fns/date-fns/blob/master/docs/unicodeTokens.md\n * @throws use `yy` instead of `YY` for formatting years using [format provided] to the input [input provided]; see: https://github.com/date-fns/date-fns/blob/master/docs/unicodeTokens.md\n * @throws use `d` instead of `D` for formatting days of the month using [format provided] to the input [input provided]; see: https://github.com/date-fns/date-fns/blob/master/docs/unicodeTokens.md\n * @throws use `dd` instead of `DD` for formatting days of the month using [format provided] to the input [input provided]; see: https://github.com/date-fns/date-fns/blob/master/docs/unicodeTokens.md\n * @throws format string contains an unescaped latin alphabet character\n *\n * @example\n * // Parse 11 February 2014 from middle-endian format:\n * var result = parse('02/11/2014', 'MM/dd/yyyy', new Date())\n * //=> Tue Feb 11 2014 00:00:00\n *\n * @example\n * // Parse 28th of February in Esperanto locale in the context of 2010 year:\n * import eo from 'date-fns/locale/eo'\n * var result = parse('28-a de februaro', \"do 'de' MMMM\", new Date(2010, 0, 1), {\n *   locale: eo\n * })\n * //=> Sun Feb 28 2010 00:00:00\n */\nexport function parse(dateStr, formatStr, referenceDate, options) {\n  const defaultOptions = getDefaultOptions();\n  const locale = options?.locale ?? defaultOptions.locale ?? defaultLocale;\n\n  const firstWeekContainsDate =\n    options?.firstWeekContainsDate ??\n    options?.locale?.options?.firstWeekContainsDate ??\n    defaultOptions.firstWeekContainsDate ??\n    defaultOptions.locale?.options?.firstWeekContainsDate ??\n    1;\n\n  const weekStartsOn =\n    options?.weekStartsOn ??\n    options?.locale?.options?.weekStartsOn ??\n    defaultOptions.weekStartsOn ??\n    defaultOptions.locale?.options?.weekStartsOn ??\n    0;\n\n  if (formatStr === \"\") {\n    if (dateStr === \"\") {\n      return toDate(referenceDate);\n    } else {\n      return constructFrom(referenceDate, NaN);\n    }\n  }\n\n  const subFnOptions = {\n    firstWeekContainsDate,\n    weekStartsOn,\n    locale,\n  };\n\n  // If timezone isn't specified, it will be set to the system timezone\n  const setters = [new DateToSystemTimezoneSetter()];\n\n  const tokens = formatStr\n    .match(longFormattingTokensRegExp)\n    .map((substring) => {\n      const firstCharacter = substring[0];\n      if (firstCharacter in longFormatters) {\n        const longFormatter = longFormatters[firstCharacter];\n        return longFormatter(substring, locale.formatLong);\n      }\n      return substring;\n    })\n    .join(\"\")\n    .match(formattingTokensRegExp);\n\n  const usedTokens = [];\n\n  for (let token of tokens) {\n    if (\n      !options?.useAdditionalWeekYearTokens &&\n      isProtectedWeekYearToken(token)\n    ) {\n      warnOrThrowProtectedError(token, formatStr, dateStr);\n    }\n    if (\n      !options?.useAdditionalDayOfYearTokens &&\n      isProtectedDayOfYearToken(token)\n    ) {\n      warnOrThrowProtectedError(token, formatStr, dateStr);\n    }\n\n    const firstCharacter = token[0];\n    const parser = parsers[firstCharacter];\n    if (parser) {\n      const { incompatibleTokens } = parser;\n      if (Array.isArray(incompatibleTokens)) {\n        const incompatibleToken = usedTokens.find(\n          (usedToken) =>\n            incompatibleTokens.includes(usedToken.token) ||\n            usedToken.token === firstCharacter,\n        );\n        if (incompatibleToken) {\n          throw new RangeError(\n            `The format string mustn't contain \\`${incompatibleToken.fullToken}\\` and \\`${token}\\` at the same time`,\n          );\n        }\n      } else if (parser.incompatibleTokens === \"*\" && usedTokens.length > 0) {\n        throw new RangeError(\n          `The format string mustn't contain \\`${token}\\` and any other token at the same time`,\n        );\n      }\n\n      usedTokens.push({ token: firstCharacter, fullToken: token });\n\n      const parseResult = parser.run(\n        dateStr,\n        token,\n        locale.match,\n        subFnOptions,\n      );\n\n      if (!parseResult) {\n        return constructFrom(referenceDate, NaN);\n      }\n\n      setters.push(parseResult.setter);\n\n      dateStr = parseResult.rest;\n    } else {\n      if (firstCharacter.match(unescapedLatinCharacterRegExp)) {\n        throw new RangeError(\n          \"Format string contains an unescaped latin alphabet character `\" +\n            firstCharacter +\n            \"`\",\n        );\n      }\n\n      // Replace two single quote characters with one single quote character\n      if (token === \"''\") {\n        token = \"'\";\n      } else if (firstCharacter === \"'\") {\n        token = cleanEscapedString(token);\n      }\n\n      // Cut token from string, or, if string doesn't match the token, return Invalid Date\n      if (dateStr.indexOf(token) === 0) {\n        dateStr = dateStr.slice(token.length);\n      } else {\n        return constructFrom(referenceDate, NaN);\n      }\n    }\n  }\n\n  // Check if the remaining input contains something other than whitespace\n  if (dateStr.length > 0 && notWhitespaceRegExp.test(dateStr)) {\n    return constructFrom(referenceDate, NaN);\n  }\n\n  const uniquePrioritySetters = setters\n    .map((setter) => setter.priority)\n    .sort((a, b) => b - a)\n    .filter((priority, index, array) => array.indexOf(priority) === index)\n    .map((priority) =>\n      setters\n        .filter((setter) => setter.priority === priority)\n        .sort((a, b) => b.subPriority - a.subPriority),\n    )\n    .map((setterArray) => setterArray[0]);\n\n  let date = toDate(referenceDate);\n\n  if (isNaN(date.getTime())) {\n    return constructFrom(referenceDate, NaN);\n  }\n\n  const flags = {};\n  for (const setter of uniquePrioritySetters) {\n    if (!setter.validate(date, subFnOptions)) {\n      return constructFrom(referenceDate, NaN);\n    }\n\n    const result = setter.set(date, flags, subFnOptions);\n    // Result is tuple (date, flags)\n    if (Array.isArray(result)) {\n      date = result[0];\n      Object.assign(flags, result[1]);\n      // Result is date\n    } else {\n      date = result;\n    }\n  }\n\n  return constructFrom(referenceDate, date);\n}\n\nfunction cleanEscapedString(input) {\n  return input.match(escapedStringRegExp)[1].replace(doubleQuoteRegExp, \"'\");\n}\n\n// Fallback for modularized imports:\nexport default parse;\n","import { getDefaultOptions as getInternalDefaultOptions } from \"./_lib/defaultOptions.mjs\";\n\n/**\n * @name getDefaultOptions\n * @category Common Helpers\n * @summary Get default options.\n * @pure false\n *\n * @description\n * Returns an object that contains defaults for\n * `options.locale`, `options.weekStartsOn` and `options.firstWeekContainsDate`\n * arguments for all functions.\n *\n * You can change these with [setDefaultOptions](https://date-fns.org/docs/setDefaultOptions).\n *\n * @returns The default options\n *\n * @example\n * const result = getDefaultOptions()\n * //=> {}\n *\n * @example\n * setDefaultOptions({ weekStarsOn: 1, firstWeekContainsDate: 4 })\n * const result = getDefaultOptions()\n * //=> { weekStarsOn: 1, firstWeekContainsDate: 4 }\n */\nexport function getDefaultOptions() {\n  return Object.assign({}, getInternalDefaultOptions());\n}\n\n// Fallback for modularized imports:\nexport default getDefaultOptions;\n","import { format, parse } from 'date-fns';\n\nexport default class JSONProcessor {\n\n    weatherJSON = {};\n\n    static init(rawJSON) {\n\n        this.weatherJSON = {\n            'city': rawJSON.resolvedAddress,\n            'localDate': rawJSON.days[0].datetime,\n            'currentConditions': {\n                'cloudCover': rawJSON.currentConditions.cloudcover,\n                'conditions': this.#formatConditions(rawJSON.currentConditions.conditions),\n                'time': rawJSON.currentConditions.datetime, // time of the reading\n                'feelsLike': rawJSON.currentConditions.feelslike,\n                'humidity': rawJSON.currentConditions.humidity,\n                'icon': rawJSON.currentConditions.icon,\n                'precip': rawJSON.currentConditions.precip,\n                'pressure': rawJSON.currentConditions.pressure,\n                'snow': rawJSON.currentConditions.snow,\n                'sunrise': rawJSON.currentConditions.sunrise,\n                'temp': rawJSON.currentConditions.temp,\n                'uvindex': rawJSON.currentConditions.uvindex,\n                'wind': {\n                    'dir': rawJSON.currentConditions.winddir,\n                    'gust': rawJSON.currentConditions.windgust,\n                    'speed': rawJSON.currentConditions.windspeed\n                }\n            },\n            'today': {\n                'hourlyForecasts': rawJSON.days[0].hours,\n                'tempMax': rawJSON.days[0].tempmax,\n                'tempMin': rawJSON.days[0].tempmin\n            },\n            'sevenDays': rawJSON.days.slice(1,\n                8)\n        };\n        // console.log(this.weatherJSON);\n\n    }\n\n    static getSevenDays() {\n\n        const days = [];\n\n        for (let day of this.weatherJSON.sevenDays) {\n\n            days.push({\n                [`${format(day.datetime.replace(/-/g, '\\/'), 'iiii, MMMM do')}`]: {\n                    'temp': day.temp,\n                    'tempMin': day.tempmin,\n                    'tempMax': day.tempmax,\n                    'conditions': this.#formatConditions(day.conditions),\n                    'icon': day.icon\n                }\n            });\n\n        }\n\n        return days;\n\n    }\n\n    static getHourly() {\n\n        const hours = [];\n        // console.log(this.weatherJSON.today.hourlyForecasts);\n\n        for (let hour of this.weatherJSON.today.hourlyForecasts) {\n\n            hours.push({\n                [`${format(parse(\n                    hour.datetime, 'HH:mm:ss', new Date()\n                ), 'h  b')}`]: {\n                    'temp': hour.temp,\n                    'conditions': hour.conditions,\n                    'icon': hour.icon\n\n                }\n            });\n\n        }\n\n        // console.log(hours);\n\n        return hours;\n\n    }\n\n    static getCurrentConditions() {\n\n        return {\n            'city': this.weatherJSON.city,\n            'date': `${format(this.weatherJSON.localDate,\n                'iiii, MMMM do, yyyy')}`,\n            'time': format(parse(\n                this.weatherJSON.currentConditions.time,\n                'HH:mm:ss',\n                new Date()\n            ), 'p'),\n            'temp': this.weatherJSON.currentConditions.temp,\n            'tempMin': this.weatherJSON.today.tempMin,\n            'tempMax': this.weatherJSON.today.tempMax,\n            'conditions': this.weatherJSON.currentConditions.conditions,\n            'icon': this.weatherJSON.currentConditions.icon,\n            'feelsLike': this.weatherJSON.currentConditions.feelsLike,\n            'humidity': this.weatherJSON.currentConditions.humidity,\n            'precip': this.weatherJSON.currentConditions.precip,\n            'pressure': this.weatherJSON.currentConditions.pressure,\n            'snow': this.weatherJSON.currentConditions.snow,\n            'sunrise': format(parse(\n                this.weatherJSON.currentConditions.sunrise,\n                'HH:mm:ss',\n                new Date()\n            ), 'h:mm b'),\n            'uvindex': this.weatherJSON.currentConditions.uvindex,\n            'wind': {\n                'dir': this.weatherJSON.currentConditions.winddir,\n                'gust': this.weatherJSON.currentConditions.windgust,\n                'speed': this.weatherJSON.currentConditions.wind.speed\n            }\n        };\n\n    }\n\n\n    static #formatConditions(conditions) {\n\n        if (conditions.includes(',')) {\n\n            let index = conditions.indexOf(',');\n            // console.log(conditions.slice(0, index));\n            return conditions.slice(0, index);\n\n        }\n\n        return conditions.replace(' ', '-');\n\n    }\n\n    static printJSON() {\n\n        console.log(this.weatherJSON);\n\n    }\n\n}","import WeatherAPI from './WeatherAPI.js';\nimport JSONProcessor from './JSONProcessor.js';\nimport jsonData from './demo-data.json';\n\nexport default class DOMController {\n\n    static {\n\n        console.log('DOMController initiating...');\n        this.searchBtn = document.querySelector('#submit-search');\n        this.searchBar = document.querySelector('#city-search');\n\n        // this.altButtons();\n        this.setupSearchBtn();\n\n    }\n\n    static setupSearchBtn() {\n\n        this.searchBtn.addEventListener('click',\n            () => {\n\n                WeatherAPI.sendRequest(this.getCity()).then((json) => {\n\n                    JSONProcessor.init(json);\n                    const mainDisplay = document.querySelector('#main-display-container');\n                    this.renderCurrentConditions();\n                    this.renderSevenDays();\n                    this.renderHourly();\n                    mainDisplay.style.display = 'block';\n\n                }).\n                    catch((err) => {\n\n                        console.error(err);\n                        this.searchBar.setCustomValidity('Something went wrong! Please try again.');\n                        this.searchBar.reportValidity();\n                        setTimeout(() => {\n\n                            this.searchBar.setCustomValidity('');\n\n                        }, 5000);\n\n                    });\n\n            });\n\n    }\n\n    static altButtons() {\n\n        this.searchBtn.addEventListener('click',\n            () => {\n\n                JSONProcessor.init(jsonData);\n                const mainDisplay = document.querySelector('#main-display-container');\n                this.renderCurrentConditions();\n                this.renderSevenDays();\n                this.renderHourly();\n                mainDisplay.style.display = 'block';\n\n            });\n\n\n    }\n\n    static renderCurrentConditions() {\n\n        const currentConditions = document.querySelector('#current-conditions');\n        const data = JSONProcessor.getCurrentConditions();\n\n        currentConditions.innerHTML = `\n        <div id='current-conditions-main'>\n        <h2 id=\"city\">${data.city}</h2>\n        <h3 id=\"datetime\">${data.date}<br>${data.time}</h3>\n        <h1 id=\"temp\" data-unit='c'>${this.#convertToCelsius(data.temp)}</h1>\n        <div id='hi-low-temp'>High: <span data-unit='c'>${this.#convertToCelsius(data.tempMax)}</span><br>Low: <span data-unit='c'>${this.#convertToCelsius(data.tempMin)}</span></div>\n        <button id='unit-switch'></button>\n        <p id=\"conditions\" data-icon=${data.icon}>${data.conditions}</p>\n        <div id='expand-details-btn' class='details-hidden'></div>\n        </div>\n        <div id='current-conditions-details' style='display: none;'>\n        <h3>Details:</h3>\n        <p>Feels like: <span data-unit='c'>${this.#convertToCelsius(data.feelsLike)}</span></p>\n        <p>Humidity: <span id=\"humidity\">${data.humidity}%</span></p>\n        <p>Precipitation: <span id=\"precip\">${data.precip} inches</span></p>\n        <p>Pressure: <span id=\"pressure\">${data.pressure} mb</span></p>\n        <p>Sunrise: <span id=\"sunrise\">${data.sunrise}</span></p>\n        <p>UV Index: <span id='uv' data-uv='${data.uvindex}'>${data.uvindex}</p>\n        <p>Wind: <span id=\"windspeed\">${data.wind.speed} mph</span></p>\n        </div>\n        `;\n\n        this.#initTempUnitSwitchButton(currentConditions.querySelector('#unit-switch'));\n        this.#createDetailsButton();\n\n\n    }\n\n    static #createDetailsButton() {\n\n        const btn = document.querySelector('#expand-details-btn');\n\n        btn.addEventListener('click', () => {\n\n            const detailsDiv = document.querySelector('#current-conditions-details');\n            if (detailsDiv.style.display !== 'grid') {\n\n                detailsDiv.style.display = 'grid';\n                btn.classList.toggle('details-shown');\n\n            } else {\n\n                detailsDiv.style.display = 'none';\n                btn.classList.toggle('details-shown');\n\n            }\n\n\n        });\n\n    }\n\n    static renderSevenDays() {\n\n        const sevenDays = document.querySelector('#seven-day');\n        const data = JSONProcessor.getSevenDays();\n\n        sevenDays.innerHTML = '';\n\n        for (let day of data) {\n\n            sevenDays.innerHTML += `\n            <div class='seven-day-card'>\n            <h3>${Object.keys(day)[0]}</h3>\n            <h1 id='temp' data-unit='c'>${this.#convertToCelsius(day[Object.keys(day)].temp)}</h1>\n            <p class=\"conditions\" data-icon=${day[Object.keys(day)].icon}></p>\n            </div>\n            `;\n\n        }\n\n    }\n\n    static renderHourly() {\n\n        const hourly = document.querySelector('#today-hourly-conditions');\n        const data = JSONProcessor.getHourly();\n\n        hourly.innerHTML = '';\n\n        for (let hour of data) {\n\n            hourly.innerHTML += `\n            <div class='hourly-card'>\n            <h3>${Object.keys(hour)[0]}</h3>\n            <h1 id='temp' data-unit='c'>${this.#convertToCelsius(hour[Object.keys(hour)].temp)}</h1>\n            <p class=\"conditions\" data-icon=${hour[Object.keys(hour)].icon}></p>\n            </div>\n            `;\n\n        }\n\n    }\n\n    static #convertToCelsius(temp) {\n\n        return Math.round((temp - 32) / 1.8 * 10) / 10;\n\n    }\n\n    static #initTempUnitSwitchButton(button) {\n\n        button.innerHTML = `\n        <span class='button-unit unit-selected'>°C</span> \n        <span class='button-unit'>°F </span>`;\n\n        button.addEventListener('click',\n            () => {\n\n                for (let child of button.children) {\n\n                    child.classList.toggle('unit-selected');\n\n                }\n\n                // change any other elements with temperature to data-unt-\n                this.#switchTempUnits();\n\n            });\n\n    }\n\n    static #switchTempUnits() {\n\n        let tempElements = document.querySelectorAll('[data-unit]');\n        // console.log(tempElements.length);\n\n        for (let elem of tempElements) {\n\n            switch (elem.dataset.unit) {\n\n                case 'c':\n                    elem.dataset.unit = 'f';\n                    elem.innerHTML = Math.round((elem.innerHTML * 1.8 + 32) * 10) / 10;\n                    break;\n                case 'f':\n                    elem.dataset.unit = 'c';\n                    elem.innerHTML = Math.round((elem.innerHTML - 32) / 1.8 * 10) / 10;\n                    break;\n                default:\n                    break;\n\n            }\n\n        }\n\n    }\n\n    // build page functions:\n    // render 7 day forecast tab\n\n    static getCity() {\n\n        return this.searchBar.value;\n\n    }\n\n}"],"names":["___CSS_LOADER_URL_IMPORT_0___","URL","___CSS_LOADER_URL_IMPORT_1___","___CSS_LOADER_URL_IMPORT_2___","___CSS_LOADER_URL_IMPORT_3___","___CSS_LOADER_URL_IMPORT_4___","___CSS_LOADER_URL_IMPORT_5___","___CSS_LOADER_URL_IMPORT_6___","___CSS_LOADER_URL_IMPORT_7___","___CSS_LOADER_URL_IMPORT_8___","___CSS_LOADER_URL_IMPORT_9___","___CSS_LOADER_URL_IMPORT_10___","___CSS_LOADER_EXPORT___","___CSS_LOADER_URL_REPLACEMENT_0___","___CSS_LOADER_URL_REPLACEMENT_1___","___CSS_LOADER_URL_REPLACEMENT_2___","___CSS_LOADER_URL_REPLACEMENT_3___","___CSS_LOADER_URL_REPLACEMENT_4___","___CSS_LOADER_URL_REPLACEMENT_5___","___CSS_LOADER_URL_REPLACEMENT_6___","___CSS_LOADER_URL_REPLACEMENT_7___","___CSS_LOADER_URL_REPLACEMENT_8___","___CSS_LOADER_URL_REPLACEMENT_9___","___CSS_LOADER_URL_REPLACEMENT_10___","push","module","id","exports","cssWithMappingToString","list","toString","this","map","item","content","needLayer","concat","length","join","i","modules","media","dedupe","supports","layer","undefined","alreadyImportedModules","k","_k","url","options","String","__esModule","default","test","slice","hash","needQuotes","replace","cssMapping","btoa","base64","unescape","encodeURIComponent","JSON","stringify","data","sourceMapping","stylesInDOM","getIndexByIdentifier","identifier","result","modulesToDom","idCountMap","identifiers","base","count","indexByIdentifier","obj","css","sourceMap","references","updater","addElementStyle","byIndex","splice","api","domAPI","update","newObj","remove","lastIdentifiers","newList","index","newLastIdentifiers","_i","_index","memo","insert","style","target","styleTarget","document","querySelector","window","HTMLIFrameElement","contentDocument","head","e","getTarget","Error","appendChild","element","createElement","setAttributes","attributes","styleElement","nonce","setAttribute","insertStyleElement","styleTagTransform","apply","parentNode","removeChild","removeStyleElement","styleSheet","cssText","firstChild","createTextNode","__webpack_module_cache__","__webpack_require__","moduleId","cachedModule","__webpack_modules__","m","n","getter","d","a","definition","key","o","Object","defineProperty","enumerable","get","g","globalThis","Function","prop","prototype","hasOwnProperty","call","scriptUrl","importScripts","location","currentScript","src","scripts","getElementsByTagName","p","b","baseURI","self","href","nc","locals","sendRequest","city","fetch","queryURL","json","formatDistanceLocale","lessThanXSeconds","one","other","xSeconds","halfAMinute","lessThanXMinutes","xMinutes","aboutXHours","xHours","xDays","aboutXWeeks","xWeeks","aboutXMonths","xMonths","aboutXYears","xYears","overXYears","almostXYears","buildFormatLongFn","args","width","defaultWidth","formats","formatLong","date","full","long","medium","short","time","dateTime","formatRelativeLocale","lastWeek","yesterday","today","tomorrow","nextWeek","buildLocalizeFn","value","valuesArray","context","formattingValues","defaultFormattingWidth","values","argumentCallback","localize","ordinalNumber","dirtyNumber","_options","number","Number","rem100","era","narrow","abbreviated","wide","quarter","month","day","dayPeriod","am","pm","midnight","noon","morning","afternoon","evening","night","buildMatchFn","string","matchPattern","matchPatterns","defaultMatchWidth","matchResult","match","matchedString","parsePatterns","defaultParseWidth","Array","isArray","array","predicate","findIndex","object","findKey","valueCallback","rest","parsePattern","parseInt","parseResult","any","enUS","code","formatDistance","token","tokenValue","addSuffix","comparison","formatRelative","_date","_baseDate","weekStartsOn","firstWeekContainsDate","defaultOptions","getDefaultOptions","Math","pow","millisecondsInWeek","millisecondsInDay","toDate","argument","argStr","Date","constructor","NaN","startOfDay","setHours","getTimezoneOffsetInMilliseconds","utcDate","UTC","getFullYear","getMonth","getDate","getHours","getMinutes","getSeconds","getMilliseconds","setUTCFullYear","constructFrom","getDayOfYear","dateLeft","dateRight","startOfDayLeft","startOfDayRight","timestampLeft","timestampRight","round","differenceInCalendarDays","cleanDate","setFullYear","startOfYear","startOfWeek","locale","getDay","diff","setDate","startOfISOWeek","getISOWeekYear","year","fourthOfJanuaryOfNextYear","startOfNextYear","fourthOfJanuaryOfThisYear","startOfThisYear","getTime","getISOWeek","fourthOfJanuary","startOfISOWeekYear","getWeekYear","firstWeekOfNextYear","firstWeekOfThisYear","getWeek","firstWeek","startOfWeekYear","addLeadingZeros","targetLength","abs","padStart","lightFormatters","y","signedYear","M","dayPeriodEnumValue","toUpperCase","h","H","s","S","numberOfDigits","milliseconds","trunc","formatters","G","unit","Y","signedWeekYear","weekYear","R","u","Q","ceil","q","L","w","week","I","isoWeek","D","dayOfYear","E","dayOfWeek","localDayOfWeek","c","isoDayOfWeek","toLowerCase","hours","B","K","X","_localize","timezoneOffset","getTimezoneOffset","formatTimezoneWithOptionalMinutes","formatTimezone","x","O","formatTimezoneShort","z","t","T","offset","delimiter","sign","absOffset","minutes","dateLongFormatter","pattern","timeLongFormatter","longFormatters","P","datePattern","timePattern","dateTimeFormat","dayOfYearTokenRE","weekYearTokenRE","throwTokens","isProtectedDayOfYearToken","isProtectedWeekYearToken","warnOrThrowProtectedError","format","input","_message","subject","message","console","warn","includes","RangeError","isValid","isNaN","formattingTokensRegExp","longFormattingTokensRegExp","escapedStringRegExp","doubleQuoteRegExp","unescapedLatinCharacterRegExp","formatStr","originalDate","parts","substring","firstCharacter","longFormatter","isToken","cleanEscapedString","preprocessor","formatterOptions","part","useAdditionalWeekYearTokens","useAdditionalDayOfYearTokens","formatter","matched","Setter","subPriority","validate","_utcDate","ValueSetter","validateValue","setValue","priority","super","set","flags","DateToSystemTimezoneSetter","timestampIsSet","fromDate","transpose","Parser","run","dateString","parse","setter","_value","numericPatterns","timezonePatterns","mapValue","parseFnResult","mapFn","parseNumericPattern","parseTimezonePattern","parseAnyDigitsSigned","parseNDigits","RegExp","parseNDigitsSigned","dayPeriodEnumToHours","normalizeTwoDigitYear","twoDigitYear","currentYear","isCommonEra","absCurrentYear","rangeEnd","isLeapYearIndex","DAYS_IN_MONTH","DAYS_IN_MONTH_LEAP_YEAR","addDays","amount","setDay","currentDay","delta","setISODay","getISODay","parsers","incompatibleTokens","isTwoDigitYear","normalizedTwoDigitYear","_flags","firstWeekOfYear","setMonth","setWeek","setISOWeek","isLeapYear","subpriority","wholeWeekDays","floor","isPM","setMinutes","setSeconds","setMilliseconds","notWhitespaceRegExp","dateStr","referenceDate","assign","subFnOptions","setters","tokens","usedTokens","parser","incompatibleToken","find","usedToken","fullToken","indexOf","uniquePrioritySetters","sort","filter","setterArray","JSONProcessor","weatherJSON","init","rawJSON","resolvedAddress","days","datetime","currentConditions","cloudcover","conditions","feelslike","humidity","icon","precip","pressure","snow","sunrise","temp","uvindex","winddir","windgust","windspeed","tempmax","tempmin","getSevenDays","sevenDays","getHourly","hour","hourlyForecasts","getCurrentConditions","localDate","tempMin","tempMax","feelsLike","wind","speed","printJSON","log","DOMController","searchBtn","searchBar","setupSearchBtn","addEventListener","getCity","then","mainDisplay","renderCurrentConditions","renderSevenDays","renderHourly","display","catch","err","error","setCustomValidity","reportValidity","setTimeout","altButtons","innerHTML","btn","detailsDiv","classList","toggle","keys","hourly","button","child","children","tempElements","querySelectorAll","elem","dataset"],"sourceRoot":""}